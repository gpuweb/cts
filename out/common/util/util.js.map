{"version":3,"file":"util.js","names":["Float16Array","SkipTestCase","globalTestConfig","keysOf","timeout","ErrorWithExtra","Error","constructor","baseOrMessage","newExtra","message","oldExtras","extra","enableDebugLogs","omitted","assert","condition","msg","assertOK","value","assertReject","expectedName","p","allowMissingStack","then","unreachable","ex","name","m","stack","skipTestCase","perf","performance","require","now","resolveOnTimeout","ms","Promise","resolve","PromiseTimeoutError","rejectOnTimeout","_resolve","reject","raceWithRejectOnTimeout","noRaceWithRejectOnTimeout","timeoutPromise","handle","finally","clearTimeout","race","assertNotSettledWithinTime","rejectWhenSettled","undefined","rejectWithoutUncaught","err","catch","isPlainObject","v","Object","getPrototypeOf","prototype","sortObjectByKey","sortedObject","k","keys","sort","objectEquals","x","y","distinguishSignedZero","Number","isNaN","is","Function","RegExp","valueOf","Array","isArray","length","Date","x1","y1","every","i","indexOf","range","n","fn","map","_","iterRange","mapLazy","xs","f","Symbol","iterator","count","predicate","ReorderOrders","forward","backward","shiftByHalf","kReorderOrderKeys","arr","len","half","firstHalf","splice","reorder","order","slice","reverse","TypedArrayBufferViewInstances","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","kTypedArrayBufferViews","result","kTypedArrayBufferViewKeys","kTypedArrayBufferViewConstructors","values","typedArrayParam","type","data","createTypedArray","typedArrayFromParam","param","subarrayAsU8","buf","start","ArrayBuffer","byteLength","byteOffset","BYTES_PER_ELEMENT","buffer","memcpy","src","dst","set","filterUniqueValueTestVariants","valueTestVariants","Map","mult","add","makeValueTestVariant","base","variant"],"sources":["../../../src/common/util/util.ts"],"sourcesContent":["import { Float16Array } from '../../external/petamoriken/float16/float16.js';\nimport { SkipTestCase } from '../framework/fixture.js';\nimport { globalTestConfig } from '../framework/test_config.js';\n\nimport { keysOf } from './data_tables.js';\nimport { timeout } from './timeout.js';\n\n/**\n * Error with arbitrary `extra` data attached, for debugging.\n * The extra data is omitted if not running the test in debug mode (`?debug=1`).\n */\nexport class ErrorWithExtra extends Error {\n  readonly extra: { [k: string]: unknown };\n\n  /**\n   * `extra` function is only called if in debug mode.\n   * If an `ErrorWithExtra` is passed, its message is used and its extras are passed through.\n   */\n  constructor(message: string, extra: () => {});\n  constructor(base: ErrorWithExtra, newExtra: () => {});\n  constructor(baseOrMessage: string | ErrorWithExtra, newExtra: () => {}) {\n    const message = typeof baseOrMessage === 'string' ? baseOrMessage : baseOrMessage.message;\n    super(message);\n\n    const oldExtras = baseOrMessage instanceof ErrorWithExtra ? baseOrMessage.extra : {};\n    this.extra = globalTestConfig.enableDebugLogs\n      ? { ...oldExtras, ...newExtra() }\n      : { omitted: 'pass ?debug=1' };\n  }\n}\n\n/**\n * Asserts `condition` is true. Otherwise, throws an `Error` with the provided message.\n */\nexport function assert(condition: boolean, msg?: string | (() => string)): asserts condition {\n  if (!condition) {\n    throw new Error(msg && (typeof msg === 'string' ? msg : msg()));\n  }\n}\n\n/** If the argument is an Error, throw it. Otherwise, pass it back. */\nexport function assertOK<T>(value: Error | T): T {\n  if (value instanceof Error) {\n    throw value;\n  }\n  return value;\n}\n\n/** Options for assertReject, shouldReject, and friends. */\nexport type ExceptionCheckOptions = { allowMissingStack?: boolean; message?: string };\n\n/**\n * Resolves if the provided promise rejects; rejects if it does not.\n */\nexport async function assertReject(\n  expectedName: string,\n  p: Promise<unknown>,\n  { allowMissingStack = false, message }: ExceptionCheckOptions = {}\n): Promise<void> {\n  await p.then(\n    () => {\n      unreachable(message);\n    },\n    ex => {\n      assert(ex instanceof Error, 'rejected with a non-Error object');\n      assert(ex.name === expectedName, `rejected with name ${ex.name} instead of ${expectedName}`);\n      // Asserted as expected\n      if (!allowMissingStack) {\n        const m = message ? ` (${message})` : '';\n        assert(typeof ex.stack === 'string', 'threw as expected, but missing stack' + m);\n      }\n    }\n  );\n}\n\n/**\n * Assert this code is unreachable. Unconditionally throws an `Error`.\n */\nexport function unreachable(msg?: string): never {\n  throw new Error(msg);\n}\n\n/**\n * Throw a `SkipTestCase` exception, which skips the test case.\n */\nexport function skipTestCase(msg: string): never {\n  throw new SkipTestCase(msg);\n}\n\n/**\n * The `performance` interface.\n * It is available in all browsers, but it is not in scope by default in Node.\n */\n/* eslint-disable-next-line n/no-restricted-require */\nconst perf = typeof performance !== 'undefined' ? performance : require('perf_hooks').performance;\n\n/**\n * Calls the appropriate `performance.now()` depending on whether running in a browser or Node.\n */\nexport function now(): number {\n  return perf.now();\n}\n\n/**\n * Returns a promise which resolves after the specified time.\n */\nexport function resolveOnTimeout(ms: number): Promise<void> {\n  return new Promise(resolve => {\n    timeout(() => {\n      resolve();\n    }, ms);\n  });\n}\n\nexport class PromiseTimeoutError extends Error {}\n\n/**\n * Returns a promise which rejects after the specified time.\n */\nexport function rejectOnTimeout(ms: number, msg: string): Promise<never> {\n  return new Promise((_resolve, reject) => {\n    timeout(() => {\n      reject(new PromiseTimeoutError(msg));\n    }, ms);\n  });\n}\n\n/**\n * Takes a promise `p`, and returns a new one which rejects if `p` takes too long,\n * and otherwise passes the result through.\n */\nexport function raceWithRejectOnTimeout<T>(p: Promise<T>, ms: number, msg: string): Promise<T> {\n  if (globalTestConfig.noRaceWithRejectOnTimeout) {\n    return p;\n  }\n  // Setup a promise that will reject after `ms` milliseconds. We cancel this timeout when\n  // `p` is finalized, so the JavaScript VM doesn't hang around waiting for the timer to\n  // complete, once the test runner has finished executing the tests.\n  const timeoutPromise = new Promise((_resolve, reject) => {\n    const handle = timeout(() => {\n      reject(new PromiseTimeoutError(msg));\n    }, ms);\n    p = p.finally(() => clearTimeout(handle));\n  });\n  return Promise.race([p, timeoutPromise]) as Promise<T>;\n}\n\n/**\n * Takes a promise `p` and returns a new one which rejects if `p` resolves or rejects,\n * and otherwise resolves after the specified time.\n */\nexport function assertNotSettledWithinTime(\n  p: Promise<unknown>,\n  ms: number,\n  msg: string\n): Promise<undefined> {\n  // Rejects regardless of whether p resolves or rejects.\n  const rejectWhenSettled = p.then(() => Promise.reject(new Error(msg)));\n  // Resolves after `ms` milliseconds.\n  const timeoutPromise = new Promise<undefined>(resolve => {\n    const handle = timeout(() => {\n      resolve(undefined);\n    }, ms);\n    void p.finally(() => clearTimeout(handle));\n  });\n  return Promise.race([rejectWhenSettled, timeoutPromise]);\n}\n\n/**\n * Returns a `Promise.reject()`, but also registers a dummy `.catch()` handler so it doesn't count\n * as an uncaught promise rejection in the runtime.\n */\nexport function rejectWithoutUncaught<T>(err: unknown): Promise<T> {\n  const p = Promise.reject(err);\n  // Suppress uncaught promise rejection.\n  p.catch(() => {});\n  return p;\n}\n\n/**\n * Returns true if v is a plain JavaScript object.\n */\nexport function isPlainObject(v: unknown) {\n  return !!v && Object.getPrototypeOf(v).constructor === Object.prototype.constructor;\n}\n\n/**\n * Makes a copy of a JS `object`, with the keys reordered into sorted order.\n */\nexport function sortObjectByKey(v: { [k: string]: unknown }): { [k: string]: unknown } {\n  const sortedObject: { [k: string]: unknown } = {};\n  for (const k of Object.keys(v).sort()) {\n    sortedObject[k] = v[k];\n  }\n  return sortedObject;\n}\n\n/**\n * Determines whether two JS values are equal, recursing into objects and arrays.\n * NaN is treated specially, such that `objectEquals(NaN, NaN)`. +/-0.0 are treated as equal\n * by default, but can be opted to be distinguished.\n * @param x the first JS values that get compared\n * @param y the second JS values that get compared\n * @param distinguishSignedZero if set to true, treat 0.0 and -0.0 as unequal. Default to false.\n */\nexport function objectEquals(\n  x: unknown,\n  y: unknown,\n  distinguishSignedZero: boolean = false\n): boolean {\n  if (typeof x !== 'object' || typeof y !== 'object') {\n    if (typeof x === 'number' && typeof y === 'number' && Number.isNaN(x) && Number.isNaN(y)) {\n      return true;\n    }\n    // Object.is(0.0, -0.0) is false while (0.0 === -0.0) is true. Other than +/-0.0 and NaN cases,\n    // Object.is works in the same way as ===.\n    return distinguishSignedZero ? Object.is(x, y) : x === y;\n  }\n  if (x === null || y === null) return x === y;\n  if (x.constructor !== y.constructor) return false;\n  if (x instanceof Function) return x === y;\n  if (x instanceof RegExp) return x === y;\n  if (x === y || x.valueOf() === y.valueOf()) return true;\n  if (Array.isArray(x) && Array.isArray(y) && x.length !== y.length) return false;\n  if (x instanceof Date) return false;\n  if (!(x instanceof Object)) return false;\n  if (!(y instanceof Object)) return false;\n\n  const x1 = x as { [k: string]: unknown };\n  const y1 = y as { [k: string]: unknown };\n  const p = Object.keys(x);\n  return Object.keys(y).every(i => p.indexOf(i) !== -1) && p.every(i => objectEquals(x1[i], y1[i]));\n}\n\n/**\n * Generates a range of values `fn(0)..fn(n-1)`.\n */\nexport function range<T>(n: number, fn: (i: number) => T): T[] {\n  return [...new Array(n)].map((_, i) => fn(i));\n}\n\n/**\n * Generates a range of values `fn(0)..fn(n-1)`.\n */\nexport function* iterRange<T>(n: number, fn: (i: number) => T): Iterable<T> {\n  for (let i = 0; i < n; ++i) {\n    yield fn(i);\n  }\n}\n\n/** Creates a (reusable) iterable object that maps `f` over `xs`, lazily. */\nexport function mapLazy<T, R>(xs: Iterable<T>, f: (x: T) => R): Iterable<R> {\n  return {\n    *[Symbol.iterator]() {\n      for (const x of xs) {\n        yield f(x);\n      }\n    },\n  };\n}\n\n/** Count the number of elements `x` for which `predicate(x)` is true. */\nexport function count<T>(xs: Iterable<T>, predicate: (x: T) => boolean): number {\n  let count = 0;\n  for (const x of xs) {\n    if (predicate(x)) count++;\n  }\n  return count;\n}\n\nconst ReorderOrders = {\n  forward: true,\n  backward: true,\n  shiftByHalf: true,\n};\nexport type ReorderOrder = keyof typeof ReorderOrders;\nexport const kReorderOrderKeys = keysOf(ReorderOrders);\n\n/**\n * Creates a new array from the given array with the first half\n * swapped with the last half.\n */\nexport function shiftByHalf<R>(arr: R[]): R[] {\n  const len = arr.length;\n  const half = (len / 2) | 0;\n  const firstHalf = arr.splice(0, half);\n  return [...arr, ...firstHalf];\n}\n\n/**\n * Creates a reordered array from the input array based on the Order\n */\nexport function reorder<R>(order: ReorderOrder, arr: R[]): R[] {\n  switch (order) {\n    case 'forward':\n      return arr.slice();\n    case 'backward':\n      return arr.slice().reverse();\n    case 'shiftByHalf': {\n      // should this be pseudo random?\n      return shiftByHalf(arr);\n    }\n  }\n}\n\nconst TypedArrayBufferViewInstances = [\n  new Uint8Array(),\n  new Uint8ClampedArray(),\n  new Uint16Array(),\n  new Uint32Array(),\n  new Int8Array(),\n  new Int16Array(),\n  new Int32Array(),\n  new Float16Array(),\n  new Float32Array(),\n  new Float64Array(),\n  new BigInt64Array(),\n  new BigUint64Array(),\n] as const;\n\nexport type TypedArrayBufferView = (typeof TypedArrayBufferViewInstances)[number];\n\nexport type TypedArrayBufferViewConstructor<A extends TypedArrayBufferView = TypedArrayBufferView> =\n  {\n    // Interface copied from Uint8Array, and made generic.\n    readonly prototype: A;\n    readonly BYTES_PER_ELEMENT: number;\n\n    new (): A;\n    new (elements: Iterable<number>): A;\n    new (array: ArrayLike<number> | ArrayBufferLike): A;\n    new (buffer: ArrayBufferLike, byteOffset?: number, length?: number): A;\n    new (length: number): A;\n\n    from(arrayLike: ArrayLike<number>): A;\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): A;\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): A;\n    of(...items: number[]): A;\n  };\n\nexport const kTypedArrayBufferViews: {\n  readonly [k: string]: TypedArrayBufferViewConstructor;\n} = {\n  ...(() => {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    const result: { [k: string]: any } = {};\n    for (const v of TypedArrayBufferViewInstances) {\n      result[v.constructor.name] = v.constructor;\n    }\n    return result;\n  })(),\n};\nexport const kTypedArrayBufferViewKeys = keysOf(kTypedArrayBufferViews);\nexport const kTypedArrayBufferViewConstructors = Object.values(kTypedArrayBufferViews);\n\ninterface TypedArrayMap {\n  Int8Array: Int8Array;\n  Uint8Array: Uint8Array;\n  Int16Array: Int16Array;\n  Uint16Array: Uint16Array;\n  Uint8ClampedArray: Uint8ClampedArray;\n  Int32Array: Int32Array;\n  Uint32Array: Uint32Array;\n  Float32Array: Float32Array;\n  Float64Array: Float64Array;\n  BigInt64Array: BigInt64Array;\n  BigUint64Array: BigUint64Array;\n}\n\ntype TypedArrayParam<K extends keyof TypedArrayMap> = {\n  type: K;\n  data: readonly number[];\n};\n\n/**\n * Creates a case parameter for a typedarray.\n *\n * You can't put typedarrays in case parameters directly so instead of\n *\n * ```\n * u.combine('data', [\n *   new Uint8Array([1, 2, 3]),\n *   new Float32Array([4, 5, 6]),\n * ])\n * ```\n *\n * You can use\n *\n * ```\n * u.combine('data', [\n *   typedArrayParam('Uint8Array' [1, 2, 3]),\n *   typedArrayParam('Float32Array' [4, 5, 6]),\n * ])\n * ```\n *\n * and then convert the params to typedarrays eg.\n *\n * ```\n *  .fn(t => {\n *    const data = t.params.data.map(v => typedArrayFromParam(v));\n *  })\n * ```\n */\nexport function typedArrayParam<K extends keyof TypedArrayMap>(\n  type: K,\n  data: number[]\n): TypedArrayParam<K> {\n  return { type, data };\n}\n\nexport function createTypedArray<K extends keyof TypedArrayMap>(\n  type: K,\n  data: readonly number[]\n): TypedArrayMap[K] {\n  return new kTypedArrayBufferViews[type](data) as TypedArrayMap[K];\n}\n\n/**\n * Converts a TypedArrayParam to a typedarray. See typedArrayParam\n */\nexport function typedArrayFromParam<K extends keyof TypedArrayMap>(\n  param: TypedArrayParam<K>\n): TypedArrayMap[K] {\n  const { type, data } = param;\n  return createTypedArray(type, data);\n}\n\nfunction subarrayAsU8(\n  buf: ArrayBuffer | TypedArrayBufferView,\n  { start = 0, length }: { start?: number; length?: number }\n): Uint8Array | Uint8ClampedArray {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, start, length);\n  } else if (buf instanceof Uint8Array || buf instanceof Uint8ClampedArray) {\n    // Don't wrap in new views if we don't need to.\n    if (start === 0 && (length === undefined || length === buf.byteLength)) {\n      return buf;\n    }\n  }\n  const byteOffset = buf.byteOffset + start * buf.BYTES_PER_ELEMENT;\n  const byteLength =\n    length !== undefined\n      ? length * buf.BYTES_PER_ELEMENT\n      : buf.byteLength - (byteOffset - buf.byteOffset);\n  return new Uint8Array(buf.buffer, byteOffset, byteLength);\n}\n\n/**\n * Copy a range of bytes from one ArrayBuffer or TypedArray to another.\n *\n * `start`/`length` are in elements (or in bytes, if ArrayBuffer).\n */\nexport function memcpy(\n  src: { src: ArrayBuffer | TypedArrayBufferView; start?: number; length?: number },\n  dst: { dst: ArrayBuffer | TypedArrayBufferView; start?: number }\n): void {\n  subarrayAsU8(dst.dst, dst).set(subarrayAsU8(src.src, src));\n}\n\n/**\n * Used to create a value that is specified by multiplying some runtime value\n * by a constant and then adding a constant to it.\n */\nexport interface ValueTestVariant {\n  mult: number;\n  add: number;\n}\n\n/**\n * Filters out SpecValues that are the same.\n */\nexport function filterUniqueValueTestVariants(valueTestVariants: ValueTestVariant[]) {\n  return new Map<string, ValueTestVariant>(\n    valueTestVariants.map(v => [`m:${v.mult},a:${v.add}`, v])\n  ).values();\n}\n\n/**\n * Used to create a value that is specified by multiplied some runtime value\n * by a constant and then adding a constant to it. This happens often in test\n * with limits that can only be known at runtime and yet we need a way to\n * add parameters to a test and those parameters must be constants.\n */\nexport function makeValueTestVariant(base: number, variant: ValueTestVariant) {\n  return base * variant.mult + variant.add;\n}\n"],"mappings":";;GAAA,SAASA,YAAY,QAAQ,+CAA+C,CAC5E,SAASC,YAAY,QAAQ,yBAAyB,CACtD,SAASC,gBAAgB,QAAQ,6BAA6B;;AAE9D,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,OAAO,QAAQ,cAAc;;AAEtC;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,SAASC,KAAK,CAAC;;;EAGxC;AACF;AACA;AACA;;;EAGEC,WAAWA,CAACC,aAAsC,EAAEC,QAAkB,EAAE;IACtE,MAAMC,OAAO,GAAG,OAAOF,aAAa,KAAK,QAAQ,GAAGA,aAAa,GAAGA,aAAa,CAACE,OAAO;IACzF,KAAK,CAACA,OAAO,CAAC;;IAEd,MAAMC,SAAS,GAAGH,aAAa,YAAYH,cAAc,GAAGG,aAAa,CAACI,KAAK,GAAG,CAAC,CAAC;IACpF,IAAI,CAACA,KAAK,GAAGV,gBAAgB,CAACW,eAAe;IACzC,EAAE,GAAGF,SAAS,EAAE,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/B,EAAEK,OAAO,EAAE,eAAe,CAAC,CAAC;EAClC;AACF;;AAEA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,SAAkB,EAAEC,GAA6B,EAAqB;EAC3F,IAAI,CAACD,SAAS,EAAE;IACd,MAAM,IAAIV,KAAK,CAACW,GAAG,KAAK,OAAOA,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC;EACjE;AACF;;AAEA;AACA,OAAO,SAASC,QAAQA,CAAIC,KAAgB,EAAK;EAC/C,IAAIA,KAAK,YAAYb,KAAK,EAAE;IAC1B,MAAMa,KAAK;EACb;EACA,OAAOA,KAAK;AACd;;AAEA;;;AAGA;AACA;AACA;AACA,OAAO,eAAeC,YAAYA;AAChCC,YAAoB;AACpBC,CAAmB;AACnB,EAAEC,iBAAiB,GAAG,KAAK,EAAEb,OAAO,CAAwB,CAAC,GAAG,CAAC,CAAC;AACnD;EACf,MAAMY,CAAC,CAACE,IAAI;IACV,MAAM;MACJC,WAAW,CAACf,OAAO,CAAC;IACtB,CAAC;IACD,CAAAgB,EAAE,KAAI;MACJX,MAAM,CAACW,EAAE,YAAYpB,KAAK,EAAE,kCAAkC,CAAC;MAC/DS,MAAM,CAACW,EAAE,CAACC,IAAI,KAAKN,YAAY,EAAG,sBAAqBK,EAAE,CAACC,IAAK,eAAcN,YAAa,EAAC,CAAC;MAC5F;MACA,IAAI,CAACE,iBAAiB,EAAE;QACtB,MAAMK,CAAC,GAAGlB,OAAO,GAAI,KAAIA,OAAQ,GAAE,GAAG,EAAE;QACxCK,MAAM,CAAC,OAAOW,EAAE,CAACG,KAAK,KAAK,QAAQ,EAAE,sCAAsC,GAAGD,CAAC,CAAC;MAClF;IACF;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA,OAAO,SAASH,WAAWA,CAACR,GAAY,EAAS;EAC/C,MAAM,IAAIX,KAAK,CAACW,GAAG,CAAC;AACtB;;AAEA;AACA;AACA;AACA,OAAO,SAASa,YAAYA,CAACb,GAAW,EAAS;EAC/C,MAAM,IAAIhB,YAAY,CAACgB,GAAG,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA,MAAMc,IAAI,GAAG,OAAOC,WAAW,KAAK,WAAW,GAAGA,WAAW,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACD,WAAW;;AAEjG;AACA;AACA;AACA,OAAO,SAASE,GAAGA,CAAA,EAAW;EAC5B,OAAOH,IAAI,CAACG,GAAG,CAAC,CAAC;AACnB;;AAEA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,EAAU,EAAiB;EAC1D,OAAO,IAAIC,OAAO,CAAC,CAAAC,OAAO,KAAI;IAC5BlC,OAAO,CAAC,MAAM;MACZkC,OAAO,CAAC,CAAC;IACX,CAAC,EAAEF,EAAE,CAAC;EACR,CAAC,CAAC;AACJ;;AAEA,OAAO,MAAMG,mBAAmB,SAASjC,KAAK,CAAC;;AAE/C;AACA;AACA;AACA,OAAO,SAASkC,eAAeA,CAACJ,EAAU,EAAEnB,GAAW,EAAkB;EACvE,OAAO,IAAIoB,OAAO,CAAC,CAACI,QAAQ,EAAEC,MAAM,KAAK;IACvCtC,OAAO,CAAC,MAAM;MACZsC,MAAM,CAAC,IAAIH,mBAAmB,CAACtB,GAAG,CAAC,CAAC;IACtC,CAAC,EAAEmB,EAAE,CAAC;EACR,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASO,uBAAuBA,CAAIrB,CAAa,EAAEc,EAAU,EAAEnB,GAAW,EAAc;EAC7F,IAAIf,gBAAgB,CAAC0C,yBAAyB,EAAE;IAC9C,OAAOtB,CAAC;EACV;EACA;EACA;EACA;EACA,MAAMuB,cAAc,GAAG,IAAIR,OAAO,CAAC,CAACI,QAAQ,EAAEC,MAAM,KAAK;IACvD,MAAMI,MAAM,GAAG1C,OAAO,CAAC,MAAM;MAC3BsC,MAAM,CAAC,IAAIH,mBAAmB,CAACtB,GAAG,CAAC,CAAC;IACtC,CAAC,EAAEmB,EAAE,CAAC;IACNd,CAAC,GAAGA,CAAC,CAACyB,OAAO,CAAC,MAAMC,YAAY,CAACF,MAAM,CAAC,CAAC;EAC3C,CAAC,CAAC;EACF,OAAOT,OAAO,CAACY,IAAI,CAAC,CAAC3B,CAAC,EAAEuB,cAAc,CAAC,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASK,0BAA0BA;AACxC5B,CAAmB;AACnBc,EAAU;AACVnB,GAAW;AACS;EACpB;EACA,MAAMkC,iBAAiB,GAAG7B,CAAC,CAACE,IAAI,CAAC,MAAMa,OAAO,CAACK,MAAM,CAAC,IAAIpC,KAAK,CAACW,GAAG,CAAC,CAAC,CAAC;EACtE;EACA,MAAM4B,cAAc,GAAG,IAAIR,OAAO,CAAY,CAAAC,OAAO,KAAI;IACvD,MAAMQ,MAAM,GAAG1C,OAAO,CAAC,MAAM;MAC3BkC,OAAO,CAACc,SAAS,CAAC;IACpB,CAAC,EAAEhB,EAAE,CAAC;IACN,KAAKd,CAAC,CAACyB,OAAO,CAAC,MAAMC,YAAY,CAACF,MAAM,CAAC,CAAC;EAC5C,CAAC,CAAC;EACF,OAAOT,OAAO,CAACY,IAAI,CAAC,CAACE,iBAAiB,EAAEN,cAAc,CAAC,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASQ,qBAAqBA,CAAIC,GAAY,EAAc;EACjE,MAAMhC,CAAC,GAAGe,OAAO,CAACK,MAAM,CAACY,GAAG,CAAC;EAC7B;EACAhC,CAAC,CAACiC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EACjB,OAAOjC,CAAC;AACV;;AAEA;AACA;AACA;AACA,OAAO,SAASkC,aAAaA,CAACC,CAAU,EAAE;EACxC,OAAO,CAAC,CAACA,CAAC,IAAIC,MAAM,CAACC,cAAc,CAACF,CAAC,CAAC,CAAClD,WAAW,KAAKmD,MAAM,CAACE,SAAS,CAACrD,WAAW;AACrF;;AAEA;AACA;AACA;AACA,OAAO,SAASsD,eAAeA,CAACJ,CAA2B,EAA4B;EACrF,MAAMK,YAAsC,GAAG,CAAC,CAAC;EACjD,KAAK,MAAMC,CAAC,IAAIL,MAAM,CAACM,IAAI,CAACP,CAAC,CAAC,CAACQ,IAAI,CAAC,CAAC,EAAE;IACrCH,YAAY,CAACC,CAAC,CAAC,GAAGN,CAAC,CAACM,CAAC,CAAC;EACxB;EACA,OAAOD,YAAY;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,YAAYA;AAC1BC,CAAU;AACVC,CAAU;AACVC,qBAA8B,GAAG,KAAK;AAC7B;EACT,IAAI,OAAOF,CAAC,KAAK,QAAQ,IAAI,OAAOC,CAAC,KAAK,QAAQ,EAAE;IAClD,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAI,OAAOC,CAAC,KAAK,QAAQ,IAAIE,MAAM,CAACC,KAAK,CAACJ,CAAC,CAAC,IAAIG,MAAM,CAACC,KAAK,CAACH,CAAC,CAAC,EAAE;MACxF,OAAO,IAAI;IACb;IACA;IACA;IACA,OAAOC,qBAAqB,GAAGX,MAAM,CAACc,EAAE,CAACL,CAAC,EAAEC,CAAC,CAAC,GAAGD,CAAC,KAAKC,CAAC;EAC1D;EACA,IAAID,CAAC,KAAK,IAAI,IAAIC,CAAC,KAAK,IAAI,EAAE,OAAOD,CAAC,KAAKC,CAAC;EAC5C,IAAID,CAAC,CAAC5D,WAAW,KAAK6D,CAAC,CAAC7D,WAAW,EAAE,OAAO,KAAK;EACjD,IAAI4D,CAAC,YAAYM,QAAQ,EAAE,OAAON,CAAC,KAAKC,CAAC;EACzC,IAAID,CAAC,YAAYO,MAAM,EAAE,OAAOP,CAAC,KAAKC,CAAC;EACvC,IAAID,CAAC,KAAKC,CAAC,IAAID,CAAC,CAACQ,OAAO,CAAC,CAAC,KAAKP,CAAC,CAACO,OAAO,CAAC,CAAC,EAAE,OAAO,IAAI;EACvD,IAAIC,KAAK,CAACC,OAAO,CAACV,CAAC,CAAC,IAAIS,KAAK,CAACC,OAAO,CAACT,CAAC,CAAC,IAAID,CAAC,CAACW,MAAM,KAAKV,CAAC,CAACU,MAAM,EAAE,OAAO,KAAK;EAC/E,IAAIX,CAAC,YAAYY,IAAI,EAAE,OAAO,KAAK;EACnC,IAAI,EAAEZ,CAAC,YAAYT,MAAM,CAAC,EAAE,OAAO,KAAK;EACxC,IAAI,EAAEU,CAAC,YAAYV,MAAM,CAAC,EAAE,OAAO,KAAK;;EAExC,MAAMsB,EAAE,GAAGb,CAA6B;EACxC,MAAMc,EAAE,GAAGb,CAA6B;EACxC,MAAM9C,CAAC,GAAGoC,MAAM,CAACM,IAAI,CAACG,CAAC,CAAC;EACxB,OAAOT,MAAM,CAACM,IAAI,CAACI,CAAC,CAAC,CAACc,KAAK,CAAC,CAAAC,CAAC,KAAI7D,CAAC,CAAC8D,OAAO,CAACD,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI7D,CAAC,CAAC4D,KAAK,CAAC,CAAAC,CAAC,KAAIjB,YAAY,CAACc,EAAE,CAACG,CAAC,CAAC,EAAEF,EAAE,CAACE,CAAC,CAAC,CAAC,CAAC;AACnG;;AAEA;AACA;AACA;AACA,OAAO,SAASE,KAAKA,CAAIC,CAAS,EAAEC,EAAoB,EAAO;EAC7D,OAAO,CAAC,GAAG,IAAIX,KAAK,CAACU,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEN,CAAC,KAAKI,EAAE,CAACJ,CAAC,CAAC,CAAC;AAC/C;;AAEA;AACA;AACA;AACA,OAAO,UAAUO,SAASA,CAAIJ,CAAS,EAAEC,EAAoB,EAAe;EAC1E,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,CAAC,EAAE,EAAEH,CAAC,EAAE;IAC1B,MAAMI,EAAE,CAACJ,CAAC,CAAC;EACb;AACF;;AAEA;AACA,OAAO,SAASQ,OAAOA,CAAOC,EAAe,EAAEC,CAAc,EAAe;EAC1E,OAAO;IACL,EAAEC,MAAM,CAACC,QAAQ,IAAI;MACnB,KAAK,MAAM5B,CAAC,IAAIyB,EAAE,EAAE;QAClB,MAAMC,CAAC,CAAC1B,CAAC,CAAC;MACZ;IACF;EACF,CAAC;AACH;;AAEA;AACA,OAAO,SAAS6B,KAAKA,CAAIJ,EAAe,EAAEK,SAA4B,EAAU;EAC9E,IAAID,KAAK,GAAG,CAAC;EACb,KAAK,MAAM7B,CAAC,IAAIyB,EAAE,EAAE;IAClB,IAAIK,SAAS,CAAC9B,CAAC,CAAC,EAAE6B,KAAK,EAAE;EAC3B;EACA,OAAOA,KAAK;AACd;;AAEA,MAAME,aAAa,GAAG;EACpBC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAE;AACf,CAAC;;AAED,OAAO,MAAMC,iBAAiB,GAAGnG,MAAM,CAAC+F,aAAa,CAAC;;AAEtD;AACA;AACA;AACA;AACA,OAAO,SAASG,WAAWA,CAAIE,GAAQ,EAAO;EAC5C,MAAMC,GAAG,GAAGD,GAAG,CAACzB,MAAM;EACtB,MAAM2B,IAAI,GAAID,GAAG,GAAG,CAAC,GAAI,CAAC;EAC1B,MAAME,SAAS,GAAGH,GAAG,CAACI,MAAM,CAAC,CAAC,EAAEF,IAAI,CAAC;EACrC,OAAO,CAAC,GAAGF,GAAG,EAAE,GAAGG,SAAS,CAAC;AAC/B;;AAEA;AACA;AACA;AACA,OAAO,SAASE,OAAOA,CAAIC,KAAmB,EAAEN,GAAQ,EAAO;EAC7D,QAAQM,KAAK;IACX,KAAK,SAAS;MACZ,OAAON,GAAG,CAACO,KAAK,CAAC,CAAC;IACpB,KAAK,UAAU;MACb,OAAOP,GAAG,CAACO,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC9B,KAAK,aAAa,CAAE;QAClB;QACA,OAAOV,WAAW,CAACE,GAAG,CAAC;MACzB;EACF;AACF;;AAEA,MAAMS,6BAA6B,GAAG;AACpC,IAAIC,UAAU,CAAC,CAAC;AAChB,IAAIC,iBAAiB,CAAC,CAAC;AACvB,IAAIC,WAAW,CAAC,CAAC;AACjB,IAAIC,WAAW,CAAC,CAAC;AACjB,IAAIC,SAAS,CAAC,CAAC;AACf,IAAIC,UAAU,CAAC,CAAC;AAChB,IAAIC,UAAU,CAAC,CAAC;AAChB,IAAIvH,YAAY,CAAC,CAAC;AAClB,IAAIwH,YAAY,CAAC,CAAC;AAClB,IAAIC,YAAY,CAAC,CAAC;AAClB,IAAIC,aAAa,CAAC,CAAC;AACnB,IAAIC,cAAc,CAAC,CAAC,CACZ;;;;;;;;;;;;;;;;;;;;;;;;;AAwBV,OAAO,MAAMC,sBAEZ;;AAAG;EACF,GAAG,CAAC,MAAM;;IAER,MAAMC,MAA4B,GAAG,CAAC,CAAC;IACvC,KAAK,MAAMpE,CAAC,IAAIuD,6BAA6B,EAAE;MAC7Ca,MAAM,CAACpE,CAAC,CAAClD,WAAW,CAACoB,IAAI,CAAC,GAAG8B,CAAC,CAAClD,WAAW;IAC5C;IACA,OAAOsH,MAAM;EACf,CAAC,EAAE;AACL,CAAC;AACD,OAAO,MAAMC,yBAAyB,GAAG3H,MAAM,CAACyH,sBAAsB,CAAC;AACvE,OAAO,MAAMG,iCAAiC,GAAGrE,MAAM,CAACsE,MAAM,CAACJ,sBAAsB,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,eAAeA;AAC7BC,IAAO;AACPC,IAAc;AACM;EACpB,OAAO,EAAED,IAAI,EAAEC,IAAI,CAAC,CAAC;AACvB;;AAEA,OAAO,SAASC,gBAAgBA;AAC9BF,IAAO;AACPC,IAAuB;AACL;EAClB,OAAO,IAAIP,sBAAsB,CAACM,IAAI,CAAC,CAACC,IAAI,CAAC;AAC/C;;AAEA;AACA;AACA;AACA,OAAO,SAASE,mBAAmBA;AACjCC,KAAyB;AACP;EAClB,MAAM,EAAEJ,IAAI,EAAEC,IAAI,CAAC,CAAC,GAAGG,KAAK;EAC5B,OAAOF,gBAAgB,CAACF,IAAI,EAAEC,IAAI,CAAC;AACrC;;AAEA,SAASI,YAAYA;AACnBC,GAAuC;AACvC,EAAEC,KAAK,GAAG,CAAC,EAAE3D,MAAM,CAAsC,CAAC;AAC1B;EAChC,IAAI0D,GAAG,YAAYE,WAAW,EAAE;IAC9B,OAAO,IAAIzB,UAAU,CAACuB,GAAG,EAAEC,KAAK,EAAE3D,MAAM,CAAC;EAC3C,CAAC,MAAM,IAAI0D,GAAG,YAAYvB,UAAU,IAAIuB,GAAG,YAAYtB,iBAAiB,EAAE;IACxE;IACA,IAAIuB,KAAK,KAAK,CAAC,KAAK3D,MAAM,KAAK1B,SAAS,IAAI0B,MAAM,KAAK0D,GAAG,CAACG,UAAU,CAAC,EAAE;MACtE,OAAOH,GAAG;IACZ;EACF;EACA,MAAMI,UAAU,GAAGJ,GAAG,CAACI,UAAU,GAAGH,KAAK,GAAGD,GAAG,CAACK,iBAAiB;EACjE,MAAMF,UAAU;EACd7D,MAAM,KAAK1B,SAAS;EAChB0B,MAAM,GAAG0D,GAAG,CAACK,iBAAiB;EAC9BL,GAAG,CAACG,UAAU,IAAIC,UAAU,GAAGJ,GAAG,CAACI,UAAU,CAAC;EACpD,OAAO,IAAI3B,UAAU,CAACuB,GAAG,CAACM,MAAM,EAAEF,UAAU,EAAED,UAAU,CAAC;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,MAAMA;AACpBC,GAAiF;AACjFC,GAAgE;AAC1D;EACNV,YAAY,CAACU,GAAG,CAACA,GAAG,EAAEA,GAAG,CAAC,CAACC,GAAG,CAACX,YAAY,CAACS,GAAG,CAACA,GAAG,EAAEA,GAAG,CAAC,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA,OAAO,SAASG,6BAA6BA,CAACC,iBAAqC,EAAE;EACnF,OAAO,IAAIC,GAAG;IACZD,iBAAiB,CAAC5D,GAAG,CAAC,CAAA/B,CAAC,KAAI,CAAE,KAAIA,CAAC,CAAC6F,IAAK,MAAK7F,CAAC,CAAC8F,GAAI,EAAC,EAAE9F,CAAC,CAAC;EAC1D,CAAC,CAACuE,MAAM,CAAC,CAAC;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASwB,oBAAoBA,CAACC,IAAY,EAAEC,OAAyB,EAAE;EAC5E,OAAOD,IAAI,GAAGC,OAAO,CAACJ,IAAI,GAAGI,OAAO,CAACH,GAAG;AAC1C"}