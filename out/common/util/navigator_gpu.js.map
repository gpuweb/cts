{"version":3,"file":"navigator_gpu.js","names":["globalTestConfig","ErrorWithExtra","assert","objectEquals","defaultGPUProvider","navigator","gpu","undefined","gpuProvider","setGPUProvider","provider","impl","s_defaultLimits","defaultRequestAdapterOptions","setDefaultRequestAdapterOptions","options","Error","getDefaultRequestAdapterOptions","copyLimits","objLike","obj","key","getGPU","recorder","enforceDefaultLimits","origRequestAdapterFn","requestAdapter","origRequestDeviceFn","GPUAdapter","prototype","requestDevice","Object","defineProperty","configurable","value","tempAdapter","call","tempDevice","limits","destroy","adapter","fromEntries","entries","map","v","get","desc","requiredLimits","limit","beyondLimit","condition","startsWith","DOMException","blockAllFeatures","enumerable","Set","features","has","enforceBlockedFeatures","requiredFeatures","feature","TypeError","oldFn","promise","then","adapterInfo","info","infoString","vendor","architecture","device","debug"],"sources":["../../../src/common/util/navigator_gpu.ts"],"sourcesContent":["// eslint-disable-next-line import/no-restricted-paths\nimport { TestCaseRecorder } from '../framework/fixture.js';\nimport { globalTestConfig } from '../framework/test_config.js';\n\nimport { ErrorWithExtra, assert, objectEquals } from './util.js';\n\n/**\n * Finds and returns the `navigator.gpu` object (or equivalent, for non-browser implementations).\n * Throws an exception if not found.\n */\nfunction defaultGPUProvider(): GPU {\n  assert(\n    typeof navigator !== 'undefined' && navigator.gpu !== undefined,\n    'No WebGPU implementation found'\n  );\n  return navigator.gpu;\n}\n\n/**\n * GPUProvider is a function that creates and returns a new GPU instance.\n * May throw an exception if a GPU cannot be created.\n */\nexport type GPUProvider = () => GPU;\n\nlet gpuProvider: GPUProvider = defaultGPUProvider;\n\n/**\n * Sets the function to create and return a new GPU instance.\n */\nexport function setGPUProvider(provider: GPUProvider) {\n  assert(impl === undefined, 'setGPUProvider() should not be after getGPU()');\n  gpuProvider = provider;\n}\n\nlet impl: GPU | undefined = undefined;\nlet s_defaultLimits: Record<string, GPUSize64> | undefined = undefined;\n\nlet defaultRequestAdapterOptions: GPURequestAdapterOptions | undefined;\n\nexport function setDefaultRequestAdapterOptions(options: GPURequestAdapterOptions) {\n  // It's okay to call this if you don't change the options\n  if (objectEquals(options, defaultRequestAdapterOptions)) {\n    return;\n  }\n  if (impl) {\n    throw new Error('must call setDefaultRequestAdapterOptions before getGPU');\n  }\n  defaultRequestAdapterOptions = { ...options };\n}\n\nexport function getDefaultRequestAdapterOptions() {\n  return defaultRequestAdapterOptions;\n}\n\nfunction copyLimits(objLike: GPUSupportedLimits) {\n  const obj: Record<string, number> = {};\n  for (const key in objLike) {\n    obj[key] = (objLike as unknown as Record<string, number>)[key];\n  }\n  return obj;\n}\n\n/**\n * Finds and returns the `navigator.gpu` object (or equivalent, for non-browser implementations).\n * Throws an exception if not found.\n */\nexport function getGPU(recorder: TestCaseRecorder | null): GPU {\n  if (impl) {\n    return impl;\n  }\n\n  impl = gpuProvider();\n\n  if (globalTestConfig.enforceDefaultLimits) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const origRequestAdapterFn = impl.requestAdapter;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const origRequestDeviceFn = GPUAdapter.prototype.requestDevice;\n\n    Object.defineProperty(impl, 'requestAdapter', {\n      configurable: true,\n      async value(options?: GPURequestAdapterOptions) {\n        if (!s_defaultLimits) {\n          const tempAdapter = await origRequestAdapterFn.call(this, {\n            ...defaultRequestAdapterOptions,\n            ...options,\n          });\n          // eslint-disable-next-line no-restricted-syntax\n          const tempDevice = await tempAdapter?.requestDevice();\n          s_defaultLimits = copyLimits(tempDevice!.limits);\n          tempDevice?.destroy();\n        }\n        const adapter = await origRequestAdapterFn.call(this, {\n          ...defaultRequestAdapterOptions,\n          ...options,\n        });\n        if (adapter) {\n          const limits = Object.fromEntries(\n            Object.entries(s_defaultLimits).map(([key, v]) => [key, v])\n          );\n\n          Object.defineProperty(adapter, 'limits', {\n            get() {\n              return limits;\n            },\n          });\n        }\n        return adapter;\n      },\n    });\n\n    const enforceDefaultLimits = (adapter: GPUAdapter, desc: GPUDeviceDescriptor | undefined) => {\n      if (desc?.requiredLimits) {\n        for (const [key, value] of Object.entries(desc.requiredLimits)) {\n          const limit = s_defaultLimits![key];\n          if (limit !== undefined && value !== undefined) {\n            const [beyondLimit, condition] = key.startsWith('max')\n              ? [value > limit, 'greater']\n              : [value < limit, 'less'];\n            if (beyondLimit) {\n              throw new DOMException(\n                `requestedLimit ${value} for ${key} is ${condition} than adapter limit ${limit}`,\n                'OperationError'\n              );\n            }\n          }\n        }\n      }\n    };\n\n    GPUAdapter.prototype.requestDevice = async function (\n      this: GPUAdapter,\n      desc?: GPUDeviceDescriptor | undefined\n    ) {\n      // We need to enforce the default limits because even though we patched the adapter to\n      // show defaults for adapter.limits, there are tests that test we throw when we request more than the max.\n      // In other words.\n      //\n      //   adapter.requestDevice({ requiredLimits: {\n      //     maxXXX: adapter.limits.maxXXX + 1,  // should throw\n      //   });\n      //\n      // But unless we enforce this manually, it won't actually throw if the adapter's\n      // true limits are higher than we patched above.\n      enforceDefaultLimits(this, desc);\n      return await origRequestDeviceFn.call(this, desc);\n    };\n  }\n\n  if (globalTestConfig.blockAllFeatures) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const origRequestAdapterFn = impl.requestAdapter;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const origRequestDeviceFn = GPUAdapter.prototype.requestDevice;\n\n    Object.defineProperty(impl, 'requestAdapter', {\n      configurable: true,\n      async value(options?: GPURequestAdapterOptions) {\n        const adapter = await origRequestAdapterFn.call(this, {\n          ...defaultRequestAdapterOptions,\n          ...options,\n        });\n        if (adapter) {\n          Object.defineProperty(adapter, 'features', {\n            enumerable: false,\n            value: new Set(\n              adapter.features.has('core-features-and-limits') ? ['core-features-and-limits'] : []\n            ),\n          });\n        }\n        return adapter;\n      },\n    });\n\n    const enforceBlockedFeatures = (adapter: GPUAdapter, desc: GPUDeviceDescriptor | undefined) => {\n      if (desc?.requiredFeatures) {\n        for (const [feature] of desc.requiredFeatures) {\n          // Note: This adapter has had its features property over-ridden and will only return\n          // have nothing or 'core-features-and-limits'.\n          if (!adapter.features.has(feature)) {\n            throw new TypeError(`requested feature ${feature} does not exist on adapter`);\n          }\n        }\n      }\n    };\n\n    GPUAdapter.prototype.requestDevice = async function (\n      this: GPUAdapter,\n      desc?: GPUDeviceDescriptor | undefined\n    ) {\n      // We need to enforce the feature block because even though we patched the adapter to\n      // advertise no features they still exist on the real adapter.\n      enforceBlockedFeatures(this, desc);\n      return await origRequestDeviceFn.call(this, desc);\n    };\n  }\n\n  if (defaultRequestAdapterOptions) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const oldFn = impl.requestAdapter;\n    impl.requestAdapter = function (\n      options?: GPURequestAdapterOptions\n    ): Promise<GPUAdapter | null> {\n      const promise = oldFn.call(this, { ...defaultRequestAdapterOptions, ...options });\n      if (recorder) {\n        void promise.then(adapter => {\n          if (adapter) {\n            const adapterInfo = adapter.info;\n            const infoString = `Adapter: ${adapterInfo.vendor} / ${adapterInfo.architecture} / ${adapterInfo.device}`;\n            recorder.debug(new ErrorWithExtra(infoString, () => ({ adapterInfo })));\n          }\n        });\n      }\n      return promise;\n    };\n  }\n\n  return impl;\n}\n"],"mappings":"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"}