{"version":3,"file":"test_worker-worker.js","names":["runShutdownTasks","setBaseResourcePath","DefaultTestFileLoader","parseQuery","assert","setupWorkerEnvironment","loader","handleOnMessage","port","ev","data","self","close","query","expectations","ctsOptions","log","testcases","Array","from","loadCases","length","testcase","rec","result","record","toString","run","postMessage","logs","map","l","toRawData","onmessage","source","onconnect","event","ports"],"sources":["../../../../src/common/runtime/helper/test_worker-worker.ts"],"sourcesContent":["import { runShutdownTasks } from '../../framework/on_shutdown.js';\nimport { setBaseResourcePath } from '../../framework/resources.js';\nimport { DefaultTestFileLoader } from '../../internal/file_loader.js';\nimport { parseQuery } from '../../internal/query/parseQuery.js';\nimport { assert } from '../../util/util.js';\n\nimport { setupWorkerEnvironment, WorkerTestRunRequest } from './utils_worker.js';\n\n// Should be WorkerGlobalScope, but importing lib \"webworker\" conflicts with lib \"dom\".\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ndeclare const self: any;\n\nconst loader = new DefaultTestFileLoader();\n\nsetBaseResourcePath('../../../resources');\n\n// MessagePort, DedicatedWorkerGlobalScope, etc.\ntype Sender = { postMessage: (x: unknown) => void };\n\nasync function handleOnMessage(port: Sender, ev: MessageEvent) {\n  if (ev.data === 'shutdown') {\n    runShutdownTasks();\n    self.close();\n    return;\n  }\n\n  const { query, expectations, ctsOptions } = ev.data as WorkerTestRunRequest;\n\n  const log = setupWorkerEnvironment(ctsOptions);\n\n  const testcases = Array.from(await loader.loadCases(parseQuery(query)));\n  assert(testcases.length === 1, 'worker query resulted in != 1 cases');\n\n  const testcase = testcases[0];\n  const [rec, result] = log.record(testcase.query.toString());\n  await testcase.run(rec, expectations);\n\n  port.postMessage({\n    query,\n    result: {\n      ...result,\n      logs: result.logs?.map(l => l.toRawData()),\n    },\n  });\n}\n\nself.onmessage = (ev: MessageEvent) => {\n  void handleOnMessage(ev.source || self, ev);\n};\n\nself.onconnect = (event: MessageEvent) => {\n  const port = event.ports[0];\n\n  port.onmessage = (ev: MessageEvent) => {\n    void handleOnMessage(port, ev);\n  };\n};\n"],"mappings":";;GAAA,SAASA,gBAAgB,QAAQ,gCAAgC,CACjE,SAASC,mBAAmB,QAAQ,8BAA8B,CAClE,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,SAASC,UAAU,QAAQ,oCAAoC;AAC/D,SAASC,MAAM,QAAQ,oBAAoB;;AAE3C,SAASC,sBAAsB,QAA8B,mBAAmB;;AAEhF;;;;AAIA,MAAMC,MAAM,GAAG,IAAIJ,qBAAqB,CAAC,CAAC;;AAE1CD,mBAAmB,CAAC,oBAAoB,CAAC;;AAEzC;;;AAGA,eAAeM,eAAeA,CAACC,IAAY,EAAEC,EAAgB,EAAE;EAC7D,IAAIA,EAAE,CAACC,IAAI,KAAK,UAAU,EAAE;IAC1BV,gBAAgB,CAAC,CAAC;IAClBW,IAAI,CAACC,KAAK,CAAC,CAAC;IACZ;EACF;;EAEA,MAAM,EAAEC,KAAK,EAAEC,YAAY,EAAEC,UAAU,CAAC,CAAC,GAAGN,EAAE,CAACC,IAA4B;;EAE3E,MAAMM,GAAG,GAAGX,sBAAsB,CAACU,UAAU,CAAC;;EAE9C,MAAME,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC,MAAMb,MAAM,CAACc,SAAS,CAACjB,UAAU,CAACU,KAAK,CAAC,CAAC,CAAC;EACvET,MAAM,CAACa,SAAS,CAACI,MAAM,KAAK,CAAC,EAAE,qCAAqC,CAAC;;EAErE,MAAMC,QAAQ,GAAGL,SAAS,CAAC,CAAC,CAAC;EAC7B,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGR,GAAG,CAACS,MAAM,CAACH,QAAQ,CAACT,KAAK,CAACa,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAMJ,QAAQ,CAACK,GAAG,CAACJ,GAAG,EAAET,YAAY,CAAC;;EAErCN,IAAI,CAACoB,WAAW,CAAC;IACff,KAAK;IACLW,MAAM,EAAE;MACN,GAAGA,MAAM;MACTK,IAAI,EAAEL,MAAM,CAACK,IAAI,EAAEC,GAAG,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,SAAS,CAAC,CAAC;IAC3C;EACF,CAAC,CAAC;AACJ;;AAEArB,IAAI,CAACsB,SAAS,GAAG,CAACxB,EAAgB,KAAK;EACrC,KAAKF,eAAe,CAACE,EAAE,CAACyB,MAAM,IAAIvB,IAAI,EAAEF,EAAE,CAAC;AAC7C,CAAC;;AAEDE,IAAI,CAACwB,SAAS,GAAG,CAACC,KAAmB,KAAK;EACxC,MAAM5B,IAAI,GAAG4B,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC;;EAE3B7B,IAAI,CAACyB,SAAS,GAAG,CAACxB,EAAgB,KAAK;IACrC,KAAKF,eAAe,CAACC,IAAI,EAAEC,EAAE,CAAC;EAChC,CAAC;AACH,CAAC"}