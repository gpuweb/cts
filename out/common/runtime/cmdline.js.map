{"version":3,"file":"cmdline.js","names":["fs","dataCache","getResourcePath","setBaseResourcePath","globalTestConfig","DefaultTestFileLoader","prettyPrintLog","Logger","parseQuery","parseExpectationsForTestQuery","Colors","setDefaultRequestAdapterOptions","setGPUProvider","assert","unreachable","sys","usage","rc","console","log","type","exit","existsSync","enabled","verbose","emitCoverage","listMode","printJSON","quiet","loadWebGPUExpectations","undefined","gpuProviderModule","queries","gpuProviderFlags","i","args","length","a","startsWith","enableDebugLogs","expectationsFile","URL","cwd","pathname","then","m","expectations","modulePath","require","push","unrollConstEvalLoops","compatibility","forceFallbackAdapter","enforceDefaultLimits","logToWebSocket","codeCoverage","compatibilityMode","featureLevel","create","coverage","error","setStore","load","path","Promise","resolve","reject","readFile","err","data","message","setDebugLogger","loader","filterQuery","testcases","loadCases","failed","warned","skipped","total","begin","testcase","name","query","toString","isUnimplemented","rec","res","record","run","printResults","status","end","asJSON","passed","pct","x","toFixed","rpt","xs","padStart","Math","log10","catch","ex","stack","results","r","timems","logs","l"],"sources":["../../../src/common/runtime/cmdline.ts"],"sourcesContent":["/* eslint-disable no-console, n/no-restricted-import */\n\nimport * as fs from 'fs';\n\nimport { dataCache } from '../framework/data_cache.js';\nimport { getResourcePath, setBaseResourcePath } from '../framework/resources.js';\nimport { globalTestConfig } from '../framework/test_config.js';\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport { prettyPrintLog } from '../internal/logging/log_message.js';\nimport { Logger } from '../internal/logging/logger.js';\nimport { LiveTestCaseResult } from '../internal/logging/result.js';\nimport { parseQuery } from '../internal/query/parseQuery.js';\nimport { parseExpectationsForTestQuery } from '../internal/query/query.js';\nimport { Colors } from '../util/colors.js';\nimport { setDefaultRequestAdapterOptions, setGPUProvider } from '../util/navigator_gpu.js';\nimport { assert, unreachable } from '../util/util.js';\n\nimport sys from './helper/sys.js';\n\nfunction usage(rc: number): never {\n  console.log(`Usage:\n  tools/run_${sys.type} [OPTIONS...] QUERIES...\n  tools/run_${sys.type} 'unittests:*' 'webgpu:buffers,*'\nOptions:\n  --colors                  Enable ANSI colors in output.\n  --compat                  Runs tests in compatibility mode.\n  --coverage                Emit coverage data.\n  --verbose                 Print result/log of every test as it runs.\n  --list                    Print all testcase names that match the given query and exit.\n  --list-unimplemented      Print all unimplemented tests\n  --debug                   Include debug messages in logging.\n  --print-json              Print the complete result JSON in the output.\n  --expectations            Path to expectations file.\n  --gpu-provider            Path to node module that provides the GPU implementation.\n  --gpu-provider-flag       Flag to set on the gpu-provider as <flag>=<value>\n  --unroll-const-eval-loops Unrolls loops in constant-evaluation shader execution tests\n  --enforce-default-limits  Enforce the default limits (note: powerPreference tests may fail)\n  --force-fallback-adapter  Force a fallback adapter\n  --log-to-websocket        Log to a websocket\n  --quiet                   Suppress summary information in output\n`);\n  return sys.exit(rc);\n}\n\nif (!sys.existsSync('src/common/runtime/cmdline.ts')) {\n  console.log('Must be run from repository root');\n  usage(1);\n}\nsetBaseResourcePath('out-node/resources');\n\n// The interface that exposes creation of the GPU, and optional interface to code coverage.\ninterface GPUProviderModule {\n  // @returns a GPU with the given flags\n  create(flags: string[]): GPU;\n  // An optional interface to a CodeCoverageProvider\n  coverage?: CodeCoverageProvider;\n}\n\ninterface CodeCoverageProvider {\n  // Starts collecting code coverage\n  begin(): void;\n  // Ends collecting of code coverage, returning the coverage data.\n  // This data is opaque (implementation defined).\n  end(): string;\n}\n\ntype listModes = 'none' | 'cases' | 'unimplemented';\n\nColors.enabled = false;\n\nlet verbose = false;\nlet emitCoverage = false;\nlet listMode: listModes = 'none';\nlet printJSON = false;\nlet quiet = false;\nlet loadWebGPUExpectations: Promise<unknown> | undefined = undefined;\nlet gpuProviderModule: GPUProviderModule | undefined = undefined;\n\nconst queries: string[] = [];\nconst gpuProviderFlags: string[] = [];\nfor (let i = 0; i < sys.args.length; ++i) {\n  const a = sys.args[i];\n  if (a.startsWith('-')) {\n    if (a === '--colors') {\n      Colors.enabled = true;\n    } else if (a === '--coverage') {\n      emitCoverage = true;\n    } else if (a === '--verbose') {\n      verbose = true;\n    } else if (a === '--list') {\n      listMode = 'cases';\n    } else if (a === '--list-unimplemented') {\n      listMode = 'unimplemented';\n    } else if (a === '--debug') {\n      globalTestConfig.enableDebugLogs = true;\n    } else if (a === '--print-json') {\n      printJSON = true;\n    } else if (a === '--expectations') {\n      const expectationsFile = new URL(sys.args[++i], `file://${sys.cwd()}`).pathname;\n      loadWebGPUExpectations = import(expectationsFile).then(m => m.expectations);\n    } else if (a === '--gpu-provider') {\n      const modulePath = sys.args[++i];\n      gpuProviderModule = require(modulePath);\n    } else if (a === '--gpu-provider-flag') {\n      gpuProviderFlags.push(sys.args[++i]);\n    } else if (a === '--quiet') {\n      quiet = true;\n    } else if (a === '--unroll-const-eval-loops') {\n      globalTestConfig.unrollConstEvalLoops = true;\n    } else if (a === '--compat') {\n      globalTestConfig.compatibility = true;\n    } else if (a === '--force-fallback-adapter') {\n      globalTestConfig.forceFallbackAdapter = true;\n    } else if (a === '--enforce-default-limits') {\n      globalTestConfig.enforceDefaultLimits = true;\n    } else if (a === '--log-to-websocket') {\n      globalTestConfig.logToWebSocket = true;\n    } else {\n      console.log('unrecognized flag: ', a);\n      usage(1);\n    }\n  } else {\n    queries.push(a);\n  }\n}\n\nlet codeCoverage: CodeCoverageProvider | undefined = undefined;\n\nif (globalTestConfig.compatibility || globalTestConfig.forceFallbackAdapter) {\n  // MAINTENANCE_TODO: remove compatibilityMode (and the typecast) once no longer needed.\n  setDefaultRequestAdapterOptions({\n    compatibilityMode: globalTestConfig.compatibility,\n    featureLevel: globalTestConfig.compatibility ? 'compatibility' : 'core',\n    forceFallbackAdapter: globalTestConfig.forceFallbackAdapter,\n  } as GPURequestAdapterOptions);\n}\n\nif (gpuProviderModule) {\n  setGPUProvider(() => gpuProviderModule!.create(gpuProviderFlags));\n  if (emitCoverage) {\n    codeCoverage = gpuProviderModule.coverage;\n    if (codeCoverage === undefined) {\n      console.error(\n        `--coverage specified, but the GPUProviderModule does not support code coverage.\nDid you remember to build with code coverage instrumentation enabled?`\n      );\n      sys.exit(1);\n    }\n  }\n}\n\ndataCache.setStore({\n  load: (path: string) => {\n    return new Promise<Uint8Array>((resolve, reject) => {\n      fs.readFile(getResourcePath(`cache/${path}`), (err, data) => {\n        if (err !== null) {\n          reject(err.message);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  },\n});\n\nif (verbose) {\n  dataCache.setDebugLogger(console.log);\n}\n\nif (queries.length === 0) {\n  console.log('no queries specified');\n  usage(0);\n}\n\n(async () => {\n  const loader = new DefaultTestFileLoader();\n  assert(queries.length === 1, 'currently, there must be exactly one query on the cmd line');\n  const filterQuery = parseQuery(queries[0]);\n  const testcases = await loader.loadCases(filterQuery);\n  const expectations = parseExpectationsForTestQuery(\n    await (loadWebGPUExpectations ?? []),\n    filterQuery\n  );\n\n  const log = new Logger();\n\n  const failed: Array<[string, LiveTestCaseResult]> = [];\n  const warned: Array<[string, LiveTestCaseResult]> = [];\n  const skipped: Array<[string, LiveTestCaseResult]> = [];\n\n  let total = 0;\n\n  if (codeCoverage !== undefined) {\n    codeCoverage.begin();\n  }\n\n  for (const testcase of testcases) {\n    const name = testcase.query.toString();\n    switch (listMode) {\n      case 'cases':\n        console.log(name);\n        continue;\n      case 'unimplemented':\n        if (testcase.isUnimplemented) {\n          console.log(name);\n        }\n        continue;\n      default:\n        break;\n    }\n\n    const [rec, res] = log.record(name);\n    await testcase.run(rec, expectations);\n\n    if (verbose) {\n      printResults([[name, res]]);\n    }\n\n    total++;\n    switch (res.status) {\n      case 'pass':\n        break;\n      case 'fail':\n        failed.push([name, res]);\n        break;\n      case 'warn':\n        warned.push([name, res]);\n        break;\n      case 'skip':\n        skipped.push([name, res]);\n        break;\n      default:\n        unreachable('unrecognized status');\n    }\n  }\n\n  if (codeCoverage !== undefined) {\n    const coverage = codeCoverage.end();\n    console.log(`Code-coverage: [[${coverage}]]`);\n  }\n\n  if (listMode !== 'none') {\n    return;\n  }\n\n  assert(total > 0, 'found no tests!');\n\n  // MAINTENANCE_TODO: write results out somewhere (a file?)\n  if (printJSON) {\n    console.log(log.asJSON(2));\n  }\n\n  if (!quiet) {\n    if (skipped.length) {\n      console.log('');\n      console.log('** Skipped **');\n      printResults(skipped);\n    }\n    if (warned.length) {\n      console.log('');\n      console.log('** Warnings **');\n      printResults(warned);\n    }\n    if (failed.length) {\n      console.log('');\n      console.log('** Failures **');\n      printResults(failed);\n    }\n\n    const passed = total - warned.length - failed.length - skipped.length;\n    const pct = (x: number) => ((100 * x) / total).toFixed(2);\n    const rpt = (x: number) => {\n      const xs = x.toString().padStart(1 + Math.log10(total), ' ');\n      return `${xs} / ${total} = ${pct(x).padStart(6, ' ')}%`;\n    };\n    console.log('');\n    console.log(`** Summary **\nPassed  w/o warnings = ${rpt(passed)}\nPassed with warnings = ${rpt(warned.length)}\nSkipped              = ${rpt(skipped.length)}\nFailed               = ${rpt(failed.length)}`);\n  }\n\n  if (failed.length || warned.length) {\n    sys.exit(1);\n  }\n})().catch(ex => {\n  console.log(ex.stack ?? ex.toString());\n  sys.exit(1);\n});\n\nfunction printResults(results: Array<[string, LiveTestCaseResult]>): void {\n  for (const [name, r] of results) {\n    console.log(`[${r.status}] ${name} (${r.timems}ms). Log:`);\n    if (r.logs) {\n      for (const l of r.logs) {\n        console.log(prettyPrintLog(l));\n      }\n    }\n  }\n}\n"],"mappings":"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"}