{"version":3,"file":"misc.spec.js","names":["description","makeTestGroup","isTextureFormatUsableWithStorageAccessMode","kPossibleStorageTextureFormats","kDefaultVertexShaderCode","kDefaultFragmentShaderCode","vtu","CreateRenderPipelineValidationTest","g","test","desc","params","u","combine","fn","t","isAsync","descriptor","getDescriptor","doCreateRenderPipelineTest","noFragment","depthStencil","undefined","beginSubcases","unless","depthStencilFormat","hasColor","depthStencilState","format","depthWriteEnabled","depthCompare","targets","paramsSubcasesOnly","beforeAllSubcases","usesMismatchedDevice","mismatched","sourceDevice","mismatchedDevice","device","layout","createPipelineLayout","bindGroupLayouts","vertex","module","createShaderModule","code","entryPoint","fragment","shader","access","dimension","skipIfTextureFormatNotSupported","success"],"sources":["../../../../../src/webgpu/api/validation/render_pipeline/misc.spec.ts"],"sourcesContent":["export const description = `\nmisc createRenderPipeline and createRenderPipelineAsync validation tests.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport {\n  isTextureFormatUsableWithStorageAccessMode,\n  kPossibleStorageTextureFormats,\n} from '../../../format_info.js';\nimport { kDefaultVertexShaderCode, kDefaultFragmentShaderCode } from '../../../util/shader.js';\nimport * as vtu from '../validation_test_utils.js';\n\nimport { CreateRenderPipelineValidationTest } from './common.js';\n\nexport const g = makeTestGroup(CreateRenderPipelineValidationTest);\n\ng.test('basic')\n  .desc(`Test basic usage of createRenderPipeline.`)\n  .params(u => u.combine('isAsync', [false, true]))\n  .fn(t => {\n    const { isAsync } = t.params;\n    const descriptor = t.getDescriptor();\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, true, descriptor);\n  });\n\ng.test('no_attachment')\n  .desc(`Test that createRenderPipeline fails without any attachment.`)\n  .params(u => u.combine('isAsync', [false, true]))\n  .fn(t => {\n    const { isAsync } = t.params;\n\n    const descriptor = t.getDescriptor({\n      noFragment: true,\n      depthStencil: undefined,\n    });\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, false, descriptor);\n  });\n\ng.test('vertex_state_only')\n  .desc(\n    `Tests creating vertex-state-only render pipeline. A vertex-only render pipeline has no fragment\nstate (and thus has no color state), and must have a depth-stencil state as an attachment is required.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .beginSubcases()\n      .combine('depthStencilFormat', [\n        'depth24plus',\n        'depth24plus-stencil8',\n        'depth32float',\n        '',\n      ] as const)\n      .combine('hasColor', [false, true])\n      .unless(({ depthStencilFormat, hasColor }) => {\n        // Render pipeline needs at least one attachement\n        return hasColor === false && depthStencilFormat === '';\n      })\n  )\n  .fn(t => {\n    const { isAsync, depthStencilFormat, hasColor } = t.params;\n\n    let depthStencilState: GPUDepthStencilState | undefined;\n    if (depthStencilFormat === '') {\n      depthStencilState = undefined;\n    } else {\n      depthStencilState = {\n        format: depthStencilFormat,\n        depthWriteEnabled: false,\n        depthCompare: 'always',\n      };\n    }\n\n    // Having targets or not should have no effect in result, since it will not appear in the\n    // descriptor in vertex-only render pipeline\n    const descriptor = t.getDescriptor({\n      noFragment: true,\n      depthStencil: depthStencilState,\n      targets: hasColor ? [{ format: 'rgba8unorm' }] : [],\n    });\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, depthStencilState !== undefined, descriptor);\n  });\n\ng.test('pipeline_layout,device_mismatch')\n  .desc(\n    'Tests createRenderPipeline(Async) cannot be called with a pipeline layout created from another device'\n  )\n  .paramsSubcasesOnly(u => u.combine('isAsync', [true, false]).combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { isAsync, mismatched } = t.params;\n\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const layout = sourceDevice.createPipelineLayout({ bindGroupLayouts: [] });\n\n    const format = 'rgba8unorm';\n    const descriptor = {\n      layout,\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kDefaultVertexShaderCode,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: kDefaultFragmentShaderCode,\n        }),\n        entryPoint: 'main',\n        targets: [{ format }] as const,\n      },\n    };\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, !mismatched, descriptor);\n  });\n\ng.test('external_texture')\n  .desc('Tests createRenderPipeline() with an external_texture')\n  .fn(t => {\n    const shader = t.device.createShaderModule({\n      code: `\n        @vertex\n        fn vertexMain() -> @builtin(position) vec4f {\n          return vec4f(1);\n        }\n\n        @group(0) @binding(0) var myTexture: texture_external;\n\n        @fragment\n        fn fragmentMain() -> @location(0) vec4f {\n          let result = textureLoad(myTexture, vec2u(1, 1));\n          return vec4f(1);\n        }\n      `,\n    });\n\n    const descriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module: shader,\n      },\n      fragment: {\n        module: shader,\n        targets: [{ format: 'rgba8unorm' }],\n      },\n    };\n\n    vtu.doCreateRenderPipelineTest(t, false, true, descriptor);\n  });\n\ng.test('storage_texture,format')\n  .desc(\n    `\nTest that a pipeline with auto layout and storage texture access combo that is not supported\ngenerates a validation error at createComputePipeline(Async)\n  `\n  )\n  .params(u =>\n    u //\n      .combine('format', kPossibleStorageTextureFormats)\n      .beginSubcases()\n      .combine('isAsync', [true, false] as const)\n      .combine('access', ['read', 'write', 'read_write'] as const)\n      .combine('dimension', ['1d', '2d', '3d'] as const)\n  )\n  .fn(t => {\n    const { format, isAsync, access, dimension } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n\n    const code = `\n      @group(0) @binding(0) var tex: texture_storage_${dimension}<${format}, ${access}>;\n      @vertex fn vs() -> @builtin(position) vec4f {\n        return vec4f(0);\n      }\n\n      @fragment fn fs() -> @location(0) vec4f {\n        _ = tex;\n        return vec4f(0);\n      }\n    `;\n    const module = t.device.createShaderModule({ code });\n\n    const success = isTextureFormatUsableWithStorageAccessMode(t.device, format, access);\n    const descriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: { module },\n      fragment: { module, targets: [{ format: 'rgba8unorm' }] },\n    };\n    vtu.doCreateRenderPipelineTest(t, isAsync, success, descriptor);\n  });\n"],"mappings":"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"}