{"version":3,"file":"inter_stage.spec.js","names":["description","makeTestGroup","range","vtu","CreateRenderPipelineValidationTest","getVarName","i","skipIfDisallowedInterpolationParameter","t","wgsl","isCompatibility","s","includes","skip","InterStageMatchingValidationTest","getVertexStateWithOutputs","outputs","module","device","createShaderModule","code","map","v","replace","join","entryPoint","getFragmentStateWithInputs","inputs","hasBuiltinPosition","targets","format","getDescriptorWithStates","vertex","fragment","layout","g","test","desc","params","u","combine","combineWithParams","_success","fn","isAsync","descriptor","doCreateRenderPipelineTest","output","input","_compat_success","beforeAllSubcases","shouldSucceed","locationDelta","maxInterStageShaderVariables","limits","location","numVariablesDelta","topology","numVec4","primitive","useExtraBuiltinInputs","numExtraVariables","numUsedVariables","success","push"],"sources":["../../../../../src/webgpu/api/validation/render_pipeline/inter_stage.spec.ts"],"sourcesContent":["export const description = `\nInterface matching between vertex and fragment shader validation for createRenderPipeline.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport { GPUTestSubcaseBatchState } from '../../../gpu_test.js';\nimport * as vtu from '../validation_test_utils.js';\n\nimport { CreateRenderPipelineValidationTest } from './common.js';\n\nfunction getVarName(i: number) {\n  return `v${i}`;\n}\n\nfunction skipIfDisallowedInterpolationParameter(t: GPUTestSubcaseBatchState, ...wgsl: string[]) {\n  if (t.isCompatibility) {\n    for (const s of wgsl) {\n      if (s.includes('linear') || s.includes('sample')) {\n        t.skip(`unsupported interpolation parameter in compat: ${wgsl}`);\n      }\n    }\n  }\n}\n\nclass InterStageMatchingValidationTest extends CreateRenderPipelineValidationTest {\n  getVertexStateWithOutputs(outputs: readonly string[]): GPUVertexState {\n    return {\n      module: this.device.createShaderModule({\n        code: `\n        struct A {\n            ${outputs.map((v, i) => v.replace('__', getVarName(i))).join(',\\n')},\n            @builtin(position) pos: vec4<f32>,\n        }\n        @vertex fn main() -> A {\n            var vertexOut: A;\n            vertexOut.pos = vec4<f32>(0.0, 0.0, 0.0, 1.0);\n            return vertexOut;\n        }\n        `,\n      }),\n      entryPoint: 'main',\n    };\n  }\n\n  getFragmentStateWithInputs(\n    inputs: readonly string[],\n    hasBuiltinPosition: boolean = false\n  ): GPUFragmentState {\n    return {\n      targets: [{ format: 'rgba8unorm' }],\n      module: this.device.createShaderModule({\n        code: `\n        struct B {\n            ${inputs.map((v, i) => v.replace('__', getVarName(i))).join(',\\n')},\n            ${hasBuiltinPosition ? '@builtin(position) pos: vec4<f32>' : ''}\n        }\n        @fragment fn main(fragmentIn: B) -> @location(0) vec4<f32> {\n            return vec4<f32>(1.0, 1.0, 1.0, 1.0);\n        }\n        `,\n      }),\n      entryPoint: 'main',\n    };\n  }\n\n  getDescriptorWithStates(\n    vertex: GPUVertexState,\n    fragment: GPUFragmentState\n  ): GPURenderPipelineDescriptor {\n    return {\n      layout: 'auto',\n      vertex,\n      fragment,\n    };\n  }\n}\n\nexport const g = makeTestGroup(InterStageMatchingValidationTest);\n\ng.test('location,mismatch')\n  .desc(`Tests that missing declaration at the same location should fail validation.`)\n  .params(u =>\n    u.combine('isAsync', [false, true]).combineWithParams([\n      { outputs: ['@location(0) __: f32'], inputs: ['@location(0) __: f32'], _success: true },\n      { outputs: ['@location(0) __: f32'], inputs: ['@location(1) __: f32'], _success: false },\n      { outputs: ['@location(1) __: f32'], inputs: ['@location(0) __: f32'], _success: false },\n      {\n        outputs: ['@location(0) __: f32', '@location(1) __: f32'],\n        inputs: ['@location(1) __: f32', '@location(0) __: f32'],\n        _success: true,\n      },\n      {\n        outputs: ['@location(1) __: f32', '@location(0) __: f32'],\n        inputs: ['@location(0) __: f32', '@location(1) __: f32'],\n        _success: true,\n      },\n    ])\n  )\n  .fn(t => {\n    const { isAsync, outputs, inputs, _success } = t.params;\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs(outputs),\n      t.getFragmentStateWithInputs(inputs)\n    );\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, _success, descriptor);\n  });\n\ng.test('location,superset')\n  .desc(`Tests that validation should succeed when vertex output is superset of fragment input`)\n  .params(u => u.combine('isAsync', [false, true]))\n  .fn(t => {\n    const { isAsync } = t.params;\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs(['@location(0) vout0: f32', '@location(1) vout1: f32']),\n      t.getFragmentStateWithInputs(['@location(1) fin1: f32'])\n    );\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, true, descriptor);\n  });\n\ng.test('location,subset')\n  .desc(`Tests that validation should fail when vertex output is a subset of fragment input.`)\n  .params(u => u.combine('isAsync', [false, true]))\n  .fn(t => {\n    const { isAsync } = t.params;\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs(['@location(0) vout0: f32']),\n      t.getFragmentStateWithInputs(['@location(0) fin0: f32', '@location(1) fin1: f32'])\n    );\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, false, descriptor);\n  });\n\ng.test('type')\n  .desc(\n    `Tests that validation should fail when type of vertex output and fragment input at the same location doesn't match.`\n  )\n  .params(u =>\n    u.combine('isAsync', [false, true]).combineWithParams([\n      { output: 'f32', input: 'f32' },\n      { output: 'i32', input: 'f32' },\n      { output: 'u32', input: 'f32' },\n      { output: 'u32', input: 'i32' },\n      { output: 'i32', input: 'u32' },\n      { output: 'vec2<f32>', input: 'vec2<f32>' },\n      { output: 'vec3<f32>', input: 'vec2<f32>' },\n      { output: 'vec2<f32>', input: 'vec3<f32>' },\n      { output: 'vec2<f32>', input: 'f32' },\n      { output: 'f32', input: 'vec2<f32>' },\n    ])\n  )\n  .fn(t => {\n    const { isAsync, output, input } = t.params;\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs([`@location(0) @interpolate(flat, either) vout0: ${output}`]),\n      t.getFragmentStateWithInputs([`@location(0) @interpolate(flat, either) fin0: ${input}`])\n    );\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, output === input, descriptor);\n  });\n\ng.test('interpolation_type')\n  .desc(\n    `Tests that validation should fail when interpolation type of vertex output and fragment input at the same location doesn't match.`\n  )\n  .params(u =>\n    u.combine('isAsync', [false, true]).combineWithParams([\n      // default is @interpolate(perspective, center)\n      { output: '', input: '' },\n      { output: '', input: '@interpolate(perspective)', _success: true },\n      { output: '', input: '@interpolate(perspective, center)', _success: true },\n      { output: '@interpolate(perspective)', input: '', _success: true },\n      { output: '', input: '@interpolate(linear)' },\n      { output: '@interpolate(perspective)', input: '@interpolate(perspective)' },\n      { output: '@interpolate(linear)', input: '@interpolate(perspective)' },\n      { output: '@interpolate(flat, either)', input: '@interpolate(perspective)' },\n      { output: '@interpolate(linear)', input: '@interpolate(flat, either)' },\n      {\n        output: '@interpolate(linear, center)',\n        input: '@interpolate(linear, center)',\n        _compat_success: false,\n      },\n    ])\n  )\n  .beforeAllSubcases(t => {\n    skipIfDisallowedInterpolationParameter(t, t.params.output, t.params.input);\n  })\n  .fn(t => {\n    const { isAsync, output, input, _success, _compat_success } = t.params;\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs([`@location(0) ${output} vout0: f32`]),\n      t.getFragmentStateWithInputs([`@location(0) ${input} fin0: f32`])\n    );\n\n    const shouldSucceed =\n      (_success ?? output === input) && (!t.isCompatibility || _compat_success !== false);\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, shouldSucceed, descriptor);\n  });\n1;\ng.test('interpolation_sampling')\n  .desc(\n    `Tests that validation should fail when interpolation sampling of vertex output and fragment input at the same location doesn't match.`\n  )\n  .params(u =>\n    u.combine('isAsync', [false, true]).combineWithParams([\n      // default is @interpolate(perspective, center)\n      { output: '@interpolate(perspective)', input: '@interpolate(perspective)' },\n      {\n        output: '@interpolate(perspective)',\n        input: '@interpolate(perspective, center)',\n        _success: true,\n      },\n      {\n        output: '@interpolate(linear, center)',\n        input: '@interpolate(linear)',\n        _success: true,\n        _compat_success: false,\n      },\n      { output: '@interpolate(flat, either)', input: '@interpolate(flat, either)' },\n      { output: '@interpolate(perspective)', input: '@interpolate(perspective, sample)' },\n      { output: '@interpolate(perspective, center)', input: '@interpolate(perspective, sample)' },\n      {\n        output: '@interpolate(perspective, center)',\n        input: '@interpolate(perspective, centroid)',\n      },\n      { output: '@interpolate(perspective, centroid)', input: '@interpolate(perspective)' },\n    ])\n  )\n  .beforeAllSubcases(t => {\n    skipIfDisallowedInterpolationParameter(t, t.params.output, t.params.input);\n  })\n  .fn(t => {\n    const { isAsync, output, input, _success, _compat_success } = t.params;\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs([`@location(0) ${output} vout0: f32`]),\n      t.getFragmentStateWithInputs([`@location(0) ${input} fin0: f32`])\n    );\n\n    const shouldSucceed =\n      (_success ?? output === input) && (!t.isCompatibility || _compat_success !== false);\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, shouldSucceed, descriptor);\n  });\n\ng.test('max_shader_variable_location')\n  .desc(\n    `Tests that validation should fail when there is location of user-defined output/input variable >= device.limits.maxInterStageShaderVariables`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      // User defined variable location = maxInterStageShaderVariables + locationDelta\n      .combine('locationDelta', [0, -1, -2])\n  )\n  .fn(t => {\n    const { isAsync, locationDelta } = t.params;\n    const maxInterStageShaderVariables = t.device.limits.maxInterStageShaderVariables;\n    const location = maxInterStageShaderVariables + locationDelta;\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs([`@location(${location}) vout0: f32`]),\n      t.getFragmentStateWithInputs([`@location(${location}) fin0: f32`])\n    );\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, location < maxInterStageShaderVariables, descriptor);\n  });\n\ng.test('max_variables_count,output')\n  .desc(\n    `Tests that validation should fail when all user-defined outputs > max vertex shader output\n    variables.`\n  )\n  .params(u =>\n    u.combine('isAsync', [false, true]).combineWithParams([\n      // Number of user-defined output variables in test shader =\n      //     device.limits.maxInterStageShaderVariables + numVariablesDelta\n      { numVariablesDelta: 0, topology: 'triangle-list', _success: true },\n      { numVariablesDelta: 1, topology: 'triangle-list', _success: false },\n      { numVariablesDelta: 0, topology: 'point-list', _success: false },\n      { numVariablesDelta: -1, topology: 'point-list', _success: true },\n    ] as const)\n  )\n  .fn(t => {\n    const { isAsync, numVariablesDelta, topology, _success } = t.params;\n\n    const numVec4 = t.device.limits.maxInterStageShaderVariables + numVariablesDelta;\n\n    const outputs = range(numVec4, i => `@location(${i}) vout${i}: vec4<f32>`);\n    const inputs = range(numVec4, i => `@location(${i}) fin${i}: vec4<f32>`);\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs(outputs),\n      t.getFragmentStateWithInputs(inputs)\n    );\n    descriptor.primitive = { topology };\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, _success, descriptor);\n  });\n\ng.test('max_variables_count,input')\n  .desc(\n    `Tests that validation should fail when all user-defined inputs > max vertex shader output\n    variables.`\n  )\n  .params(u =>\n    u.combine('isAsync', [false, true]).combineWithParams([\n      // Number of user-defined output variables in test shader =\n      //     device.limits.maxInterStageShaderVariables + numVariablesDelta\n      { numVariablesDelta: 0, useExtraBuiltinInputs: false },\n      { numVariablesDelta: 1, useExtraBuiltinInputs: false },\n      { numVariablesDelta: 0, useExtraBuiltinInputs: true },\n      { numVariablesDelta: -1, useExtraBuiltinInputs: true },\n    ] as const)\n  )\n  .fn(t => {\n    const { isAsync, numVariablesDelta, useExtraBuiltinInputs } = t.params;\n\n    const numVec4 = t.device.limits.maxInterStageShaderVariables + numVariablesDelta;\n    const numExtraVariables = useExtraBuiltinInputs ? 1 : 0;\n    const numUsedVariables = numVec4 + numExtraVariables;\n    const success = numUsedVariables <= t.device.limits.maxInterStageShaderVariables;\n\n    const outputs = range(numVec4, i => `@location(${i}) vout${i}: vec4<f32>`);\n    const inputs = range(numVec4, i => `@location(${i}) fin${i}: vec4<f32>`);\n\n    if (useExtraBuiltinInputs) {\n      inputs.push('@builtin(front_facing) front_facing_in: bool');\n      if (!t.isCompatibility) {\n        inputs.push(\n          '@builtin(sample_mask) sample_mask_in: u32',\n          '@builtin(sample_index) sample_index_in: u32'\n        );\n      }\n    }\n\n    const descriptor = t.getDescriptorWithStates(\n      t.getVertexStateWithOutputs(outputs),\n      t.getFragmentStateWithInputs(inputs, true)\n    );\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, success, descriptor);\n  });\n"],"mappings":"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"}