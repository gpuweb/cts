{"version":3,"file":"destroy.spec.js","names":["description","makeTestGroup","kTextureAspects","isDepthTextureFormat","isStencilTextureFormat","AllFeaturesMaxLimitsValidationTest","g","test","desc","fn","t","texture","getSampledTexture","destroy","device","pushErrorScope","invalidTexture","createTextureTracked","size","limits","maxTextureDimension2D","format","usage","GPUTextureUsage","TEXTURE_BINDING","error","popErrorScope","expect","kColorTextureFormat","params","u","combine","colorTextureState","depthStencilTextureAspect","depthStencilTextureState","isSubmitSuccess","depthStencilTextureFormat","colorTextureDesc","width","height","depthOrArrayLayers","COPY_DST","RENDER_ATTACHMENT","depthStencilTextureDesc","colorTexture","depthStencilTexture","commandEncoder","createCommandEncoder","depthStencilAttachment","view","createView","aspect","depthClearValue","depthLoadOp","depthStoreOp","stencilClearValue","stencilLoadOp","stencilStoreOp","renderPass","beginRenderPass","colorAttachments","clearValue","loadOp","storeOp","end","cmd","finish","expectValidationError","queue","submit"],"sources":["../../../../../src/webgpu/api/validation/texture/destroy.spec.ts"],"sourcesContent":["export const description = `\nDestroying a texture more than once is allowed.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kTextureAspects } from '../../../capability_info.js';\nimport { isDepthTextureFormat, isStencilTextureFormat } from '../../../format_info.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('base')\n  .desc(`Test that it is valid to destroy a texture.`)\n  .fn(t => {\n    const texture = t.getSampledTexture();\n    texture.destroy();\n  });\n\ng.test('twice')\n  .desc(`Test that it is valid to destroy a destroyed texture.`)\n  .fn(t => {\n    const texture = t.getSampledTexture();\n    texture.destroy();\n    texture.destroy();\n  });\n\ng.test('invalid_texture')\n  .desc('Test that invalid textures may be destroyed without generating validation errors.')\n  .fn(async t => {\n    t.device.pushErrorScope('validation');\n\n    const invalidTexture = t.createTextureTracked({\n      size: [t.device.limits.maxTextureDimension2D + 1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING,\n    });\n\n    // Expect error because it's invalid.\n    const error = await t.device.popErrorScope();\n    t.expect(!!error);\n\n    // This line should not generate an error\n    invalidTexture.destroy();\n  });\n\nconst kColorTextureFormat: GPUTextureFormat = 'rgba8unorm';\n\ng.test('submit_a_destroyed_texture_as_attachment')\n  .desc(\n    `\nTest that it is invalid to submit with a texture as {color, depth, stencil, depth-stencil} attachment\nthat was destroyed {before, after} encoding finishes.\n`\n  )\n  .params(u =>\n    u //\n      .combine('depthStencilTextureAspect', kTextureAspects)\n      .combine('colorTextureState', [\n        'valid',\n        'destroyedBeforeEncode',\n        'destroyedAfterEncode',\n      ] as const)\n      .combine('depthStencilTextureState', [\n        'valid',\n        'destroyedBeforeEncode',\n        'destroyedAfterEncode',\n      ] as const)\n  )\n  .fn(t => {\n    const { colorTextureState, depthStencilTextureAspect, depthStencilTextureState } = t.params;\n\n    const isSubmitSuccess = colorTextureState === 'valid' && depthStencilTextureState === 'valid';\n\n    const depthStencilTextureFormat: GPUTextureFormat =\n      depthStencilTextureAspect === 'all'\n        ? 'depth24plus-stencil8'\n        : depthStencilTextureAspect === 'depth-only'\n        ? 'depth32float'\n        : 'stencil8';\n\n    const colorTextureDesc: GPUTextureDescriptor = {\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: kColorTextureFormat,\n      usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\n    };\n\n    const depthStencilTextureDesc: GPUTextureDescriptor = {\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: depthStencilTextureFormat,\n      usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\n    };\n\n    const colorTexture = t.createTextureTracked(colorTextureDesc);\n    const depthStencilTexture = t.createTextureTracked(depthStencilTextureDesc);\n\n    if (colorTextureState === 'destroyedBeforeEncode') {\n      colorTexture.destroy();\n    }\n    if (depthStencilTextureState === 'destroyedBeforeEncode') {\n      depthStencilTexture.destroy();\n    }\n\n    const commandEncoder = t.device.createCommandEncoder();\n    const depthStencilAttachment: GPURenderPassDepthStencilAttachment = {\n      view: depthStencilTexture.createView({ aspect: depthStencilTextureAspect }),\n    };\n    if (isDepthTextureFormat(depthStencilTextureFormat)) {\n      depthStencilAttachment.depthClearValue = 0;\n      depthStencilAttachment.depthLoadOp = 'clear';\n      depthStencilAttachment.depthStoreOp = 'discard';\n    }\n    if (isStencilTextureFormat(depthStencilTextureFormat)) {\n      depthStencilAttachment.stencilClearValue = 0;\n      depthStencilAttachment.stencilLoadOp = 'clear';\n      depthStencilAttachment.stencilStoreOp = 'discard';\n    }\n    const renderPass = commandEncoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: colorTexture.createView(),\n          clearValue: [0, 0, 0, 0],\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n      depthStencilAttachment,\n    });\n    renderPass.end();\n\n    const cmd = commandEncoder.finish();\n\n    if (colorTextureState === 'destroyedAfterEncode') {\n      colorTexture.destroy();\n    }\n    if (depthStencilTextureState === 'destroyedAfterEncode') {\n      depthStencilTexture.destroy();\n    }\n\n    t.expectValidationError(() => t.queue.submit([cmd]), !isSubmitSuccess);\n  });\n"],"mappings":"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"}