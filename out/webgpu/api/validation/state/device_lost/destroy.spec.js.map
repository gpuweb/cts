{"version":3,"file":"destroy.spec.js","names":["description","makeTestGroup","assert","allBindingEntries","bindingTypeInfo","kBindableResources","kBufferUsageKeys","kBufferUsageInfo","kBufferUsageCopy","kBufferUsageCopyInfo","kQueryTypes","kTextureUsageType","kTextureUsageTypeInfo","kTextureUsageCopy","kTextureUsageCopyInfo","kShaderStageKeys","getBlockInfoForColorTextureFormat","kCompressedTextureFormats","kRegularTextureFormats","kPossibleColorRenderableTextureFormats","getBlockInfoForTextureFormat","isTextureFormatPossiblyUsableAsColorRenderAttachment","isTextureFormatPossiblyStorageReadable","AllFeaturesMaxLimitsGPUTest","createCanvas","kAllCanvasTypes","kValidCanvasContextIds","startPlayingAndWaitForVideo","getVideoElement","getVideoFrameFromVideoElement","vtu","kCommandValidationStages","DeviceDestroyTests","executeAfterDestroy","fn","awaitLost","expectDeviceLost","expectValidationError","device","destroy","lostInfo","lost","expect","reason","executeCommandsAfterDestroy","stage","encoderType","createEncoder","validateFinish","encoder","finish","validateFinishAndSubmit","commands","queue","submit","g","test","desc","params","u","combine","filter","usageType","usageCopy","t","mappedAtCreation","createBufferTracked","size","usage","format","skipIfTextureFormatNotSupported","blockWidth","blockHeight","createTextureTracked","width","height","texture","createView","createSampler","entry","visibility","validStages","createBindGroupLayout","entries","binding","resourceType","info","resource","layout","getBindingResource","createBindGroup","bindGroupLayout","createPipelineLayout","bindGroupLayouts","createShaderModule","code","getNoOpShaderCode","cShader","createComputePipeline","compute","module","entryPoint","vShader","fShader","createRenderPipeline","vertex","fragment","targets","writeMask","valid","createComputePipelineAsync","p","isLost","then","shouldResolve","pipeline","GPUComputePipeline","err","GPUPipelineError","createRenderPipelineAsync","GPURenderPipeline","createCommandEncoder","skipIfTextureFormatNotUsableAsRenderAttachment","createRenderBundleEncoder","colorFormats","type","skipIfDeviceDoesNotSupportQueryType","createQuerySetTracked","count","sourceType","videoElement","skip","source","GPUShaderStage","FRAGMENT","externalTexture","importExternalTexture","kBufferSize","src","GPUBufferUsage","COPY_SRC","dst","COPY_DST","maker","copyBufferToBuffer","bytesPerBlock","buffer","GPUTextureUsage","copySize","copyBufferToTexture","copyTextureToBuffer","copyTextureToTexture","clearBuffer","kQueryCount","querySet","createQuerySetWithState","destination","createBufferWithState","QUERY_RESOLVE","resolveQuerySet","setPipeline","dispatchWorkgroups","draw","numElements","data","Uint8Array","writeBuffer","writeTexture","canvasType","contextType","canvas","ctx","getContext","tryTrackForCleanup","copyExternalImageToTexture","createImageBitmap","imageBitmap","ImageData","Uint8ClampedArray"],"sources":["../../../../../../src/webgpu/api/validation/state/device_lost/destroy.spec.ts"],"sourcesContent":["export const description = `\nTests for device lost induced via destroy.\n  - Tests that prior to device destruction, valid APIs do not generate errors (control case).\n  - After device destruction, runs the same APIs. No expected observable results, so test crash or future failures are the only current failure indicators.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { assert } from '../../../../../common/util/util.js';\nimport {\n  allBindingEntries,\n  bindingTypeInfo,\n  kBindableResources,\n  kBufferUsageKeys,\n  kBufferUsageInfo,\n  kBufferUsageCopy,\n  kBufferUsageCopyInfo,\n  kQueryTypes,\n  kTextureUsageType,\n  kTextureUsageTypeInfo,\n  kTextureUsageCopy,\n  kTextureUsageCopyInfo,\n  kShaderStageKeys,\n} from '../../../../capability_info.js';\nimport {\n  getBlockInfoForColorTextureFormat,\n  kCompressedTextureFormats,\n  kRegularTextureFormats,\n  kPossibleColorRenderableTextureFormats,\n  getBlockInfoForTextureFormat,\n  isTextureFormatPossiblyUsableAsColorRenderAttachment,\n  isTextureFormatPossiblyStorageReadable,\n} from '../../../../format_info.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../../gpu_test.js';\nimport { CommandBufferMaker, EncoderType } from '../../../../util/command_buffer_maker.js';\nimport {\n  createCanvas,\n  kAllCanvasTypes,\n  kValidCanvasContextIds,\n} from '../../../../util/create_elements.js';\nimport {\n  startPlayingAndWaitForVideo,\n  getVideoElement,\n  getVideoFrameFromVideoElement,\n} from '../../../../web_platform/util.js';\nimport * as vtu from '../../validation_test_utils.js';\n\nconst kCommandValidationStages = ['finish', 'submit'];\ntype CommandValidationStage = (typeof kCommandValidationStages)[number];\n\nclass DeviceDestroyTests extends AllFeaturesMaxLimitsGPUTest {\n  /**\n   * Expects that `fn` does not produce any errors before the device is destroyed, and then calls\n   * `fn` after the device is destroyed without any specific expectation. If `awaitLost` is true, we\n   * also wait for device.lost to resolve before executing `fn` in the destroy case.\n   */\n  async executeAfterDestroy(fn: () => void, awaitLost: boolean): Promise<void> {\n    this.expectDeviceLost('destroyed');\n\n    this.expectValidationError(fn, false);\n    this.device.destroy();\n    if (awaitLost) {\n      const lostInfo = await this.device.lost;\n      this.expect(lostInfo.reason === 'destroyed');\n    }\n    fn();\n  }\n\n  /**\n   * Expects that encoders can finish and submit the resulting commands before the device is\n   * destroyed, then repeats the same process after the device is destroyed without any specific\n   * expectations.\n   * There are two valid stages: 'finish' and 'submit'.\n   *   'finish': Tests [encode, finish] and [encoder, destroy, finish]\n   *   'submit': Tests [encoder, finish, submit] and [encoder, finish, destroy, submit]\n   */\n  async executeCommandsAfterDestroy<T extends EncoderType>(\n    stage: CommandValidationStage,\n    awaitLost: boolean,\n    encoderType: T,\n    fn: (maker: CommandBufferMaker<T>) => CommandBufferMaker<T>\n  ): Promise<void> {\n    this.expectDeviceLost('destroyed');\n\n    switch (stage) {\n      case 'finish': {\n        // Control case\n        fn(this.createEncoder(encoderType)).validateFinish(true);\n        // Validation case\n        const encoder = fn(this.createEncoder(encoderType));\n        await this.executeAfterDestroy(() => {\n          encoder.finish();\n        }, awaitLost);\n        break;\n      }\n      case 'submit': {\n        // Control case\n        fn(this.createEncoder(encoderType)).validateFinishAndSubmit(true, true);\n        // Validation case\n        const commands = fn(this.createEncoder(encoderType)).validateFinish(true);\n        await this.executeAfterDestroy(() => {\n          this.queue.submit([commands]);\n        }, awaitLost);\n        break;\n      }\n    }\n  }\n}\n\nexport const g = makeTestGroup(DeviceDestroyTests);\n\ng.test('createBuffer')\n  .desc(\n    `\nTests creating buffers on destroyed device. Tests valid combinations of:\n  - Various usages\n  - Mapped at creation or not\n  `\n  )\n  .params(u =>\n    u\n      .combine('usageType', kBufferUsageKeys)\n\n      .combine('usageCopy', kBufferUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ usageType, usageCopy }) => {\n        if (usageType === 'COPY_SRC' || usageType === 'COPY_DST') {\n          return false;\n        }\n        if (usageType === 'MAP_READ') {\n          return usageCopy === 'COPY_NONE' || usageCopy === 'COPY_DST';\n        }\n        if (usageType === 'MAP_WRITE') {\n          return usageCopy === 'COPY_NONE' || usageCopy === 'COPY_SRC';\n        }\n        return true;\n      })\n      .combine('mappedAtCreation', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, usageType, usageCopy, mappedAtCreation } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.createBufferTracked({\n        size: 16,\n        usage: kBufferUsageInfo[usageType] | kBufferUsageCopyInfo[usageCopy],\n        mappedAtCreation,\n      });\n    }, awaitLost);\n  });\n\ng.test('createTexture,2d,uncompressed_format')\n  .desc(\n    `\nTests creating 2d uncompressed textures on destroyed device. Tests valid combinations of:\n  - Various uncompressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kRegularTextureFormats)\n\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        return !(\n          (!isTextureFormatPossiblyUsableAsColorRenderAttachment(format) &&\n            usageType === 'render') ||\n          (!isTextureFormatPossiblyStorageReadable(format) && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n    const { blockWidth, blockHeight } = getBlockInfoForTextureFormat(format);\n    await t.executeAfterDestroy(() => {\n      t.createTextureTracked({\n        size: { width: blockWidth, height: blockHeight },\n        usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n        format,\n      });\n    }, awaitLost);\n  });\n\ng.test('createTexture,2d,compressed_format')\n  .desc(\n    `\nTests creating 2d compressed textures on destroyed device. Tests valid combinations of:\n  - Various compressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kCompressedTextureFormats)\n\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        return !(\n          (!isTextureFormatPossiblyUsableAsColorRenderAttachment(format) &&\n            usageType === 'render') ||\n          (!isTextureFormatPossiblyStorageReadable(format) && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n    const { blockWidth, blockHeight } = getBlockInfoForColorTextureFormat(format);\n    await t.executeAfterDestroy(() => {\n      t.createTextureTracked({\n        size: { width: blockWidth, height: blockHeight },\n        usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n        format,\n      });\n    }, awaitLost);\n  });\n\ng.test('createView,2d,uncompressed_format')\n  .desc(\n    `\nTests creating texture views on 2d uncompressed textures from destroyed device. Tests valid combinations of:\n  - Various uncompressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kRegularTextureFormats)\n\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        return !(\n          (!isTextureFormatPossiblyUsableAsColorRenderAttachment(format) &&\n            usageType === 'render') ||\n          (!isTextureFormatPossiblyStorageReadable(format) && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n    const { blockWidth, blockHeight } = getBlockInfoForTextureFormat(format);\n    const texture = t.createTextureTracked({\n      size: { width: blockWidth, height: blockHeight },\n      usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      texture.createView({ format });\n    }, awaitLost);\n  });\n\ng.test('createView,2d,compressed_format')\n  .desc(\n    `\nTests creating texture views on 2d compressed textures from destroyed device. Tests valid combinations of:\n  - Various compressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kCompressedTextureFormats)\n\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        return !(\n          (!isTextureFormatPossiblyUsableAsColorRenderAttachment(format) &&\n            usageType === 'render') ||\n          (!isTextureFormatPossiblyStorageReadable(format) && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n    const { blockWidth, blockHeight } = getBlockInfoForColorTextureFormat(format);\n    const texture = t.createTextureTracked({\n      size: { width: blockWidth, height: blockHeight },\n      usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      texture.createView({ format });\n    }, awaitLost);\n  });\n\ng.test('createSampler')\n  .desc(\n    `\nTests creating samplers on destroyed device.\n  `\n  )\n  .params(u => u.combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createSampler();\n    }, awaitLost);\n  });\n\ng.test('createBindGroupLayout')\n  .desc(\n    `\nTests creating bind group layouts on destroyed device. Tests valid combinations of:\n  - Various valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .params(u => u.combine('entry', allBindingEntries(false)).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    await t.executeAfterDestroy(() => {\n      t.device.createBindGroupLayout({\n        entries: [{ binding: 0, visibility, ...entry }],\n      });\n    }, awaitLost);\n  });\n\ng.test('createBindGroup')\n  .desc(\n    `\nTests creating bind group on destroyed device. Tests valid combinations of:\n  - Various bound resource types\n  - Various valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .desc(`A destroyed device should not be able to create any valid bind groups.`)\n  .params(u =>\n    u\n      .combine('resourceType', kBindableResources)\n      .combine('entry', allBindingEntries(false))\n      .filter(({ resourceType, entry }) => {\n        const info = bindingTypeInfo(entry);\n        switch (info.resource) {\n          // Either type of sampler may be bound to a filtering sampler binding.\n          case 'filtSamp':\n            return resourceType === 'filtSamp' || resourceType === 'nonFiltSamp';\n          // But only non-filtering samplers can be used with non-filtering sampler bindings.\n          case 'nonFiltSamp':\n            return resourceType === 'nonFiltSamp';\n          default:\n            return info.resource === resourceType;\n        }\n      })\n\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, resourceType, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    const layout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility, ...entry }],\n    });\n    const resource = vtu.getBindingResource(t, resourceType);\n    await t.executeAfterDestroy(() => {\n      t.device.createBindGroup({ layout, entries: [{ binding: 0, resource }] });\n    }, awaitLost);\n  });\n\ng.test('createPipelineLayout')\n  .desc(\n    `\nTests creating pipeline layouts on destroyed device. Tests valid combinations of:\n  - Various bind groups with valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .params(u => u.combine('entry', allBindingEntries(false)).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility, ...entry }],\n    });\n    await t.executeAfterDestroy(() => {\n      t.device.createPipelineLayout({\n        bindGroupLayouts: [bindGroupLayout],\n      });\n    }, awaitLost);\n  });\n\ng.test('createShaderModule')\n  .desc(\n    `\nTests creating shader modules on destroyed device.\n  - Tests all shader stages: vertex, fragment, compute\n  `\n  )\n  .params(u => u.combine('stage', kShaderStageKeys).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost, stage } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createShaderModule({ code: vtu.getNoOpShaderCode(stage) });\n    }, awaitLost);\n  });\n\ng.test('createComputePipeline')\n  .desc(\n    `\nTests creating compute pipeline on destroyed device.\n  - Tests with a valid no-op compute shader\n  `\n  )\n  .params(u => u.combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    const cShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('COMPUTE') });\n    await t.executeAfterDestroy(() => {\n      t.device.createComputePipeline({\n        layout: 'auto',\n        compute: { module: cShader, entryPoint: 'main' },\n      });\n    }, awaitLost);\n  });\n\ng.test('createRenderPipeline')\n  .desc(\n    `\nTests creating render pipeline on destroyed device.\n  - Tests with valid no-op vertex and fragment shaders\n  `\n  )\n  .params(u => u.combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    const vShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('VERTEX') });\n    const fShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('FRAGMENT') });\n    await t.executeAfterDestroy(() => {\n      t.device.createRenderPipeline({\n        layout: 'auto',\n        vertex: { module: vShader, entryPoint: 'main' },\n        fragment: {\n          module: fShader,\n          entryPoint: 'main',\n          targets: [{ format: 'rgba8unorm', writeMask: 0 }],\n        },\n      });\n    }, awaitLost);\n  });\n\ng.test('createComputePipelineAsync')\n  .desc(\n    `\nTests creating a pipeline asynchronously while destroying the device and on a destroyed device\n- valid={true, false}, use an invalid or valid pipeline descriptor\n- awaitLost={true, false}, check results before/after waiting for the device lost promise\n  `\n  )\n  .params(u => u.combine('valid', [true, false]).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { valid, awaitLost } = t.params;\n    const cShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('COMPUTE') });\n    const fn = () =>\n      t.device.createComputePipelineAsync({\n        layout: 'auto',\n        compute: { module: cShader, entryPoint: valid ? 'main' : 'does_not_exist' },\n      });\n\n    // Kick off async creation\n    const p = fn();\n\n    // Track whether or not the device is lost.\n    let isLost = false;\n    void t.device.lost.then(() => {\n      isLost = true;\n    });\n\n    if (valid) {\n      // The async creation should resolve successfully.\n      t.shouldResolve(\n        (async () => {\n          const pipeline = await p;\n          assert(pipeline instanceof GPUComputePipeline, 'Pipeline was not a GPUComputePipeline');\n        })()\n      );\n    } else {\n      // The async creation should resolve successfully if the device is lost.\n      // If the device is not lost, it should see a validation error.\n      // Note: this could be a race!\n      t.shouldResolve(\n        p.then(\n          pipeline => {\n            assert(\n              isLost,\n              'Invalid async creation should \"succeed\" if the device is already lost.'\n            );\n            assert(pipeline instanceof GPUComputePipeline, 'Pipeline was not a GPUComputePipeline');\n          },\n          err => {\n            assert(\n              !isLost,\n              'Invalid async creation should only fail if the device is not yet lost.'\n            );\n            assert(err instanceof GPUPipelineError, 'Error was not a GPUPipelineError');\n            assert(err.reason === 'validation', 'Expected validation error');\n          }\n        )\n      );\n    }\n\n    // Destroy the device, and expect it to be lost.\n    t.expectDeviceLost('destroyed');\n    t.device.destroy();\n    if (awaitLost) {\n      const lostInfo = await t.device.lost;\n      t.expect(lostInfo.reason === 'destroyed');\n    }\n\n    // After device destroy, creation should still resolve successfully.\n    t.shouldResolve(\n      (async () => {\n        const pipeline = await fn();\n        assert(pipeline instanceof GPUComputePipeline, 'Pipeline was not a GPUComputePipeline');\n      })()\n    );\n  });\n\ng.test('createRenderPipelineAsync')\n  .desc(\n    `\nTests creating a pipeline asynchronously while destroying the device and on a destroyed device\n- valid={true, false}, use an invalid or valid pipeline descriptor\n- awaitLost={true, false}, check results before/after waiting for the device lost promise\n  `\n  )\n  .params(u => u.combine('valid', [true, false]).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { valid, awaitLost } = t.params;\n    const vShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('VERTEX') });\n    const fShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('FRAGMENT') });\n    const fn = () =>\n      t.device.createRenderPipelineAsync({\n        layout: 'auto',\n        vertex: { module: vShader, entryPoint: 'main' },\n        fragment: {\n          module: fShader,\n          entryPoint: valid ? 'main' : 'does_not_exist',\n          targets: [{ format: 'rgba8unorm', writeMask: 0 }],\n        },\n      });\n\n    // Kick off async creation\n    const p = fn();\n\n    // Track whether or not the device is lost.\n    let isLost = false;\n    void t.device.lost.then(() => {\n      isLost = true;\n    });\n\n    if (valid) {\n      // The async creation should resolve successfully.\n      t.shouldResolve(\n        (async () => {\n          const pipeline = await p;\n          assert(pipeline instanceof GPURenderPipeline, 'Pipeline was not a GPURenderPipeline');\n        })()\n      );\n    } else {\n      // The async creation should resolve successfully if the device is lost.\n      // If the device is not lost, it should see a validation error.\n      // Note: this could be a race!\n      t.shouldResolve(\n        p.then(\n          pipeline => {\n            assert(\n              isLost,\n              'Invalid async creation should \"succeed\" if the device is already lost.'\n            );\n            assert(pipeline instanceof GPURenderPipeline, 'Pipeline was not a GPURenderPipeline');\n          },\n          err => {\n            assert(\n              !isLost,\n              'Invalid async creation should only fail if the device is not yet lost.'\n            );\n            assert(err instanceof GPUPipelineError, 'Error was not a GPUPipelineError');\n            assert(err.reason === 'validation', 'Expected validation error');\n          }\n        )\n      );\n    }\n\n    // Destroy the device, and expect it to be lost.\n    t.expectDeviceLost('destroyed');\n    t.device.destroy();\n    if (awaitLost) {\n      const lostInfo = await t.device.lost;\n      t.expect(lostInfo.reason === 'destroyed');\n    }\n\n    // After device destroy, creation should still resolve successfully.\n    t.shouldResolve(\n      (async () => {\n        const pipeline = await fn();\n        assert(pipeline instanceof GPURenderPipeline, 'Pipeline was not a GPURenderPipeline');\n      })()\n    );\n  });\n\ng.test('createCommandEncoder')\n  .desc(\n    `\nTests creating command encoders on destroyed device.\n  `\n  )\n  .params(u => u.combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createCommandEncoder();\n    }, awaitLost);\n  });\n\ng.test('createRenderBundleEncoder')\n  .desc(\n    `\nTests creating render bundle encoders on destroyed device.\n  - Tests various renderable texture color formats\n  `\n  )\n  .params(u =>\n    u.combine('format', kPossibleColorRenderableTextureFormats).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, format } = t.params;\n    t.skipIfTextureFormatNotUsableAsRenderAttachment(format);\n    await t.executeAfterDestroy(() => {\n      t.device.createRenderBundleEncoder({ colorFormats: [format] });\n    }, awaitLost);\n  });\n\ng.test('createQuerySet')\n  .desc(\n    `\nTests creating query sets on destroyed device.\n  - Tests various query set types\n  `\n  )\n  .params(u => u.combine('type', kQueryTypes).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost, type } = t.params;\n    t.skipIfDeviceDoesNotSupportQueryType(type);\n    await t.executeAfterDestroy(() => {\n      t.createQuerySetTracked({ type, count: 4 });\n    }, awaitLost);\n  });\n\ng.test('importExternalTexture')\n  .desc(\n    `\nTests import external texture on destroyed device. Tests valid combinations of:\n  - Various valid source type\n  `\n  )\n  .params(u =>\n    u\n      .combine('sourceType', ['VideoElement', 'VideoFrame'] as const)\n\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, sourceType } = t.params;\n\n    const videoElement = getVideoElement(t, 'four-colors-vp9-bt601.webm');\n    if (!('requestVideoFrameCallback' in videoElement)) {\n      t.skip('HTMLVideoElement.requestVideoFrameCallback is not supported');\n    }\n\n    let source: HTMLVideoElement | VideoFrame;\n    await startPlayingAndWaitForVideo(videoElement, async () => {\n      source =\n        sourceType === 'VideoFrame'\n          ? await getVideoFrameFromVideoElement(t, videoElement)\n          : videoElement;\n\n      await t.executeAfterDestroy(() => {\n        t.device.createBindGroup({\n          layout: t.device.createBindGroupLayout({\n            entries: [{ binding: 0, visibility: GPUShaderStage.FRAGMENT, externalTexture: {} }],\n          }),\n          entries: [\n            {\n              binding: 0,\n              resource: t.device.importExternalTexture({ source }),\n            },\n          ],\n        });\n      }, awaitLost);\n    });\n  });\n\ng.test('command,copyBufferToBuffer')\n  .desc(\n    `\nTests copyBufferToBuffer command with various uncompressed formats on destroyed device.\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const kBufferSize = 16;\n    const src = t.createBufferTracked({\n      size: kBufferSize,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dst = t.createBufferTracked({\n      size: kBufferSize,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.copyBufferToBuffer(src, 0, dst, 0, kBufferSize);\n      return maker;\n    });\n  });\n\ng.test('command,copyBufferToTexture')\n  .desc(\n    `\nTests copyBufferToTexture command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const format = 'rgba32uint';\n    const { bytesPerBlock, blockWidth, blockHeight } = getBlockInfoForColorTextureFormat(format);\n    const src = {\n      buffer: t.createBufferTracked({\n        size: bytesPerBlock,\n        usage: GPUBufferUsage.COPY_SRC,\n      }),\n    };\n    const dst = {\n      texture: t.createTextureTracked({\n        size: { width: blockWidth, height: blockHeight },\n        usage: GPUTextureUsage.COPY_DST,\n        format,\n      }),\n    };\n    const copySize = { width: blockWidth, height: blockHeight };\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.copyBufferToTexture(src, dst, copySize);\n      return maker;\n    });\n  });\n\ng.test('command,copyTextureToBuffer')\n  .desc(\n    `\nTests copyTextureToBuffer command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const format = 'rgba32uint';\n    const { bytesPerBlock, blockWidth, blockHeight } = getBlockInfoForColorTextureFormat(format);\n    const src = {\n      texture: t.createTextureTracked({\n        size: { width: blockWidth, height: blockHeight },\n        usage: GPUTextureUsage.COPY_SRC,\n        format,\n      }),\n    };\n    const dst = {\n      buffer: t.createBufferTracked({\n        size: bytesPerBlock,\n        usage: GPUBufferUsage.COPY_DST,\n      }),\n    };\n    const copySize = { width: blockWidth, height: blockHeight };\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.copyTextureToBuffer(src, dst, copySize);\n      return maker;\n    });\n  });\n\ng.test('command,copyTextureToTexture')\n  .desc(\n    `\nTests copyTextureToTexture command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const format = 'rgba32uint';\n    const { blockWidth, blockHeight } = getBlockInfoForColorTextureFormat(format);\n    const src = {\n      texture: t.createTextureTracked({\n        size: { width: blockWidth, height: blockHeight },\n        usage: GPUTextureUsage.COPY_SRC,\n        format,\n      }),\n    };\n    const dst = {\n      texture: t.createTextureTracked({\n        size: { width: blockWidth, height: blockHeight },\n        usage: GPUBufferUsage.COPY_DST,\n        format,\n      }),\n    };\n    const copySize = { width: blockWidth, height: blockHeight };\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.copyTextureToTexture(src, dst, copySize);\n      return maker;\n    });\n  });\n\ng.test('command,clearBuffer')\n  .desc(\n    `\nTests encoding and finishing a clearBuffer command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const kBufferSize = 16;\n    const buffer = t.createBufferTracked({\n      size: kBufferSize,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.clearBuffer(buffer, 0, kBufferSize);\n      return maker;\n    });\n  });\n\ng.test('command,resolveQuerySet')\n  .desc(\n    `\nTests encoding and finishing a resolveQuerySet command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const kQueryCount = 2;\n    const querySet = vtu.createQuerySetWithState(t, 'valid');\n    const destination = vtu.createBufferWithState(t, 'valid', {\n      size: kQueryCount * 8,\n      usage: GPUBufferUsage.QUERY_RESOLVE,\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.resolveQuerySet(querySet, 0, 1, destination, 0);\n      return maker;\n    });\n  });\n\ng.test('command,computePass,dispatch')\n  .desc(\n    `\nTests encoding and dispatching a simple valid compute pass on destroyed device.\n  - Binds valid pipeline and bindgroups, then dispatches\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const cShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('COMPUTE') });\n    const pipeline = t.device.createComputePipeline({\n      layout: 'auto',\n      compute: { module: cShader, entryPoint: 'main' },\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'compute pass', maker => {\n      maker.encoder.setPipeline(pipeline);\n      maker.encoder.dispatchWorkgroups(1);\n      return maker;\n    });\n  });\n\ng.test('command,renderPass,draw')\n  .desc(\n    `\nTests encoding and finishing a simple valid render pass on destroyed device.\n  - Binds valid pipeline and bindgroups, then draws\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const vShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('VERTEX') });\n    const fShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('FRAGMENT') });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: { module: vShader, entryPoint: 'main' },\n      fragment: {\n        module: fShader,\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm', writeMask: 0 }],\n      },\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'render pass', maker => {\n      maker.encoder.setPipeline(pipeline);\n      maker.encoder.draw(0);\n      return maker;\n    });\n  });\n\ng.test('command,renderPass,renderBundle')\n  .desc(\n    `\nTests encoding and drawing a render pass including a render bundle on destroyed device.\n  - Binds valid pipeline and bindgroups, executes render bundle, then draws\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u => u.combine('stage', kCommandValidationStages).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const vShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('VERTEX') });\n    const fShader = t.device.createShaderModule({ code: vtu.getNoOpShaderCode('FRAGMENT') });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: { module: vShader, entryPoint: 'main' },\n      fragment: {\n        module: fShader,\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm', writeMask: 0 }],\n      },\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'render bundle', maker => {\n      maker.encoder.setPipeline(pipeline);\n      maker.encoder.draw(0);\n      return maker;\n    });\n  });\n\ng.test('queue,writeBuffer')\n  .desc(\n    `\nTests writeBuffer on queue on destroyed device.\n  `\n  )\n  .params(u => u.combine('numElements', [4, 8, 16]).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { numElements, awaitLost } = t.params;\n    const buffer = t.createBufferTracked({\n      size: numElements,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n    const data = new Uint8Array(numElements);\n    await t.executeAfterDestroy(() => {\n      t.device.queue.writeBuffer(buffer, 0, data);\n    }, awaitLost);\n  });\n\ng.test('queue,writeTexture,2d,uncompressed_format')\n  .desc(\n    `\nTests writeTexture on queue on destroyed device with uncompressed formats.\n  `\n  )\n  .params(u => u.combine('format', kRegularTextureFormats).combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { format, awaitLost } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n    const { blockWidth, blockHeight, bytesPerBlock } = getBlockInfoForTextureFormat(format);\n    const data = new Uint8Array(bytesPerBlock!);\n    const texture = t.createTextureTracked({\n      size: { width: blockWidth, height: blockHeight },\n      usage: GPUTextureUsage.COPY_DST,\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      t.device.queue.writeTexture(\n        { texture },\n        data,\n        {},\n        { width: blockWidth, height: blockHeight }\n      );\n    }, awaitLost);\n  });\n\ng.test('queue,writeTexture,2d,compressed_format')\n  .desc(\n    `\nTests writeTexture on queue on destroyed device with compressed formats.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kCompressedTextureFormats)\n\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { format, awaitLost } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n    const { blockWidth, blockHeight, bytesPerBlock } = getBlockInfoForColorTextureFormat(format);\n    const data = new Uint8Array(bytesPerBlock);\n    const texture = t.createTextureTracked({\n      size: { width: blockWidth, height: blockHeight },\n      usage: GPUTextureUsage.COPY_DST,\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      t.device.queue.writeTexture(\n        { texture },\n        data,\n        {},\n        { width: blockWidth, height: blockHeight }\n      );\n    }, awaitLost);\n  });\n\ng.test('queue,copyExternalImageToTexture,canvas')\n  .desc(\n    `\nTests copyExternalImageToTexture from canvas on queue on destroyed device.\n  `\n  )\n  .params(u =>\n    u\n      .combine('canvasType', kAllCanvasTypes)\n      .combine('contextType', kValidCanvasContextIds)\n\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { canvasType, contextType, awaitLost } = t.params;\n    const canvas = createCanvas(t, canvasType, 1, 1);\n    const texture = t.createTextureTracked({\n      size: { width: 1, height: 1 },\n      format: 'bgra8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    const ctx = (canvas as unknown as HTMLCanvasElement).getContext(contextType);\n    if (ctx === null) {\n      t.skip('Failed to get context for canvas element');\n      return;\n    }\n    t.tryTrackForCleanup(ctx);\n\n    await t.executeAfterDestroy(() => {\n      t.device.queue.copyExternalImageToTexture(\n        { source: canvas },\n        { texture },\n        { width: 1, height: 1 }\n      );\n    }, awaitLost);\n  });\n\ng.test('queue,copyExternalImageToTexture,imageBitmap')\n  .desc(\n    `\nTests copyExternalImageToTexture from canvas on queue on destroyed device.\n  `\n  )\n  .params(u => u.combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    if (typeof createImageBitmap === 'undefined') {\n      t.skip('Creating ImageBitmaps is not supported.');\n    }\n    const imageBitmap = await createImageBitmap(new ImageData(new Uint8ClampedArray(4), 1, 1));\n\n    const texture = t.createTextureTracked({\n      size: { width: 1, height: 1 },\n      format: 'bgra8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    await t.executeAfterDestroy(() => {\n      t.device.queue.copyExternalImageToTexture(\n        { source: imageBitmap },\n        { texture },\n        { width: 1, height: 1 }\n      );\n    }, awaitLost);\n  });\n"],"mappings":"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"}