{"version":3,"file":"createBindGroup.spec.js","names":["description","makeTestGroup","assert","makeValueTestVariant","unreachable","allBindingEntries","bindingTypeInfo","bufferBindingEntries","bufferBindingTypeInfo","kBindableResources","kBufferBindingTypes","kBufferUsages","kCompareFunctions","kSamplerBindingTypes","kTextureUsages","kTextureViewDimensions","sampledAndStorageBindingEntries","texBindingTypeInfo","GPUConst","kPossibleStorageTextureFormats","kRegularTextureFormats","kResourceStates","getTextureDimensionFromView","AllFeaturesMaxLimitsValidationTest","kTestFormat","clone","descriptor","JSON","parse","stringify","skipIfResourceNotSupportedInStages","t","entry","visibility","isCompatibility","skipIf","GPUShaderStage","FRAGMENT","buffer","type","device","limits","maxStorageBuffersInFragmentStage","storageTexture","undefined","maxStorageTexturesInFragmentStage","VERTEX","maxStorageBuffersInVertexStage","maxStorageTexturesInVertexStage","g","test","desc","paramsSubcasesOnly","u","combine","fn","layoutEntryCount","bindGroupEntryCount","params","layoutEntries","i","push","binding","COMPUTE","bindGroupLayout","createBindGroupLayout","entries","resource","getStorageBuffer","shouldError","expectValidationError","createBindGroup","layout","layoutBinding","resourceType","info","getBindingResource","IsStorageTextureResourceType","resourceBindingIsCompatible","unless","usage","TextureUsage","STORAGE_BINDING","appliedUsage","RENDER_ATTACHMENT","size","width","height","depthOrArrayLayers","format","sampleCount","createTextureTracked","createView","sampleType","texture","goodDescriptor","GPUTextureUsage","TEXTURE_BINDING","mismatchedTextureFormats","mismatchedTextureFormat","badDescriptor","p","viewDimension","beginSubcases","dimension","access","skipIfTextureViewDimensionNotSupported","textureView","multisampled","isValid","offset","_success","createBufferTracked","GPUBufferUsage","STORAGE","expand","minBindingSize","storageBuffer","kAllShaderStages","ShaderStage","state","visibilityMask","validStages","bgl","createBufferWithState","createTextureWithState","beforeAllSubcases","usesMismatchedDevice","mismatched","sourceDevice","mismatchedDevice","getUniformBuffer","sampler","combineWithParams","resource0Mismatched","resource1Mismatched","resource0","getDeviceMismatchedBindingResource","resource1","usage0","usage1","baseMipLevel","mipLevelCount","MIP_LEVEL_COUNT","storageTextureFormat","resourceFormat","skipIfTextureFormatNotUsableAsStorageTexture","BufferUsage","MAP_READ","MAP_WRITE","UNIFORM","add","mult","offsetAddMult","minAlignment","base","limit","bindingSize","maxBindingSize","offsetMult","bufferSizeAddition","bufferSize","effectiveBindingSize","createSampler","bgType","compareFunction","compare","externalTexture","skipIfTextureFormatNotSupported"],"sources":["../../../../src/webgpu/api/validation/createBindGroup.spec.ts"],"sourcesContent":["export const description = `\n  createBindGroup validation tests.\n\n  TODO: Ensure sure tests cover all createBindGroup validation rules.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { assert, makeValueTestVariant, unreachable } from '../../../common/util/util.js';\nimport {\n  allBindingEntries,\n  BGLEntry,\n  BindableResource,\n  bindingTypeInfo,\n  bufferBindingEntries,\n  bufferBindingTypeInfo,\n  kBindableResources,\n  kBufferBindingTypes,\n  kBufferUsages,\n  kCompareFunctions,\n  kSamplerBindingTypes,\n  kTextureUsages,\n  kTextureViewDimensions,\n  sampledAndStorageBindingEntries,\n  texBindingTypeInfo,\n} from '../../capability_info.js';\nimport { GPUConst } from '../../constants.js';\nimport { kPossibleStorageTextureFormats, kRegularTextureFormats } from '../../format_info.js';\nimport { kResourceStates } from '../../gpu_test.js';\nimport { getTextureDimensionFromView } from '../../util/texture/base.js';\n\nimport { AllFeaturesMaxLimitsValidationTest } from './validation_test.js';\n\nconst kTestFormat: GPUTextureFormat = 'r32float';\n\nfunction clone<T extends GPUTextureDescriptor>(descriptor: T): T {\n  return JSON.parse(JSON.stringify(descriptor));\n}\n\nfunction skipIfResourceNotSupportedInStages(\n  t: AllFeaturesMaxLimitsValidationTest,\n  entry: BGLEntry,\n  visibility: number\n) {\n  if (t.isCompatibility) {\n    t.skipIf(\n      (visibility & GPUShaderStage.FRAGMENT) !== 0 &&\n        (entry.buffer?.type === 'storage' || entry.buffer?.type === 'read-only-storage') &&\n        !(t.device.limits.maxStorageBuffersInFragmentStage! >= 2),\n      `maxStorageBuffersInFragmentStage(${t.device.limits.maxStorageBuffersInFragmentStage}) < 2`\n    );\n    t.skipIf(\n      (visibility & GPUShaderStage.FRAGMENT) !== 0 &&\n        entry.storageTexture !== undefined &&\n        !(t.device.limits.maxStorageTexturesInFragmentStage! >= 1),\n      `maxStorageTexturesInFragmentStage(${t.device.limits.maxStorageTexturesInFragmentStage}) < 1`\n    );\n    t.skipIf(\n      (visibility & GPUShaderStage.VERTEX) !== 0 &&\n        (entry.buffer?.type === 'storage' || entry.buffer?.type === 'read-only-storage') &&\n        !(t.device.limits.maxStorageBuffersInVertexStage! >= 2),\n      `maxStorageBuffersInVertexStage(${t.device.limits.maxStorageBuffersInVertexStage}) < 2`\n    );\n    t.skipIf(\n      (visibility & GPUShaderStage.VERTEX) !== 0 &&\n        entry.storageTexture !== undefined &&\n        !(t.device.limits.maxStorageTexturesInVertexStage! >= 1),\n      `maxStorageTexturesInVertexStage(${t.device.limits.maxStorageTexturesInVertexStage}) < 1`\n    );\n  }\n}\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('binding_count_mismatch')\n  .desc('Test that the number of entries must match the number of entries in the BindGroupLayout.')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('layoutEntryCount', [1, 2, 3])\n      .combine('bindGroupEntryCount', [1, 2, 3])\n  )\n  .fn(t => {\n    const { layoutEntryCount, bindGroupEntryCount } = t.params;\n\n    const layoutEntries: Array<GPUBindGroupLayoutEntry> = [];\n    for (let i = 0; i < layoutEntryCount; ++i) {\n      layoutEntries.push({\n        binding: i,\n        visibility: GPUShaderStage.COMPUTE,\n        buffer: { type: 'storage' },\n      });\n    }\n    const bindGroupLayout = t.device.createBindGroupLayout({ entries: layoutEntries });\n\n    const entries: Array<GPUBindGroupEntry> = [];\n    for (let i = 0; i < bindGroupEntryCount; ++i) {\n      entries.push({\n        binding: i,\n        resource: { buffer: t.getStorageBuffer() },\n      });\n    }\n\n    const shouldError = layoutEntryCount !== bindGroupEntryCount;\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries,\n        layout: bindGroupLayout,\n      });\n    }, shouldError);\n  });\n\ng.test('binding_must_be_present_in_layout')\n  .desc(\n    'Test that the binding slot for each entry matches a binding slot defined in the BindGroupLayout.'\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('layoutBinding', [0, 1, 2])\n      .combine('binding', [0, 1, 2])\n  )\n  .fn(t => {\n    const { layoutBinding, binding } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        { binding: layoutBinding, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } },\n      ],\n    });\n\n    const descriptor = {\n      entries: [{ binding, resource: { buffer: t.getStorageBuffer() } }],\n      layout: bindGroupLayout,\n    };\n\n    const shouldError = layoutBinding !== binding;\n    t.expectValidationError(() => {\n      t.device.createBindGroup(descriptor);\n    }, shouldError);\n  });\n\ng.test('binding_must_contain_resource_defined_in_layout')\n  .desc(\n    'Test that only compatible resource types specified in the BindGroupLayout are allowed for each entry.'\n  )\n  .params(u =>\n    u //\n      .combine('resourceType', kBindableResources)\n      .combine('entry', allBindingEntries(false, kTestFormat))\n  )\n  .fn(t => {\n    const { resourceType, entry } = t.params;\n    const info = bindingTypeInfo(entry);\n\n    const layout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility: GPUShaderStage.COMPUTE, ...entry }],\n    });\n\n    const resource = t.getBindingResource(resourceType);\n\n    const IsStorageTextureResourceType = (resourceType: BindableResource) => {\n      switch (resourceType) {\n        case 'readonlyStorageTex':\n        case 'readwriteStorageTex':\n        case 'writeonlyStorageTex':\n          return true;\n        default:\n          return false;\n      }\n    };\n\n    let resourceBindingIsCompatible;\n    switch (info.resource) {\n      // Either type of sampler may be bound to a filtering sampler binding.\n      case 'filtSamp':\n        resourceBindingIsCompatible = resourceType === 'filtSamp' || resourceType === 'nonFiltSamp';\n        break;\n      // But only non-filtering samplers can be used with non-filtering sampler bindings.\n      case 'nonFiltSamp':\n        resourceBindingIsCompatible = resourceType === 'nonFiltSamp';\n        break;\n      case 'readonlyStorageTex':\n      case 'readwriteStorageTex':\n      case 'writeonlyStorageTex':\n        resourceBindingIsCompatible = IsStorageTextureResourceType(resourceType);\n        break;\n      default:\n        resourceBindingIsCompatible = info.resource === resourceType;\n        break;\n    }\n    t.expectValidationError(() => {\n      t.device.createBindGroup({ layout, entries: [{ binding: 0, resource }] });\n    }, !resourceBindingIsCompatible);\n  });\n\ng.test('texture_binding_must_have_correct_usage')\n  .desc('Tests that texture bindings must have the correct usage.')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('entry', sampledAndStorageBindingEntries(false, kTestFormat))\n      .combine('usage', kTextureUsages)\n      .unless(({ entry, usage }) => {\n        const info = texBindingTypeInfo(entry);\n        // Can't create the texture for this (usage=STORAGE_BINDING and sampleCount=4), so skip.\n        return usage === GPUConst.TextureUsage.STORAGE_BINDING && info.resource === 'sampledTexMS';\n      })\n  )\n  .fn(t => {\n    const { entry, usage } = t.params;\n    const info = texBindingTypeInfo(entry);\n\n    t.skipIf(\n      t.isCompatibility && info.resource === 'sampledTexMS',\n      \"The test requires 'r32float' multisampled support which compat mode doesn't guarantee.\"\n    );\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility: GPUShaderStage.COMPUTE, ...entry }],\n    });\n\n    // The `RENDER_ATTACHMENT` usage must be specified if sampleCount > 1 according to WebGPU SPEC.\n    const appliedUsage =\n      info.resource === 'sampledTexMS' ? usage | GPUConst.TextureUsage.RENDER_ATTACHMENT : usage;\n\n    const descriptor = {\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: kTestFormat,\n      usage: appliedUsage,\n      sampleCount: info.resource === 'sampledTexMS' ? 4 : 1,\n    };\n    const resource = t.createTextureTracked(descriptor).createView();\n\n    const shouldError = (usage & info.usage) === 0;\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource }],\n        layout: bindGroupLayout,\n      });\n    }, shouldError);\n  });\n\ng.test('texture_must_have_correct_component_type')\n  .desc(\n    `\n    Tests that texture bindings must have a format that matches the sample type specified in the BindGroupLayout.\n    - Tests a compatible format for every sample type\n    - Tests an incompatible format for every sample type`\n  )\n  .params(u => u.combine('sampleType', ['float', 'sint', 'uint'] as const))\n  .fn(t => {\n    const { sampleType } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.FRAGMENT,\n          texture: { sampleType },\n        },\n      ],\n    });\n\n    let format: GPUTextureFormat;\n    if (sampleType === 'float') {\n      format = 'r8unorm';\n    } else if (sampleType === 'sint') {\n      format = 'r8sint';\n    } else if (sampleType === 'uint') {\n      format = 'r8uint';\n    } else {\n      unreachable('Unexpected texture component type');\n    }\n\n    const goodDescriptor = {\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format,\n      usage: GPUTextureUsage.TEXTURE_BINDING,\n    };\n\n    // Control case\n    t.device.createBindGroup({\n      entries: [\n        {\n          binding: 0,\n          resource: t.createTextureTracked(goodDescriptor).createView(),\n        },\n      ],\n      layout: bindGroupLayout,\n    });\n\n    function* mismatchedTextureFormats(): Iterable<GPUTextureFormat> {\n      if (sampleType !== 'float') {\n        yield 'r8unorm';\n      }\n      if (sampleType !== 'sint') {\n        yield 'r8sint';\n      }\n      if (sampleType !== 'uint') {\n        yield 'r8uint';\n      }\n    }\n\n    // Mismatched texture binding formats are not valid.\n    for (const mismatchedTextureFormat of mismatchedTextureFormats()) {\n      const badDescriptor: GPUTextureDescriptor = clone(goodDescriptor);\n      badDescriptor.format = mismatchedTextureFormat;\n\n      t.expectValidationError(() => {\n        t.device.createBindGroup({\n          entries: [{ binding: 0, resource: t.createTextureTracked(badDescriptor).createView() }],\n          layout: bindGroupLayout,\n        });\n      });\n    }\n  });\n\ng.test('texture_must_have_correct_dimension')\n  .desc(\n    `\n    Test that bound texture views match the dimensions supplied in the BindGroupLayout\n      - Test for every GPUTextureViewDimension\n      - Test for both TEXTURE_BINDING and STORAGE_BINDING.\n  `\n  )\n  .params(u =>\n    u\n      .combine('usage', [\n        GPUConst.TextureUsage.TEXTURE_BINDING,\n        GPUConst.TextureUsage.STORAGE_BINDING,\n      ])\n      .combine('viewDimension', kTextureViewDimensions)\n      .unless(\n        p =>\n          p.usage === GPUConst.TextureUsage.STORAGE_BINDING &&\n          (p.viewDimension === 'cube' || p.viewDimension === 'cube-array')\n      )\n      .beginSubcases()\n      .combine('dimension', kTextureViewDimensions)\n  )\n  .fn(t => {\n    const { usage, viewDimension, dimension } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        usage === GPUTextureUsage.TEXTURE_BINDING\n          ? {\n              binding: 0,\n              visibility: GPUShaderStage.COMPUTE,\n              texture: { viewDimension },\n            }\n          : {\n              binding: 0,\n              visibility: GPUShaderStage.COMPUTE,\n              storageTexture: { access: 'write-only', format: 'rgba8unorm', viewDimension },\n            },\n      ],\n    });\n\n    let height = 16;\n    let depthOrArrayLayers = 6;\n    if (dimension === '1d') {\n      height = 1;\n      depthOrArrayLayers = 1;\n    }\n\n    const texture = t.createTextureTracked({\n      size: { width: 16, height, depthOrArrayLayers },\n      format: 'rgba8unorm' as const,\n      usage,\n      dimension: getTextureDimensionFromView(dimension),\n    });\n\n    t.skipIfTextureViewDimensionNotSupported(viewDimension, dimension);\n    if (t.isCompatibility && texture.dimension === '2d') {\n      if (depthOrArrayLayers === 1) {\n        t.skipIf(\n          viewDimension !== '2d',\n          '1 layer 2d textures default to textureBindingViewDimension: \"2d\" in compat mode'\n        );\n      } else {\n        t.skipIf(\n          viewDimension !== '2d-array',\n          '> 1 layer 2d textures default to textureBindingViewDimension \"2d-array\" in compat mode'\n        );\n      }\n    }\n\n    const shouldError = viewDimension !== dimension;\n    const textureView = texture.createView({ dimension });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, shouldError);\n  });\n\ng.test('multisampled_validation')\n  .desc(\n    `\n    Test that the sample count of the texture is greater than 1 if the BindGroup entry's\n    multisampled is true. Otherwise, the texture's sampleCount should be 1.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('multisampled', [true, false])\n      .beginSubcases()\n      .combine('sampleCount', [1, 4])\n  )\n  .fn(t => {\n    const { multisampled, sampleCount } = t.params;\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          texture: { multisampled, sampleType: multisampled ? 'unfilterable-float' : undefined },\n        },\n      ],\n    });\n\n    const texture = t.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm' as const,\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,\n      sampleCount,\n    });\n\n    const isValid = (!multisampled && sampleCount === 1) || (multisampled && sampleCount > 1);\n\n    const textureView = texture.createView();\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('buffer_offset_and_size_for_bind_groups_match')\n  .desc(\n    `\n    Test that a buffer binding's [offset, offset + size) must be contained in the BindGroup entry's buffer.\n    - Test for various offsets and sizes`\n  )\n  .paramsSubcasesOnly([\n    { offset: 0, size: 512, _success: true }, // offset 0 is valid\n    { offset: 256, size: 256, _success: true }, // offset 256 (aligned) is valid\n\n    // Touching the end of the buffer\n    { offset: 0, size: 1024, _success: true },\n    { offset: 0, size: undefined, _success: true },\n    { offset: 256 * 3, size: 256, _success: true },\n    { offset: 256 * 3, size: undefined, _success: true },\n\n    // Zero-sized bindings\n    { offset: 0, size: 0, _success: false },\n    { offset: 256, size: 0, _success: false },\n    { offset: 1024, size: 0, _success: false },\n    { offset: 1024, size: undefined, _success: false },\n\n    // Unaligned buffer offset is invalid\n    { offset: 1, size: 256, _success: false },\n    { offset: 1, size: undefined, _success: false },\n    { offset: 128, size: 256, _success: false },\n    { offset: 255, size: 256, _success: false },\n\n    // Out-of-bounds\n    { offset: 256 * 5, size: 0, _success: false }, // offset is OOB\n    { offset: 0, size: 256 * 5, _success: false }, // size is OOB\n    { offset: 1024, size: 1, _success: false }, // offset+size is OOB\n  ])\n  .fn(t => {\n    const { offset, size, _success } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility: GPUShaderStage.COMPUTE, buffer: { type: 'storage' } }],\n    });\n\n    const buffer = t.createBufferTracked({\n      size: 1024,\n      usage: GPUBufferUsage.STORAGE,\n    });\n\n    const descriptor = {\n      entries: [\n        {\n          binding: 0,\n          resource: { buffer, offset, size },\n        },\n      ],\n      layout: bindGroupLayout,\n    };\n\n    if (_success) {\n      // Control case\n      t.device.createBindGroup(descriptor);\n    } else {\n      // Buffer offset and/or size don't match in bind groups.\n      t.expectValidationError(() => {\n        t.device.createBindGroup(descriptor);\n      });\n    }\n  });\n\ng.test('minBindingSize')\n  .desc('Tests that minBindingSize is correctly enforced.')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('minBindingSize', [undefined, 4, 8, 256])\n      .expand('size', ({ minBindingSize }) =>\n        minBindingSize !== undefined\n          ? [minBindingSize - 4, minBindingSize, minBindingSize + 4]\n          : [4, 256]\n      )\n  )\n  .fn(t => {\n    const { size, minBindingSize } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: {\n            type: 'storage',\n            minBindingSize,\n          },\n        },\n      ],\n    });\n\n    const storageBuffer = t.createBufferTracked({\n      size,\n      usage: GPUBufferUsage.STORAGE,\n    });\n\n    t.expectValidationError(\n      () => {\n        t.device.createBindGroup({\n          layout: bindGroupLayout,\n          entries: [\n            {\n              binding: 0,\n              resource: { buffer: storageBuffer },\n            },\n          ],\n        });\n      },\n      minBindingSize !== undefined && size < minBindingSize\n    );\n  });\n\nconst kAllShaderStages =\n  GPUConst.ShaderStage.COMPUTE | GPUConst.ShaderStage.FRAGMENT | GPUConst.ShaderStage.VERTEX;\n\ng.test('buffer,resource_state')\n  .desc('Test bind group creation with various buffer resource states')\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('state', kResourceStates)\n      .combine('entry', bufferBindingEntries(true))\n      .combine('visibilityMask', [kAllShaderStages, GPUConst.ShaderStage.COMPUTE] as const)\n  )\n  .fn(t => {\n    const { state, entry, visibilityMask } = t.params;\n\n    assert(entry.buffer !== undefined);\n    const info = bufferBindingTypeInfo(entry.buffer);\n\n    const visibility = info.validStages & visibilityMask;\n    skipIfResourceNotSupportedInStages(t, entry, visibility);\n\n    const bgl = t.device.createBindGroupLayout({\n      entries: [\n        {\n          ...entry,\n          binding: 0,\n          visibility,\n        },\n      ],\n    });\n\n    const buffer = t.createBufferWithState(state, {\n      usage: info.usage,\n      size: 4,\n    });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        layout: bgl,\n        entries: [\n          {\n            binding: 0,\n            resource: {\n              buffer,\n            },\n          },\n        ],\n      });\n    }, state === 'invalid');\n  });\n\ng.test('texture,resource_state')\n  .desc('Test bind group creation with various texture resource states')\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('state', kResourceStates)\n      .combine('entry', sampledAndStorageBindingEntries(true, kTestFormat))\n      .combine('visibilityMask', [kAllShaderStages, GPUConst.ShaderStage.COMPUTE] as const)\n  )\n  .fn(t => {\n    const { state, entry, visibilityMask } = t.params;\n    const info = texBindingTypeInfo(entry);\n\n    const visibility = info.validStages & visibilityMask;\n    skipIfResourceNotSupportedInStages(t, entry, visibility);\n\n    const bgl = t.device.createBindGroupLayout({\n      entries: [\n        {\n          ...entry,\n          binding: 0,\n          visibility,\n        },\n      ],\n    });\n\n    // The `RENDER_ATTACHMENT` usage must be specified if sampleCount > 1 according to WebGPU SPEC.\n    const usage = entry.texture?.multisampled\n      ? info.usage | GPUConst.TextureUsage.RENDER_ATTACHMENT\n      : info.usage;\n    const format = entry.storageTexture !== undefined ? 'r32float' : 'rgba8unorm';\n    const texture = t.createTextureWithState(state, {\n      usage,\n      size: [1, 1],\n      format,\n      sampleCount: entry.texture?.multisampled ? 4 : 1,\n    });\n\n    let textureView: GPUTextureView;\n    t.expectValidationError(() => {\n      textureView = texture.createView();\n    }, state === 'invalid');\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        layout: bgl,\n        entries: [\n          {\n            binding: 0,\n            resource: textureView,\n          },\n        ],\n      });\n    }, state === 'invalid');\n  });\n\ng.test('bind_group_layout,device_mismatch')\n  .desc(\n    'Tests createBindGroup cannot be called with a bind group layout created from another device'\n  )\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const mismatched = t.params.mismatched;\n\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const bgl = sourceDevice.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUConst.ShaderStage.COMPUTE,\n          buffer: {},\n        },\n      ],\n    });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        layout: bgl,\n        entries: [\n          {\n            binding: 0,\n            resource: { buffer: t.getUniformBuffer() },\n          },\n        ],\n      });\n    }, mismatched);\n  });\n\ng.test('binding_resources,device_mismatch')\n  .desc(\n    `\n    Tests createBindGroup cannot be called with various resources created from another device\n    Test with two resources to make sure all resources can be validated:\n    - resource0 and resource1 from same device\n    - resource0 and resource1 from different device\n\n    TODO: test GPUExternalTexture as a resource\n    `\n  )\n  .params(u =>\n    u\n      .combine('entry', [\n        { buffer: { type: 'storage' } },\n        { sampler: { type: 'filtering' } },\n        { texture: { multisampled: false } },\n        { storageTexture: { access: 'write-only', format: 'r32float' } },\n        { storageTexture: { access: 'read-only', format: 'r32float' } },\n        { storageTexture: { access: 'read-write', format: 'r32float' } },\n      ] as const)\n      .beginSubcases()\n      .combineWithParams([\n        { resource0Mismatched: false, resource1Mismatched: false }, //control case\n        { resource0Mismatched: true, resource1Mismatched: false },\n        { resource0Mismatched: false, resource1Mismatched: true },\n      ])\n      .combine('visibilityMask', [kAllShaderStages, GPUConst.ShaderStage.COMPUTE] as const)\n  )\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { entry, resource0Mismatched, resource1Mismatched, visibilityMask } = t.params;\n\n    const info = bindingTypeInfo(entry);\n    const visibility = info.validStages & visibilityMask;\n    skipIfResourceNotSupportedInStages(t, entry, visibility);\n\n    const resource0 = resource0Mismatched\n      ? t.getDeviceMismatchedBindingResource(info.resource)\n      : t.getBindingResource(info.resource);\n    const resource1 = resource1Mismatched\n      ? t.getDeviceMismatchedBindingResource(info.resource)\n      : t.getBindingResource(info.resource);\n\n    const bgl = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility,\n          ...entry,\n        },\n        {\n          binding: 1,\n          visibility,\n          ...entry,\n        },\n      ],\n    });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        layout: bgl,\n        entries: [\n          {\n            binding: 0,\n            resource: resource0,\n          },\n          {\n            binding: 1,\n            resource: resource1,\n          },\n        ],\n      });\n    }, resource0Mismatched || resource1Mismatched);\n  });\n\ng.test('storage_texture,usage')\n  .desc(\n    `\n    Test that the texture usage contains STORAGE_BINDING if the BindGroup entry defines\n    storageTexture.\n  `\n  )\n  .params(u =>\n    u //\n      // If usage0 and usage1 are the same, the usage being test is a single usage. Otherwise, it's\n      // a combined usage.\n      .combine('usage0', kTextureUsages)\n      .combine('usage1', kTextureUsages)\n  )\n  .fn(t => {\n    const { usage0, usage1 } = t.params;\n\n    const usage = usage0 | usage1;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          storageTexture: { access: 'write-only', format: 'rgba8unorm' },\n        },\n      ],\n    });\n\n    const texture = t.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm' as const,\n      usage,\n    });\n\n    const isValid = GPUTextureUsage.STORAGE_BINDING & usage;\n\n    const textureView = texture.createView();\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('storage_texture,mip_level_count')\n  .desc(\n    `\n    Test that the mip level count of the resource of the BindGroup entry as a descriptor is 1 if the\n    BindGroup entry defines storageTexture. If the mip level count is not 1, a validation error\n    should be generated.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('baseMipLevel', [1, 2])\n      .combine('mipLevelCount', [1, 2])\n  )\n  .fn(t => {\n    const { baseMipLevel, mipLevelCount } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          storageTexture: { access: 'write-only', format: 'rgba8unorm' },\n        },\n      ],\n    });\n\n    const MIP_LEVEL_COUNT = 4;\n    const texture = t.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm' as const,\n      usage: GPUTextureUsage.STORAGE_BINDING,\n      mipLevelCount: MIP_LEVEL_COUNT,\n    });\n\n    const textureView = texture.createView({ baseMipLevel, mipLevelCount });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, mipLevelCount !== 1);\n  });\n\ng.test('storage_texture,format')\n  .desc(\n    `\n    Test that the format of the storage texture is equal to resource's descriptor format if the\n    BindGroup entry defines storageTexture.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('storageTextureFormat', kPossibleStorageTextureFormats)\n      .combine('resourceFormat', kPossibleStorageTextureFormats)\n  )\n  .fn(t => {\n    const { storageTextureFormat, resourceFormat } = t.params;\n    t.skipIfTextureFormatNotUsableAsStorageTexture(storageTextureFormat, resourceFormat);\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          storageTexture: { access: 'write-only', format: storageTextureFormat },\n        },\n      ],\n    });\n\n    const texture = t.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: resourceFormat,\n      usage: GPUTextureUsage.STORAGE_BINDING,\n    });\n\n    const isValid = storageTextureFormat === resourceFormat;\n    const textureView = texture.createView({ format: resourceFormat });\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('buffer,usage')\n  .desc(\n    `\n    Test that the buffer usage contains 'UNIFORM' if the BindGroup entry defines buffer and it's\n    type is 'uniform', and the buffer usage contains 'STORAGE' if the BindGroup entry's buffer type\n    is 'storage'|read-only-storage'.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('type', kBufferBindingTypes)\n      // If usage0 and usage1 are the same, the usage being test is a single usage. Otherwise, it's\n      // a combined usage.\n      .beginSubcases()\n      .combine('usage0', kBufferUsages)\n      .combine('usage1', kBufferUsages)\n      .unless(\n        ({ usage0, usage1 }) =>\n          ((usage0 | usage1) & (GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.MAP_WRITE)) !==\n          0\n      )\n  )\n  .fn(t => {\n    const { type, usage0, usage1 } = t.params;\n\n    const usage = usage0 | usage1;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: { type },\n        },\n      ],\n    });\n\n    const buffer = t.createBufferTracked({\n      size: 4,\n      usage,\n    });\n\n    let isValid = false;\n    if (type === 'uniform') {\n      isValid = GPUBufferUsage.UNIFORM & usage ? true : false;\n    } else if (type === 'storage' || type === 'read-only-storage') {\n      isValid = GPUBufferUsage.STORAGE & usage ? true : false;\n    }\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: { buffer } }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('buffer,resource_offset')\n  .desc(\n    `\n    Test that the resource.offset of the BindGroup entry is a multiple of limits.\n    'minUniformBufferOffsetAlignment|minStorageBufferOffsetAlignment' if the BindGroup entry defines\n    buffer and the buffer type is 'uniform|storage|read-only-storage'.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('type', kBufferBindingTypes)\n      .beginSubcases()\n      .combine('offsetAddMult', [\n        { add: 0, mult: 0 },\n        { add: 0, mult: 0.5 },\n        { add: 0, mult: 1.5 },\n        { add: 2, mult: 0 },\n      ])\n  )\n  .fn(t => {\n    const { type, offsetAddMult } = t.params;\n    const minAlignment =\n      t.device.limits[\n        type === 'uniform' ? 'minUniformBufferOffsetAlignment' : 'minStorageBufferOffsetAlignment'\n      ];\n    const offset = makeValueTestVariant(minAlignment, offsetAddMult);\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: { type },\n        },\n      ],\n    });\n\n    const usage = type === 'uniform' ? GPUBufferUsage.UNIFORM : GPUBufferUsage.STORAGE;\n    const isValid = offset % minAlignment === 0;\n\n    const buffer = t.createBufferTracked({\n      size: 1024,\n      usage,\n    });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: { buffer, offset } }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('buffer,resource_binding_size')\n  .desc(\n    `\n    Test that the buffer binding size of the BindGroup entry is equal to or less than limits.\n    'maxUniformBufferBindingSize|maxStorageBufferBindingSize' if the BindGroup entry defines\n    buffer and the buffer type is 'uniform|storage|read-only-storage'.\n  `\n  )\n  .params(u =>\n    u\n      .combine('type', kBufferBindingTypes)\n      .beginSubcases()\n      // Test a size of 1 (for uniform buffer) or 4 (for storage and read-only storage buffer)\n      // then values just within and just above the limit.\n      .combine('bindingSize', [\n        { base: 1, limit: 0 },\n        { base: 0, limit: 1 },\n        { base: 1, limit: 1 },\n      ])\n  )\n  .fn(t => {\n    const {\n      type,\n      bindingSize: { base, limit },\n    } = t.params;\n    const mult = type === 'uniform' ? 1 : 4;\n    const maxBindingSize =\n      t.device.limits[\n        type === 'uniform' ? 'maxUniformBufferBindingSize' : 'maxStorageBufferBindingSize'\n      ];\n    const bindingSize = base * mult + maxBindingSize * limit;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: { type },\n        },\n      ],\n    });\n\n    const usage = type === 'uniform' ? GPUBufferUsage.UNIFORM : GPUBufferUsage.STORAGE;\n    const isValid = bindingSize <= maxBindingSize;\n\n    // MAINTENANCE_TODO: Allocating the max size seems likely to fail. Refactor test.\n    const buffer = t.createBufferTracked({\n      size: maxBindingSize,\n      usage,\n    });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: { buffer, size: bindingSize } }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('buffer,effective_buffer_binding_size')\n  .desc(\n    `\n  Test that the effective buffer binding size of the BindGroup entry must be a multiple of 4 if the\n  buffer type is 'storage|read-only-storage', while there is no such restriction on uniform buffers.\n`\n  )\n  .params(u =>\n    u\n      .combine('type', kBufferBindingTypes)\n      .beginSubcases()\n      .combine('offsetMult', [0, 1])\n      .combine('bufferSizeAddition', [8, 10])\n      .combine('bindingSize', [undefined, 2, 4, 6])\n  )\n  .fn(t => {\n    const { type, offsetMult, bufferSizeAddition, bindingSize } = t.params;\n    const minAlignment =\n      t.device.limits[\n        type === 'uniform' ? 'minUniformBufferOffsetAlignment' : 'minStorageBufferOffsetAlignment'\n      ];\n    const offset = minAlignment * offsetMult;\n    const bufferSize = minAlignment + bufferSizeAddition;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: { type },\n        },\n      ],\n    });\n\n    const effectiveBindingSize = bindingSize ?? bufferSize - offset;\n    let usage, isValid;\n    if (type === 'uniform') {\n      usage = GPUBufferUsage.UNIFORM;\n      isValid = true;\n    } else {\n      usage = GPUBufferUsage.STORAGE;\n      isValid = effectiveBindingSize % 4 === 0;\n    }\n\n    const buffer = t.createBufferTracked({\n      size: bufferSize,\n      usage,\n    });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: { buffer, offset, size: bindingSize } }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('sampler,device_mismatch')\n  .desc(`Tests createBindGroup cannot be called with a sampler created from another device.`)\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { mismatched } = t.params;\n\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          sampler: { type: 'filtering' as const },\n        },\n      ],\n    });\n\n    const sampler = sourceDevice.createSampler();\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: sampler }],\n        layout: bindGroupLayout,\n      });\n    }, mismatched);\n  });\n\ng.test('sampler,compare_function_with_binding_type')\n  .desc(\n    `\n  Test that the sampler of the BindGroup has a 'compareFunction' value if the sampler type of the\n  BindGroupLayout is 'comparison'. Other sampler types should not have 'compare' field in\n  the descriptor of the sampler.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('bgType', kSamplerBindingTypes)\n      .beginSubcases()\n      .combine('compareFunction', [undefined, ...kCompareFunctions])\n  )\n  .fn(t => {\n    const { bgType, compareFunction } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          sampler: { type: bgType },\n        },\n      ],\n    });\n\n    const isValid =\n      bgType === 'comparison' ? compareFunction !== undefined : compareFunction === undefined;\n\n    const sampler = t.device.createSampler({ compare: compareFunction });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: sampler }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('external_texture,texture_view,usage')\n  .desc(\n    `\n    Test that the external texture usage contains TEXTURE_BINDING if the BindGroup entry defines\n    externalTexture for a GPUTextureView resource.\n  `\n  )\n  .params(u =>\n    u //\n      // If usage0 and usage1 are the same, the usage being test is a single usage. Otherwise, it's\n      // a combined usage.\n      .combine('usage0', kTextureUsages)\n      .combine('usage1', kTextureUsages)\n  )\n  .fn(t => {\n    const { usage0, usage1 } = t.params;\n\n    const usage = usage0 | usage1;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.FRAGMENT,\n          externalTexture: {},\n        },\n      ],\n    });\n\n    const texture = t.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm' as const,\n      usage,\n    });\n\n    const isValid = GPUTextureUsage.TEXTURE_BINDING & usage;\n\n    const textureView = texture.createView();\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('external_texture,texture_view,dimension')\n  .desc(\n    `\n    Test that the external texture dimension is 2d if the BindGroup entry defines\n    externalTexture for a GPUTextureView resource.\n  `\n  )\n  .params(u => u.combine('dimension', kTextureViewDimensions))\n  .fn(t => {\n    const { dimension } = t.params;\n    t.skipIfTextureViewDimensionNotSupported(dimension);\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.FRAGMENT,\n          externalTexture: {},\n        },\n      ],\n    });\n\n    let height = 16;\n    let depthOrArrayLayers = 6;\n    if (dimension === '1d') {\n      height = 1;\n      depthOrArrayLayers = 1;\n    }\n\n    const texture = t.createTextureTracked({\n      size: { width: 16, height, depthOrArrayLayers },\n      format: 'rgba8unorm' as const,\n      usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n      dimension: getTextureDimensionFromView(dimension),\n    });\n\n    const shouldError = dimension !== '2d';\n    const textureView = texture.createView({ dimension });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, shouldError);\n  });\n\ng.test('external_texture,texture_view,mip_level_count')\n  .desc(\n    `\n    Test that the mip level count of the resource of the BindGroup entry as a descriptor is 1 if the\n    BindGroup entry defines externalTexture for a GPUTextureView resource. If the mip level count is\n    not 1, a validation error should be generated.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('baseMipLevel', [1, 2])\n      .combine('mipLevelCount', [1, 2])\n  )\n  .fn(t => {\n    const { baseMipLevel, mipLevelCount } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.FRAGMENT,\n          externalTexture: {},\n        },\n      ],\n    });\n\n    const MIP_LEVEL_COUNT = 4;\n    const texture = t.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm' as const,\n      usage: GPUTextureUsage.TEXTURE_BINDING,\n      mipLevelCount: MIP_LEVEL_COUNT,\n    });\n\n    const textureView = texture.createView({ baseMipLevel, mipLevelCount });\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, mipLevelCount !== 1);\n  });\n\ng.test('external_texture,texture_view,format')\n  .desc(\n    `\n    Test that the format of the external texture is \"rgba8unorm\", \"bgra8unorm\", or \"rgba16float\"\n    if the BindGroup entry defines externalTexture for a GPUTextureView resource.\n  `\n  )\n  .params(u => u.combine('format', kRegularTextureFormats))\n  .fn(t => {\n    const { format } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.FRAGMENT,\n          externalTexture: {},\n        },\n      ],\n    });\n\n    const texture = t.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format,\n      usage: GPUTextureUsage.TEXTURE_BINDING,\n    });\n\n    const isValid = format === 'rgba8unorm' || format === 'bgra8unorm' || format === 'rgba16float';\n    const textureView = texture.createView({ format });\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, !isValid);\n  });\n\ng.test('external_texture,texture_view,sample_count')\n  .desc(\n    `\n  Test that the sample count of the resource of the BindGroup entry as a texture is 1 if the\n  BindGroup entry defines externalTexture for a GPUTextureView resource. If the sample count is\n  not 1, a validation error should be generated.\n`\n  )\n  .params(u => u.combine('sampleCount', [1, 4]))\n  .fn(t => {\n    const { sampleCount } = t.params;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.FRAGMENT,\n          externalTexture: {},\n        },\n      ],\n    });\n\n    const texture = t.createTextureTracked({\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: 'rgba8unorm' as const,\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,\n      sampleCount,\n    });\n\n    const textureView = texture.createView();\n\n    t.expectValidationError(() => {\n      t.device.createBindGroup({\n        entries: [{ binding: 0, resource: textureView }],\n        layout: bindGroupLayout,\n      });\n    }, sampleCount !== 1);\n  });\n"],"mappings":"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"}