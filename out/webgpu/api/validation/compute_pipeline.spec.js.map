{"version":3,"file":"compute_pipeline.spec.js","names":["description","makeTestGroup","keysOf","kValue","getShaderWithEntryPoint","kAPIResources","getWGSLShaderForResource","getAPIBindGroupLayoutForResource","doResourcesMatch","AllFeaturesMaxLimitsValidationTest","F","getShaderModule","shaderStage","entryPoint","device","createShaderModule","code","g","test","desc","params","u","combine","fn","t","isAsync","doCreateComputePipelineTest","layout","compute","module","createInvalidShaderModule","shaderModuleStage","descriptor","paramsSubcasesOnly","beforeAllSubcases","usesMismatchedDevice","mismatched","sourceDevice","mismatchedDevice","createPipelineLayout","bindGroupLayouts","combineWithParams","type","_typeSize","beginSubcases","countDeltaFromLimit","countAtLimit","Math","floor","limits","maxComputeWorkgroupStorageSize","count","size","join","maxComputeInvocationsPerWorkgroup","workgroupX","workgroupY","workgroupZ","_success","maxComputeWorkgroupSizeX","maxComputeWorkgroupSizeY","maxComputeWorkgroupSizeZ","constants","c0","c1","c9","c3","c2","数","séquençage","c8","c5","cf","NaN","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","cu","u32","min","max","ci","i32","negative","positive","f32","first_non_castable_pipeline_override","cb","MAX_VALUE","pipeEntryPoint","cf16","f16","skipIfDeviceDoesNotHaveFeature","kOverridesWorkgroupSizeShaders","x","y","z","testFn","kVec4Size","maxVec4Count","kMat4Size","maxMat4Count","vec4Count","mat4Count","a","b","apiResource","wgslResource","skipIf","storageTexture","undefined","access","hasLanguageFeature","skipIfTextureViewDimensionNotSupported","texture","viewDimension","GPUShaderStage","COMPUTE"],"sources":["../../../../src/webgpu/api/validation/compute_pipeline.spec.ts"],"sourcesContent":["export const description = `\ncreateComputePipeline and createComputePipelineAsync validation tests.\n\nNote: entry point matching tests are in shader_module/entry_point.spec.ts\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { keysOf } from '../../../common/util/data_tables.js';\nimport { kValue } from '../../util/constants.js';\nimport { TShaderStage, getShaderWithEntryPoint } from '../../util/shader.js';\n\nimport {\n  kAPIResources,\n  getWGSLShaderForResource,\n  getAPIBindGroupLayoutForResource,\n  doResourcesMatch,\n} from './utils.js';\nimport { AllFeaturesMaxLimitsValidationTest } from './validation_test.js';\n\nclass F extends AllFeaturesMaxLimitsValidationTest {\n  getShaderModule(\n    shaderStage: TShaderStage = 'compute',\n    entryPoint: string = 'main'\n  ): GPUShaderModule {\n    return this.device.createShaderModule({\n      code: getShaderWithEntryPoint(shaderStage, entryPoint),\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('basic')\n  .desc(\n    `\nControl case for createComputePipeline and createComputePipelineAsync.\nCall the API with valid compute shader and matching valid entryPoint, making sure that the test function working well.\n`\n  )\n  .params(u => u.combine('isAsync', [true, false]))\n  .fn(t => {\n    const { isAsync } = t.params;\n    t.doCreateComputePipelineTest(isAsync, true, {\n      layout: 'auto',\n      compute: { module: t.getShaderModule('compute', 'main'), entryPoint: 'main' },\n    });\n  });\n\ng.test('shader_module,invalid')\n  .desc(\n    `\nTests calling createComputePipeline(Async) with a invalid compute shader, and check that the APIs catch this error.\n`\n  )\n  .params(u => u.combine('isAsync', [true, false]))\n  .fn(t => {\n    const { isAsync } = t.params;\n    t.doCreateComputePipelineTest(isAsync, false, {\n      layout: 'auto',\n      compute: {\n        module: t.createInvalidShaderModule(),\n        entryPoint: 'main',\n      },\n    });\n  });\n\ng.test('shader_module,compute')\n  .desc(\n    `\nTests calling createComputePipeline(Async) with valid but different stage shader and matching entryPoint,\nand check that the APIs only accept compute shader.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('shaderModuleStage', ['compute', 'vertex', 'fragment'] as TShaderStage[])\n  )\n  .fn(t => {\n    const { isAsync, shaderModuleStage } = t.params;\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.getShaderModule(shaderModuleStage, 'main'),\n        entryPoint: 'main',\n      },\n    };\n    t.doCreateComputePipelineTest(isAsync, shaderModuleStage === 'compute', descriptor);\n  });\n\ng.test('shader_module,device_mismatch')\n  .desc(\n    'Tests createComputePipeline(Async) cannot be called with a shader module created from another device'\n  )\n  .paramsSubcasesOnly(u => u.combine('isAsync', [true, false]).combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { isAsync, mismatched } = t.params;\n\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const module = sourceDevice.createShaderModule({\n      code: '@compute @workgroup_size(1) fn main() {}',\n    });\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module,\n        entryPoint: 'main',\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, !mismatched, descriptor);\n  });\n\ng.test('pipeline_layout,device_mismatch')\n  .desc(\n    'Tests createComputePipeline(Async) cannot be called with a pipeline layout created from another device'\n  )\n  .paramsSubcasesOnly(u => u.combine('isAsync', [true, false]).combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { isAsync, mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const layout = sourceDevice.createPipelineLayout({ bindGroupLayouts: [] });\n\n    const descriptor = {\n      layout,\n      compute: {\n        module: t.getShaderModule('compute', 'main'),\n        entryPoint: 'main',\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, !mismatched, descriptor);\n  });\n\ng.test('limits,workgroup_storage_size')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for compute using <= device.limits.maxComputeWorkgroupStorageSize bytes of workgroup storage.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { type: 'vec4<f32>', _typeSize: 16 },\n        { type: 'mat4x4<f32>', _typeSize: 64 },\n      ])\n      .beginSubcases()\n      .combine('countDeltaFromLimit', [0, 1])\n  )\n  .fn(t => {\n    const { isAsync, type, _typeSize, countDeltaFromLimit } = t.params;\n    const countAtLimit = Math.floor(t.device.limits.maxComputeWorkgroupStorageSize / _typeSize);\n    const count = countAtLimit + countDeltaFromLimit;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          var<workgroup> data: array<${type}, ${count}>;\n          @compute @workgroup_size(64) fn main () {\n            _ = data;\n          }\n          `,\n        }),\n        entryPoint: 'main',\n      },\n    };\n    t.doCreateComputePipelineTest(isAsync, count <= countAtLimit, descriptor);\n  });\n\ng.test('limits,invocations_per_workgroup')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for compute using <= device.limits.maxComputeInvocationsPerWorkgroup per workgroup.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('size', [\n        // Assume maxComputeWorkgroupSizeX/Y >= 129, maxComputeWorkgroupSizeZ >= 33\n        [128, 1, 2],\n        [129, 1, 2],\n        [2, 128, 1],\n        [2, 129, 1],\n        [1, 8, 32],\n        [1, 8, 33],\n      ])\n  )\n  .fn(t => {\n    const { isAsync, size } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          @compute @workgroup_size(${size.join(',')}) fn main () {\n          }\n          `,\n        }),\n        entryPoint: 'main',\n      },\n    };\n\n    t.doCreateComputePipelineTest(\n      isAsync,\n      size[0] * size[1] * size[2] <= t.device.limits.maxComputeInvocationsPerWorkgroup,\n      descriptor\n    );\n  });\n\ng.test('limits,invocations_per_workgroup,each_component')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for compute workgroup_size attribute has each component no more than their limits.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('size', [\n        // Assume maxComputeInvocationsPerWorkgroup >= 256\n        [64],\n        [256, 1, 1],\n        [257, 1, 1],\n        [1, 256, 1],\n        [1, 257, 1],\n        [1, 1, 63],\n        [1, 1, 64],\n        [1, 1, 65],\n      ] as const)\n  )\n  .fn(t => {\n    const { isAsync, size } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          @compute @workgroup_size(${size.join(',')}) fn main () {\n          }\n          `,\n        }),\n        entryPoint: 'main',\n      },\n    };\n\n    const workgroupX = size[0];\n    const workgroupY = size[1] ?? 1;\n    const workgroupZ = size[2] ?? 1;\n\n    const _success =\n      workgroupX <= t.device.limits.maxComputeWorkgroupSizeX &&\n      workgroupY <= t.device.limits.maxComputeWorkgroupSizeY &&\n      workgroupZ <= t.device.limits.maxComputeWorkgroupSizeZ;\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('overrides,identifier')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants identifiers.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { constants: {}, _success: true },\n        { constants: { c0: 0 }, _success: true },\n        { constants: { c0: 0, c1: 1 }, _success: true },\n        { constants: { 'c0\\0': 0 }, _success: false },\n        { constants: { c9: 0 }, _success: false },\n        { constants: { 1: 0 }, _success: true },\n        { constants: { c3: 0 }, _success: false }, // pipeline constant id is specified for c3\n        { constants: { 2: 0 }, _success: false },\n        { constants: { 1000: 0 }, _success: true },\n        { constants: { 9999: 0 }, _success: false },\n        { constants: { 1000: 0, c2: 0 }, _success: false },\n        { constants: { 数: 0 }, _success: true },\n        { constants: { séquençage: 0 }, _success: false }, // test unicode is not normalized\n      ] as { constants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(t => {\n    const { isAsync, constants, _success } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n            override c0: bool = true;      // type: bool\n            override c1: u32 = 0u;          // default override\n            override 数: u32 = 0u;          // non-ASCII\n            override séquençage: u32 = 0u;  // normalizable unicode (WGSL does not normalize)\n            @id(1000) override c2: u32 = 10u;  // default\n            @id(1) override c3: u32 = 11u;     // default\n            @compute @workgroup_size(1) fn main () {\n              // make sure the overridable constants are not optimized out\n              _ = u32(c0);\n              _ = u32(c1);\n              _ = u32(c2 + séquençage);\n              _ = u32(c3 + 数);\n            }`,\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('overrides,uninitialized')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for uninitialized overridable constants.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { constants: {}, _success: false },\n        { constants: { c0: 0, c2: 0, c8: 0 }, _success: false }, // c5 is missing\n        { constants: { c0: 0, c2: 0, c5: 0, c8: 0 }, _success: true },\n        { constants: { c0: 0, c2: 0, c5: 0, c8: 0, c1: 0 }, _success: true },\n      ] as { constants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(t => {\n    const { isAsync, constants, _success } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n            override c0: bool;              // type: bool\n            override c1: bool = false;      // default override\n            override c2: f32;               // type: float32\n            override c3: f32 = 0.0;         // default override\n            override c4: f32 = 4.0;         // default\n            override c5: i32;               // type: int32\n            override c6: i32 = 0;           // default override\n            override c7: i32 = 7;           // default\n            override c8: u32;               // type: uint32\n            override c9: u32 = 0u;          // default override\n            @id(1000) override c10: u32 = 10u;  // default\n            @compute @workgroup_size(1) fn main () {\n              // make sure the overridable constants are not optimized out\n              _ = u32(c0);\n              _ = u32(c1);\n              _ = u32(c2);\n              _ = u32(c3);\n              _ = u32(c4);\n              _ = u32(c5);\n              _ = u32(c6);\n              _ = u32(c7);\n              _ = u32(c8);\n              _ = u32(c9);\n              _ = u32(c10);\n            }`,\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('overrides,value,type_error')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for constant values like inf, NaN will results in TypeError.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { constants: { cf: 1 }, _success: true }, // control\n        { constants: { cf: NaN }, _success: false },\n        { constants: { cf: Number.POSITIVE_INFINITY }, _success: false },\n        { constants: { cf: Number.NEGATIVE_INFINITY }, _success: false },\n      ] as const)\n  )\n  .fn(t => {\n    const { isAsync, constants, _success } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n            override cf: f32 = 0.0;\n            @compute @workgroup_size(1) fn main () {\n              _ = cf;\n            }`,\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor, 'TypeError');\n  });\n\ng.test('overrides,value,validation_error')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for unrepresentable constant values in compute stage.\n\nTODO(#2060): test with last_castable_pipeline_override.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { constants: { cu: kValue.u32.min }, _success: true },\n        { constants: { cu: kValue.u32.min - 1 }, _success: false },\n        { constants: { cu: kValue.u32.max }, _success: true },\n        { constants: { cu: kValue.u32.max + 1 }, _success: false },\n        { constants: { ci: kValue.i32.negative.min }, _success: true },\n        { constants: { ci: kValue.i32.negative.min - 1 }, _success: false },\n        { constants: { ci: kValue.i32.positive.max }, _success: true },\n        { constants: { ci: kValue.i32.positive.max + 1 }, _success: false },\n        { constants: { cf: kValue.f32.negative.min }, _success: true },\n        {\n          constants: { cf: kValue.f32.negative.first_non_castable_pipeline_override },\n          _success: false,\n        },\n        { constants: { cf: kValue.f32.positive.max }, _success: true },\n        {\n          constants: { cf: kValue.f32.positive.first_non_castable_pipeline_override },\n          _success: false,\n        },\n        // Conversion to boolean can't fail\n        { constants: { cb: Number.MAX_VALUE }, _success: true },\n        { constants: { cb: kValue.i32.negative.min - 1 }, _success: true },\n      ] as { constants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(t => {\n    const { isAsync, constants, _success } = t.params;\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          override cb: bool = false;\n          override cu: u32 = 0u;\n          override ci: i32 = 0;\n          override cf: f32 = 0.0;\n          @compute @workgroup_size(1) fn main () {\n            _ = cb;\n            _ = cu;\n            _ = ci;\n            _ = cf;\n          }`,\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('overrides,entry_point,validation_error')\n  .desc(\n    `\nTests that pipeline constant (override) errors only trigger on entry point usage.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('pipeEntryPoint', ['main_success', 'main_pipe_error'])\n  )\n  .fn(t => {\n    const { isAsync, pipeEntryPoint } = t.params;\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          override cu: u32 = 0u;\n          override cx: u32 = 1u/cu;\n          @compute @workgroup_size(1) fn main_success () {\n            _ = cu;\n          }\n          @compute @workgroup_size(1) fn main_pipe_error () {\n            _ = cx;\n          }`,\n        }),\n        entryPoint: pipeEntryPoint,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, pipeEntryPoint === 'main_success', descriptor);\n  });\n\ng.test('overrides,value,validation_error,f16')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for unrepresentable f16 constant values in compute stage.\n\nTODO(#2060): Tighten the cases around the valid/invalid boundary once we have WGSL spec\nclarity on whether values like f16.positive.last_castable_pipeline_override would be valid. See issue.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combineWithParams([\n        { constants: { cf16: kValue.f16.negative.min }, _success: true },\n        {\n          constants: { cf16: kValue.f16.negative.first_non_castable_pipeline_override },\n          _success: false,\n        },\n        { constants: { cf16: kValue.f16.positive.max }, _success: true },\n        {\n          constants: { cf16: kValue.f16.positive.first_non_castable_pipeline_override },\n          _success: false,\n        },\n        { constants: { cf16: kValue.f32.negative.min }, _success: false },\n        { constants: { cf16: kValue.f32.positive.max }, _success: false },\n        {\n          constants: { cf16: kValue.f32.negative.first_non_castable_pipeline_override },\n          _success: false,\n        },\n        {\n          constants: { cf16: kValue.f32.positive.first_non_castable_pipeline_override },\n          _success: false,\n        },\n      ] as const)\n  )\n  .fn(t => {\n    t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    const { isAsync, constants, _success } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: `\n          enable f16;\n\n          override cf16: f16 = 0.0h;\n          @compute @workgroup_size(1) fn main () {\n            _ = cf16;\n          }`,\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\nconst kOverridesWorkgroupSizeShaders = {\n  u32: `\noverride x: u32 = 1u;\noverride y: u32 = 1u;\noverride z: u32 = 1u;\n@compute @workgroup_size(x, y, z) fn main () {\n  _ = 0u;\n}\n`,\n  i32: `\noverride x: i32 = 1;\noverride y: i32 = 1;\noverride z: i32 = 1;\n@compute @workgroup_size(x, y, z) fn main () {\n  _ = 0u;\n}\n`,\n};\n\ng.test('overrides,workgroup_size')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants used for workgroup size.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('type', ['u32', 'i32'] as const)\n      .combineWithParams([\n        { constants: {}, _success: true },\n        { constants: { x: 0, y: 0, z: 0 }, _success: false },\n        { constants: { x: 1, y: -1, z: 1 }, _success: false },\n        { constants: { x: 1, y: 0, z: 0 }, _success: false },\n        { constants: { x: 16, y: 1, z: 1 }, _success: true },\n      ] as { constants: Record<string, GPUPipelineConstantValue>; _success: boolean }[])\n  )\n  .fn(t => {\n    const { isAsync, type, constants, _success } = t.params;\n\n    const descriptor = {\n      layout: 'auto' as const,\n      compute: {\n        module: t.device.createShaderModule({\n          code: kOverridesWorkgroupSizeShaders[type],\n        }),\n        entryPoint: 'main',\n        constants,\n      },\n    };\n\n    t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('overrides,workgroup_size,limits')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants for workgroupSize exceeds device limits.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n      .combine('type', ['u32', 'i32'] as const)\n  )\n  .fn(t => {\n    const { isAsync, type } = t.params;\n\n    const limits = t.device.limits;\n\n    const testFn = (x: number, y: number, z: number, _success: boolean) => {\n      const descriptor = {\n        layout: 'auto' as const,\n        compute: {\n          module: t.device.createShaderModule({\n            code: kOverridesWorkgroupSizeShaders[type],\n          }),\n          entryPoint: 'main',\n          constants: {\n            x,\n            y,\n            z,\n          },\n        },\n      };\n\n      t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n    };\n\n    testFn(limits.maxComputeWorkgroupSizeX, 1, 1, true);\n    testFn(limits.maxComputeWorkgroupSizeX + 1, 1, 1, false);\n    testFn(1, limits.maxComputeWorkgroupSizeY, 1, true);\n    testFn(1, limits.maxComputeWorkgroupSizeY + 1, 1, false);\n    testFn(1, 1, limits.maxComputeWorkgroupSizeZ, true);\n    testFn(1, 1, limits.maxComputeWorkgroupSizeZ + 1, false);\n    testFn(\n      limits.maxComputeWorkgroupSizeX,\n      limits.maxComputeWorkgroupSizeY,\n      limits.maxComputeWorkgroupSizeZ,\n      limits.maxComputeWorkgroupSizeX *\n        limits.maxComputeWorkgroupSizeY *\n        limits.maxComputeWorkgroupSizeZ <=\n        limits.maxComputeInvocationsPerWorkgroup\n    );\n  });\n\ng.test('overrides,workgroup_size,limits,workgroup_storage_size')\n  .desc(\n    `\nTests calling createComputePipeline(Async) validation for overridable constants for workgroupStorageSize exceeds device limits.\n`\n  )\n  .params(u =>\n    u //\n      .combine('isAsync', [true, false])\n  )\n  .fn(t => {\n    const { isAsync } = t.params;\n\n    const limits = t.device.limits;\n\n    const kVec4Size = 16;\n    const maxVec4Count = limits.maxComputeWorkgroupStorageSize / kVec4Size;\n    const kMat4Size = 64;\n    const maxMat4Count = limits.maxComputeWorkgroupStorageSize / kMat4Size;\n\n    const testFn = (vec4Count: number, mat4Count: number, _success: boolean) => {\n      const descriptor = {\n        layout: 'auto' as const,\n        compute: {\n          module: t.device.createShaderModule({\n            code: `\n              override a: u32;\n              override b: u32;\n              ${vec4Count <= 0 ? '' : 'var<workgroup> vec4_data: array<vec4<f32>, a>;'}\n              ${mat4Count <= 0 ? '' : 'var<workgroup> mat4_data: array<mat4x4<f32>, b>;'}\n              @compute @workgroup_size(1) fn main() {\n                ${vec4Count <= 0 ? '' : '_ = vec4_data[0];'}\n                ${mat4Count <= 0 ? '' : '_ = mat4_data[0];'}\n              }`,\n          }),\n          entryPoint: 'main',\n          constants: {\n            a: vec4Count,\n            b: mat4Count,\n          },\n        },\n      };\n\n      t.doCreateComputePipelineTest(isAsync, _success, descriptor);\n    };\n\n    testFn(1, 1, true);\n    testFn(maxVec4Count + 1, 0, false);\n    testFn(0, maxMat4Count + 1, false);\n  });\n\ng.test('resource_compatibility')\n  .desc(\n    'Tests validation of resource (bind group) compatibility between pipeline layout and WGSL shader'\n  )\n  .params(u =>\n    u //\n      .combine('apiResource', keysOf(kAPIResources))\n      .beginSubcases()\n      .combine('isAsync', [true, false] as const)\n      .combine('wgslResource', keysOf(kAPIResources))\n  )\n  .fn(t => {\n    const apiResource = kAPIResources[t.params.apiResource];\n    const wgslResource = kAPIResources[t.params.wgslResource];\n    t.skipIf(\n      wgslResource.storageTexture !== undefined &&\n        wgslResource.storageTexture.access !== 'write-only' &&\n        !t.hasLanguageFeature('readonly_and_readwrite_storage_textures'),\n      'Storage textures require language feature'\n    );\n    t.skipIfTextureViewDimensionNotSupported(wgslResource.texture?.viewDimension);\n\n    const layout = t.device.createPipelineLayout({\n      bindGroupLayouts: [\n        getAPIBindGroupLayoutForResource(t.device, GPUShaderStage.COMPUTE, apiResource),\n      ],\n    });\n\n    const descriptor = {\n      layout,\n      compute: {\n        module: t.device.createShaderModule({\n          code: getWGSLShaderForResource('compute', wgslResource),\n        }),\n        entryPoint: 'main',\n      },\n    };\n    t.doCreateComputePipelineTest(\n      t.params.isAsync,\n      doResourcesMatch(apiResource, wgslResource),\n      descriptor\n    );\n  });\n"],"mappings":"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"}