{"version":3,"file":"texture.spec.js","names":["description","makeTestGroup","unreachable","AllFeaturesMaxLimitsValidationTest","g","test","desc","paramsSubcasesOnly","u","combine","fn","t","destroyed","params","texture","createTextureTracked","size","format","usage","GPUTextureUsage","COPY_DST","destroy","expectValidationError","queue","writeTexture","Uint8Array","bytesPerRow","src","COPY_SRC","dst","encoder","device","createCommandEncoder","copyTextureToTexture","commandBuffer","finish","shouldError","submit","buffer","createBufferTracked","GPUBufferUsage","copyBufferToTexture","copyTextureToBuffer","encoderType","bindingType","TEXTURE_BINDING","STORAGE_BINDING","layout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","bindGroup","createBindGroup","resource","createView","createEncoder","setBindGroup","textureToDestroy","colorAttachment","sampleCount","RENDER_ATTACHMENT","resolveAttachment","depthStencilAttachment","pass","beginRenderPass","colorAttachments","view","resolveTarget","loadOp","storeOp","depthClearValue","depthLoadOp","depthStoreOp","end"],"sources":["../../../../../../src/webgpu/api/validation/queue/destroyed/texture.spec.ts"],"sourcesContent":["export const description = `\nTests using a destroyed texture on a queue.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../../common/util/util.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('writeTexture')\n  .desc(\n    `\nTests that using a destroyed texture in writeTexture fails.\n- x= {destroyed, not destroyed (control case)}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const texture = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    if (destroyed) {\n      texture.destroy();\n    }\n\n    t.expectValidationError(\n      () => t.queue.writeTexture({ texture }, new Uint8Array(4), { bytesPerRow: 4 }, [1, 1, 1]),\n      destroyed\n    );\n  });\n\ng.test('copyTextureToTexture')\n  .desc(\n    `\nTests that using a destroyed texture in copyTextureToTexture fails.\n- x= {not destroyed (control case), src destroyed, dst destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', ['none', 'src', 'dst', 'both'] as const))\n  .fn(t => {\n    const src = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_SRC,\n    });\n    const dst = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyTextureToTexture({ texture: src }, { texture: dst }, [1, 1, 1]);\n    const commandBuffer = encoder.finish();\n\n    let shouldError = true;\n    switch (t.params.destroyed) {\n      case 'none':\n        shouldError = false;\n        break;\n      case 'src':\n        src.destroy();\n        break;\n      case 'dst':\n        dst.destroy();\n        break;\n      case 'both':\n        src.destroy();\n        dst.destroy();\n        break;\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, shouldError);\n  });\n\ng.test('copyBufferToTexture')\n  .desc(\n    `\nTests that using a destroyed texture in copyBufferToTexture fails.\n- x= {not destroyed (control case), dst destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const buffer = t.createBufferTracked({ size: 4, usage: GPUBufferUsage.COPY_SRC });\n    const texture = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyBufferToTexture({ buffer }, { texture }, [1, 1, 1]);\n    const commandBuffer = encoder.finish();\n\n    if (destroyed) {\n      texture.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('copyTextureToBuffer')\n  .desc(\n    `\nTests that using a destroyed texture in copyTextureToBuffer fails.\n- x= {not destroyed (control case), src destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const texture = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_SRC,\n    });\n    const buffer = t.createBufferTracked({ size: 4, usage: GPUBufferUsage.COPY_DST });\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyTextureToBuffer({ texture }, { buffer }, [1, 1, 1]);\n    const commandBuffer = encoder.finish();\n\n    if (destroyed) {\n      texture.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('setBindGroup')\n  .desc(\n    `\nTests that using a destroyed texture referenced by a bindGroup set with setBindGroup fails\n- x= {not destroyed (control case), destroyed}\n    `\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('destroyed', [false, true] as const)\n      .combine('encoderType', ['compute pass', 'render pass', 'render bundle'] as const)\n      .combine('bindingType', ['texture', 'storageTexture'] as const)\n  )\n  .fn(t => {\n    const { destroyed, encoderType, bindingType } = t.params;\n    const { device } = t;\n    const texture = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,\n    });\n\n    const layout = device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          [bindingType]: {\n            format: texture.format,\n          },\n        },\n      ],\n    });\n\n    const bindGroup = device.createBindGroup({\n      layout,\n      entries: [{ binding: 0, resource: texture.createView() }],\n    });\n\n    const { encoder, finish } = t.createEncoder(encoderType);\n    encoder.setBindGroup(0, bindGroup);\n    const commandBuffer = finish();\n\n    if (destroyed) {\n      texture.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('beginRenderPass')\n  .desc(\n    `\nTests that using a destroyed texture referenced by a render pass fails\n- x= {not destroyed (control case), colorAttachment destroyed, depthAttachment destroyed, resolveTarget destroyed}\n    `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('textureToDestroy', [\n      'none',\n      'colorAttachment',\n      'resolveAttachment',\n      'depthStencilAttachment',\n    ])\n  )\n  .fn(t => {\n    const { textureToDestroy } = t.params;\n    const { device } = t;\n\n    const colorAttachment = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      sampleCount: 4,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const resolveAttachment = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const depthStencilAttachment = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'depth32float',\n      sampleCount: 4,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const encoder = device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: colorAttachment.createView(),\n          resolveTarget: resolveAttachment.createView(),\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n      depthStencilAttachment: {\n        view: depthStencilAttachment.createView(),\n        depthClearValue: 0,\n        depthLoadOp: 'clear',\n        depthStoreOp: 'store',\n      },\n    });\n    pass.end();\n    const commandBuffer = encoder.finish();\n\n    switch (textureToDestroy) {\n      case 'none':\n        break;\n      case 'colorAttachment':\n        colorAttachment.destroy();\n        break;\n      case 'resolveAttachment':\n        resolveAttachment.destroy();\n        break;\n      case 'depthStencilAttachment':\n        depthStencilAttachment.destroy();\n        break;\n      default:\n        unreachable();\n    }\n\n    const shouldError = textureToDestroy !== 'none';\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, shouldError);\n  });\n"],"mappings":"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"}