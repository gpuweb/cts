{"version":3,"file":"buffer.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsValidationTest","g","test","desc","paramsSubcasesOnly","u","combine","fn","t","destroyed","params","buffer","createBufferTracked","size","usage","GPUBufferUsage","COPY_DST","destroy","expectValidationError","queue","writeBuffer","Uint8Array","src","COPY_SRC","dst","encoder","device","createCommandEncoder","copyBufferToBuffer","commandBuffer","finish","shouldError","submit","texture","createTextureTracked","format","GPUTextureUsage","copyBufferToTexture","copyTextureToBuffer","encoderType","UNIFORM","layout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","VERTEX","bindGroup","createBindGroup","resource","createEncoder","setBindGroup","vertexBuffer","setVertexBuffer","indexBuffer","INDEX","setIndexBuffer","querySet","createQuerySetTracked","type","count","querySetBuffer","QUERY_RESOLVE","resolveQuerySet"],"sources":["../../../../../../src/webgpu/api/validation/queue/destroyed/buffer.spec.ts"],"sourcesContent":["export const description = `\nTests using a destroyed buffer on a queue.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('writeBuffer')\n  .desc(\n    `\nTests that using a destroyed buffer in writeBuffer fails.\n- x= {destroyed, not destroyed (control case)}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const buffer = t.createBufferTracked({\n      size: 4,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    if (destroyed) {\n      buffer.destroy();\n    }\n\n    t.expectValidationError(() => t.queue.writeBuffer(buffer, 0, new Uint8Array(4)), destroyed);\n  });\n\ng.test('copyBufferToBuffer')\n  .desc(\n    `\nTests that using a destroyed buffer in copyBufferToBuffer fails.\n- x= {not destroyed (control case), src destroyed, dst destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', ['none', 'src', 'dst', 'both'] as const))\n  .fn(t => {\n    const src = t.createBufferTracked({ size: 4, usage: GPUBufferUsage.COPY_SRC });\n    const dst = t.createBufferTracked({ size: 4, usage: GPUBufferUsage.COPY_DST });\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyBufferToBuffer(src, 0, dst, 0, dst.size);\n    const commandBuffer = encoder.finish();\n\n    let shouldError = true;\n    switch (t.params.destroyed) {\n      case 'none':\n        shouldError = false;\n        break;\n      case 'src':\n        src.destroy();\n        break;\n      case 'dst':\n        dst.destroy();\n        break;\n      case 'both':\n        src.destroy();\n        dst.destroy();\n        break;\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, shouldError);\n  });\n\ng.test('copyBufferToTexture')\n  .desc(\n    `\nTests that using a destroyed buffer in copyBufferToTexture fails.\n- x= {not destroyed (control case), src destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const buffer = t.createBufferTracked({ size: 4, usage: GPUBufferUsage.COPY_SRC });\n    const texture = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyBufferToTexture({ buffer }, { texture }, [1, 1, 1]);\n    const commandBuffer = encoder.finish();\n\n    if (destroyed) {\n      buffer.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('copyTextureToBuffer')\n  .desc(\n    `\nTests that using a destroyed buffer in copyTextureToBuffer fails.\n- x= {not destroyed (control case), dst destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const texture = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_SRC,\n    });\n    const buffer = t.createBufferTracked({ size: 4, usage: GPUBufferUsage.COPY_DST });\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyTextureToBuffer({ texture }, { buffer }, [1, 1, 1]);\n    const commandBuffer = encoder.finish();\n\n    if (destroyed) {\n      buffer.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('setBindGroup')\n  .desc(\n    `\nTests that using a destroyed buffer referenced by a bindGroup set with setBindGroup fails\n- x= {not destroyed (control case), destroyed}\n    `\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('destroyed', [false, true] as const)\n      .combine('encoderType', ['compute pass', 'render pass', 'render bundle'] as const)\n  )\n  .fn(t => {\n    const { destroyed, encoderType } = t.params;\n    const { device } = t;\n    const buffer = t.createBufferTracked({\n      size: 4,\n      usage: GPUBufferUsage.UNIFORM,\n    });\n\n    const layout = device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE | GPUShaderStage.VERTEX,\n          buffer: {},\n        },\n      ],\n    });\n\n    const bindGroup = device.createBindGroup({\n      layout,\n      entries: [{ binding: 0, resource: { buffer } }],\n    });\n\n    const { encoder, finish } = t.createEncoder(encoderType);\n    encoder.setBindGroup(0, bindGroup);\n    const commandBuffer = finish();\n\n    if (destroyed) {\n      buffer.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('setVertexBuffer')\n  .desc(\n    `\nTests that using a destroyed buffer referenced in a render pass fails\n- x= {not destroyed (control case), destroyed}\n    `\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('destroyed', [false, true] as const)\n      .combine('encoderType', ['render pass', 'render bundle'] as const)\n  )\n  .fn(t => {\n    const { destroyed, encoderType } = t.params;\n    const vertexBuffer = t.createBufferTracked({\n      size: 4,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, finish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer);\n    const commandBuffer = finish();\n\n    if (destroyed) {\n      vertexBuffer.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('setIndexBuffer')\n  .desc(\n    `\nTests that using a destroyed buffer referenced in a render pass fails\n- x= {not destroyed (control case), destroyed}\n    `\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('destroyed', [false, true] as const)\n      .combine('encoderType', ['render pass', 'render bundle'] as const)\n  )\n  .fn(t => {\n    const { destroyed, encoderType } = t.params;\n    const indexBuffer = t.createBufferTracked({\n      size: 4,\n      usage: GPUBufferUsage.INDEX,\n    });\n\n    const { encoder, finish } = t.createEncoder(encoderType);\n    encoder.setIndexBuffer(indexBuffer, 'uint16');\n    const commandBuffer = finish();\n\n    if (destroyed) {\n      indexBuffer.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('resolveQuerySet')\n  .desc(\n    `\nTests that using a destroyed buffer referenced via resolveQuerySet fails\n- x= {not destroyed (control case), destroyed}\n    `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const querySet = t.createQuerySetTracked({\n      type: 'occlusion',\n      count: 1,\n    });\n    const querySetBuffer = t.createBufferTracked({\n      size: 8,\n      usage: GPUBufferUsage.QUERY_RESOLVE,\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.resolveQuerySet(querySet, 0, 1, querySetBuffer, 0);\n    const commandBuffer = encoder.finish();\n\n    if (destroyed) {\n      querySetBuffer.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n"],"mappings":"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"}