{"version":3,"file":"query_set.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsValidationTest","g","test","desc","paramsSubcasesOnly","u","combine","fn","t","occlusionQuerySet","createQuerySetWithState","params","querySetState","encoder","createEncoder","beginOcclusionQuery","endOcclusionQuery","validateFinishAndSubmitGivenState","beginSubcases","skipIfDeviceDoesNotSupportQueryType","querySet","type","count","writeTimestamp","ex","skipIf","TypeError","beginComputePass","timestampWrites","beginningOfPassWriteIndex","end","texture","createTextureTracked","size","format","usage","GPUTextureUsage","RENDER_ATTACHMENT","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","buffer","createBufferTracked","GPUBufferUsage","QUERY_RESOLVE","resolveQuerySet"],"sources":["../../../../../../src/webgpu/api/validation/queue/destroyed/query_set.spec.ts"],"sourcesContent":["export const description = `\nTests using a destroyed query set on a queue.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('beginOcclusionQuery')\n  .desc(\n    `\nTests that use a destroyed query set in occlusion query on render pass encoder.\n- x= {destroyed, not destroyed (control case)}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('querySetState', ['valid', 'destroyed'] as const))\n  .fn(t => {\n    const occlusionQuerySet = t.createQuerySetWithState(t.params.querySetState);\n\n    const encoder = t.createEncoder('render pass', { occlusionQuerySet });\n    encoder.encoder.beginOcclusionQuery(0);\n    encoder.encoder.endOcclusionQuery();\n    encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n  });\n\ng.test('timestamps')\n  .desc(\n    `\nTests that use a destroyed query set in timestamp query on {non-pass, compute, render} encoder.\n- x= {destroyed, not destroyed (control case)}\n\n  TODO: writeTimestamp is removed from the spec so it's skipped if it TypeErrors.\n  `\n  )\n  .params(u => u.beginSubcases().combine('querySetState', ['valid', 'destroyed'] as const))\n  .fn(t => {\n    t.skipIfDeviceDoesNotSupportQueryType('timestamp');\n    const querySet = t.createQuerySetWithState(t.params.querySetState, {\n      type: 'timestamp',\n      count: 2,\n    });\n\n    {\n      const encoder = t.createEncoder('non-pass');\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (encoder.encoder as any).writeTimestamp(querySet, 0);\n      } catch (ex) {\n        t.skipIf(ex instanceof TypeError, 'writeTimestamp is actually not available');\n      }\n      encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n    }\n\n    {\n      const encoder = t.createEncoder('non-pass');\n      encoder.encoder\n        .beginComputePass({\n          timestampWrites: { querySet, beginningOfPassWriteIndex: 0 },\n        })\n        .end();\n      encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n    }\n\n    {\n      const texture = t.createTextureTracked({\n        size: [1, 1, 1],\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      });\n      const encoder = t.createEncoder('non-pass');\n      encoder.encoder\n        .beginRenderPass({\n          colorAttachments: [\n            {\n              view: texture.createView(),\n              loadOp: 'load',\n              storeOp: 'store',\n            },\n          ],\n          timestampWrites: { querySet, beginningOfPassWriteIndex: 0 },\n        })\n        .end();\n      encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n    }\n  });\n\ng.test('resolveQuerySet')\n  .desc(\n    `\nTests that use a destroyed query set in resolveQuerySet.\n- x= {destroyed, not destroyed (control case)}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('querySetState', ['valid', 'destroyed'] as const))\n  .fn(t => {\n    const querySet = t.createQuerySetWithState(t.params.querySetState);\n\n    const buffer = t.createBufferTracked({ size: 8, usage: GPUBufferUsage.QUERY_RESOLVE });\n\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.resolveQuerySet(querySet, 0, 1, buffer, 0);\n    encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n  });\n"],"mappings":"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"}