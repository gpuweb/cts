{"version":3,"file":"buffer_mapped.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsValidationTest","F","runBufferDependencyTest","usage","callback","bufferDesc","size","mappedAtCreation","mapMode","GPUBufferUsage","MAP_READ","GPUMapMode","READ","WRITE","mappableBuffer","createBufferTracked","unmappedBuffer","mapPromise","mapAsync","expectValidationError","getMappedRange","unmap","mappedBuffer","g","test","desc","fn","t","data","Uint32Array","COPY_DST","buffer","queue","writeBuffer","sourceBuffer","COPY_SRC","destBuffer","MAP_WRITE","commandEncoder","device","createCommandEncoder","copyBufferToBuffer","submit","finish","width","height","texture","createTextureTracked","format","GPUTextureUsage","copyBufferToTexture","copyTextureToBuffer","paramsSubcasesOnly","order","_shouldError","shouldError","params","targetBuffer","commandBuffer","steps","record","map","op"],"sources":["../../../../../src/webgpu/api/validation/queue/buffer_mapped.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for the map-state of mappable buffers used in submitted command buffers.\n\nTests every operation that has a dependency on a buffer\n  - writeBuffer\n  - copyB2B {src,dst}\n  - copyB2T\n  - copyT2B\n\nTest those operations against buffers in the following states:\n  - Unmapped\n  - In the process of mapping\n  - mapped\n  - mapped with a mapped range queried\n  - unmapped after mapping\n  - mapped at creation\n\nAlso tests every order of operations combination of mapping operations and command recording\noperations to ensure the mapping state is only considered when a command buffer is submitted.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../validation_test.js';\n\nclass F extends AllFeaturesMaxLimitsValidationTest {\n  async runBufferDependencyTest(usage: number, callback: Function): Promise<void> {\n    const bufferDesc = {\n      size: 8,\n      usage,\n      mappedAtCreation: false,\n    };\n\n    const mapMode = usage & GPUBufferUsage.MAP_READ ? GPUMapMode.READ : GPUMapMode.WRITE;\n\n    // Create a mappable buffer, and one that will remain unmapped for comparison.\n    const mappableBuffer = this.createBufferTracked(bufferDesc);\n    const unmappedBuffer = this.createBufferTracked(bufferDesc);\n\n    // Run the given operation before the buffer is mapped. Should succeed.\n    callback(mappableBuffer);\n\n    // Map the buffer\n    const mapPromise = mappableBuffer.mapAsync(mapMode);\n\n    // Run the given operation while the buffer is in the process of mapping. Should fail.\n    this.expectValidationError(() => {\n      callback(mappableBuffer);\n    });\n\n    // Run on a different, unmapped buffer. Should succeed.\n    callback(unmappedBuffer);\n\n    await mapPromise;\n\n    // Run the given operation when the buffer is finished mapping with no getMappedRange. Should fail.\n    this.expectValidationError(() => {\n      callback(mappableBuffer);\n    });\n\n    // Run on a different, unmapped buffer. Should succeed.\n    callback(unmappedBuffer);\n\n    // Run the given operation when the buffer is mapped with getMappedRange. Should fail.\n    mappableBuffer.getMappedRange();\n    this.expectValidationError(() => {\n      callback(mappableBuffer);\n    });\n\n    // Unmap the buffer and run the operation. Should succeed.\n    mappableBuffer.unmap();\n    callback(mappableBuffer);\n\n    // Create a buffer that's mappedAtCreation.\n    bufferDesc.mappedAtCreation = true;\n    const mappedBuffer = this.createBufferTracked(bufferDesc);\n\n    // Run the operation with the mappedAtCreation buffer. Should fail.\n    this.expectValidationError(() => {\n      callback(mappedBuffer);\n    });\n\n    // Run on a different, unmapped buffer. Should succeed.\n    callback(unmappedBuffer);\n\n    // Unmap the mappedAtCreation buffer and run the operation. Should succeed.\n    mappedBuffer.unmap();\n    callback(mappedBuffer);\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('writeBuffer')\n  .desc(`Test that an outstanding mapping will prevent writeBuffer calls.`)\n  .fn(async t => {\n    const data = new Uint32Array([42]);\n\n    await t.runBufferDependencyTest(\n      GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n      (buffer: GPUBuffer) => {\n        t.queue.writeBuffer(buffer, 0, data);\n      }\n    );\n  });\n\ng.test('copyBufferToBuffer')\n  .desc(\n    `\n  Test that an outstanding mapping will prevent copyBufferToTexture commands from submitting,\n  both when used as the source and destination.`\n  )\n  .fn(async t => {\n    const sourceBuffer = t.createBufferTracked({\n      size: 8,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n\n    const destBuffer = t.createBufferTracked({\n      size: 8,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    await t.runBufferDependencyTest(\n      GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\n      (buffer: GPUBuffer) => {\n        const commandEncoder = t.device.createCommandEncoder();\n        commandEncoder.copyBufferToBuffer(buffer, 0, destBuffer, 0, 4);\n        t.queue.submit([commandEncoder.finish()]);\n      }\n    );\n\n    await t.runBufferDependencyTest(\n      GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n      (buffer: GPUBuffer) => {\n        const commandEncoder = t.device.createCommandEncoder();\n        commandEncoder.copyBufferToBuffer(sourceBuffer, 0, buffer, 0, 4);\n        t.queue.submit([commandEncoder.finish()]);\n      }\n    );\n  });\n\ng.test('copyBufferToTexture')\n  .desc(\n    `Test that an outstanding mapping will prevent copyBufferToTexture commands from submitting.`\n  )\n  .fn(async t => {\n    const size = { width: 1, height: 1 };\n\n    const texture = t.createTextureTracked({\n      size,\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    await t.runBufferDependencyTest(\n      GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\n      (buffer: GPUBuffer) => {\n        const commandEncoder = t.device.createCommandEncoder();\n        commandEncoder.copyBufferToTexture({ buffer }, { texture }, size);\n        t.queue.submit([commandEncoder.finish()]);\n      }\n    );\n  });\n\ng.test('copyTextureToBuffer')\n  .desc(\n    `Test that an outstanding mapping will prevent copyTextureToBuffer commands from submitting.`\n  )\n  .fn(async t => {\n    const size = { width: 1, height: 1 };\n\n    const texture = t.createTextureTracked({\n      size,\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.COPY_SRC,\n    });\n\n    await t.runBufferDependencyTest(\n      GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n      (buffer: GPUBuffer) => {\n        const commandEncoder = t.device.createCommandEncoder();\n        commandEncoder.copyTextureToBuffer({ texture }, { buffer }, size);\n        t.queue.submit([commandEncoder.finish()]);\n      }\n    );\n  });\n\ng.test('map_command_recording_order')\n  .desc(\n    `\nTest that the order of mapping a buffer relative to when commands are recorded that use it\n  does not matter, as long as the buffer is unmapped when the commands are submitted.\n  `\n  )\n  .paramsSubcasesOnly([\n    {\n      order: ['record', 'map', 'unmap', 'finish', 'submit'],\n      mappedAtCreation: false,\n      _shouldError: false,\n    },\n    {\n      order: ['record', 'map', 'finish', 'unmap', 'submit'],\n      mappedAtCreation: false,\n      _shouldError: false,\n    },\n    {\n      order: ['record', 'finish', 'map', 'unmap', 'submit'],\n      mappedAtCreation: false,\n      _shouldError: false,\n    },\n    {\n      order: ['map', 'record', 'unmap', 'finish', 'submit'],\n      mappedAtCreation: false,\n      _shouldError: false,\n    },\n    {\n      order: ['map', 'record', 'finish', 'unmap', 'submit'],\n      mappedAtCreation: false,\n      _shouldError: false,\n    },\n    {\n      order: ['map', 'record', 'finish', 'submit', 'unmap'],\n      mappedAtCreation: false,\n      _shouldError: true,\n    },\n    {\n      order: ['record', 'map', 'finish', 'submit', 'unmap'],\n      mappedAtCreation: false,\n      _shouldError: true,\n    },\n    {\n      order: ['record', 'finish', 'map', 'submit', 'unmap'],\n      mappedAtCreation: false,\n      _shouldError: true,\n    },\n    { order: ['record', 'unmap', 'finish', 'submit'], mappedAtCreation: true, _shouldError: false },\n    { order: ['record', 'finish', 'unmap', 'submit'], mappedAtCreation: true, _shouldError: false },\n    { order: ['record', 'finish', 'submit', 'unmap'], mappedAtCreation: true, _shouldError: true },\n  ] as const)\n  .fn(async t => {\n    const { order, mappedAtCreation, _shouldError: shouldError } = t.params;\n\n    const buffer = t.createBufferTracked({\n      size: 4,\n      usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC,\n      mappedAtCreation,\n    });\n\n    const targetBuffer = t.createBufferTracked({\n      size: 4,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    const commandEncoder = t.device.createCommandEncoder();\n    let commandBuffer: GPUCommandBuffer;\n\n    const steps = {\n      record: () => {\n        commandEncoder.copyBufferToBuffer(buffer, 0, targetBuffer, 0, 4);\n      },\n      map: async () => {\n        await buffer.mapAsync(GPUMapMode.WRITE);\n      },\n      unmap: () => {\n        buffer.unmap();\n      },\n      finish: () => {\n        commandBuffer = commandEncoder.finish();\n      },\n      submit: () => {\n        t.expectValidationError(() => {\n          t.queue.submit([commandBuffer]);\n        }, shouldError);\n      },\n    };\n\n    for (const op of order) {\n      await steps[op]();\n    }\n  });\n"],"mappings":"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"}