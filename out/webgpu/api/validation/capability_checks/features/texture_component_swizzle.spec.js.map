{"version":3,"file":"texture_component_swizzle.spec.js","names":["description","makeTestGroup","UniqueFeaturesOrLimitsGPUTest","isIdentitySwizzle","kSwizzleTests","g","test","desc","params","u","beginSubcases","combine","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","invalidSwizzle","texture","createTextureTracked","format","size","usage","GPUTextureUsage","COPY_DST","TEXTURE_BINDING","failure","shouldThrow","createView","swizzle","shouldError","expectValidationError","useCase","COPY_SRC","RENDER_ATTACHMENT","STORAGE_BINDING","view","bindGroupLayout","device","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","FRAGMENT","createBindGroup","layout","resource","encoder","createCommandEncoder","pass","beginRenderPass","colorAttachments","loadOp","storeOp","end","finish","depthStencilAttachment","depthClearValue","depthLoadOp","depthStoreOp","stencilClearValue","stencilLoadOp","stencilStoreOp","sampleCount","resolveTarget","COMPUTE","storageTexture","access","otherSwizzle","pipelineType","module","createShaderModule","code","pipeline","createComputePipeline","compute","createRenderPipeline","vertex","fragment","targets","bindGroup0","getBindGroupLayout","bindGroup1","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","draw","isCompatibility"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/features/texture_component_swizzle.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for the 'texture-component-swizzle' feature.\n\nTest that:\n* when the feature is off, swizzling is not allowed, even the identity swizzle.\n* swizzling is not allowed on textures with usage STORAGE_BINDING nor RENDER_ATTACHMENT\n  except the identity swizzle.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { UniqueFeaturesOrLimitsGPUTest } from '../../../../gpu_test.js';\n\nimport { isIdentitySwizzle, kSwizzleTests } from './texture_component_swizzle_utils.js';\n\nexport const g = makeTestGroup(UniqueFeaturesOrLimitsGPUTest);\n\ng.test('invalid_swizzle')\n  .desc(\n    `\n  Test that setting an invalid swizzle value on a texture view throws an exception.\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('invalidSwizzle', [\n      'rgbA', // swizzles are case-sensitive\n      'RGBA', // swizzles are case-sensitive\n      'rgb', // must have 4 components\n      'rgba01',\n      'ɲgba', // r with 0x200 added to each code point to make sure values are not truncated.\n      'ɲɧɢɡ', // rgba with 0x200 added to each code point to make sure values are not truncated.\n      '𝐫𝐠𝐛𝐚', // various unicode values that normalize to rgba\n      '𝑟𝑔𝑏𝑎',\n      '𝗋𝗀𝖻𝖺',\n      '𝓇ℊ𝒷𝒶',\n      'ⓡⓖⓑⓐ',\n      'ｒｇｂａ',\n      'ʳᵍᵇᵃ',\n      '000',\n      '00000',\n      '111',\n      '11111',\n      0,\n      1,\n      1111, // passes because toString is '1111'\n      1234,\n      1111.1,\n      0x72676261, // big endian rgba\n      0x61626772, // little endian rgba\n      0x30303030, // 0000\n      0x31313131, // 1111\n      true,\n      false,\n      null,\n    ])\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('texture-component-swizzle');\n  })\n  .fn(t => {\n    const { invalidSwizzle } = t.params;\n    const texture = t.createTextureTracked({\n      format: 'rgba8unorm',\n      size: [1],\n      usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,\n    });\n\n    const failure = typeof invalidSwizzle !== 'number' || invalidSwizzle !== 1111;\n    t.shouldThrow(failure ? 'TypeError' : false, () => {\n      texture.createView({ swizzle: invalidSwizzle as GPUTextureComponentSwizzle });\n    });\n  });\n\ng.test('only_identity_swizzle')\n  .desc(\n    `\n  Test that if texture-component-swizzle is not enabled, having a non-default swizzle property generates a validation error.\n  `\n  )\n  .params(u => u.beginSubcases().combine('swizzle', kSwizzleTests))\n  .fn(t => {\n    const { swizzle } = t.params;\n    const texture = t.createTextureTracked({\n      format: 'rgba8unorm',\n      size: [1],\n      usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.TEXTURE_BINDING,\n    });\n    const shouldError = !isIdentitySwizzle(swizzle);\n    t.expectValidationError(() => {\n      texture.createView({ swizzle });\n    }, shouldError);\n  });\n\ng.test('no_render_no_resolve_no_storage')\n  .desc(\n    `\n  Test that setting a non-identity swizzle gets an error if used as a render attachment,\n  a resolve target, or a storage binding.\n  `\n  )\n  .params(u =>\n    u\n      .combine('useCase', [\n        'texture-binding',\n        'color-attachment',\n        'depth-attachment',\n        'stencil-attachment',\n        'resolve-target',\n        'storage-binding',\n      ] as const)\n      .beginSubcases()\n      .combine('swizzle', kSwizzleTests)\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('texture-component-swizzle');\n  })\n  .fn(t => {\n    const { swizzle, useCase } = t.params;\n    const texture = t.createTextureTracked({\n      format:\n        useCase === 'depth-attachment'\n          ? 'depth16unorm'\n          : useCase === 'stencil-attachment'\n          ? 'stencil8'\n          : 'rgba8unorm',\n      size: [1],\n      usage:\n        GPUTextureUsage.COPY_SRC |\n        GPUTextureUsage.COPY_DST |\n        GPUTextureUsage.TEXTURE_BINDING |\n        GPUTextureUsage.RENDER_ATTACHMENT |\n        (useCase === 'storage-binding' ? GPUTextureUsage.STORAGE_BINDING : 0),\n    });\n    const view = texture.createView({ swizzle });\n    const shouldError = useCase !== 'texture-binding' && !isIdentitySwizzle(swizzle);\n    switch (useCase) {\n      case 'texture-binding': {\n        const bindGroupLayout = t.device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility: GPUShaderStage.FRAGMENT,\n              texture: {},\n            },\n          ],\n        });\n        t.expectValidationError(() => {\n          t.device.createBindGroup({\n            layout: bindGroupLayout,\n            entries: [{ binding: 0, resource: view }],\n          });\n        }, shouldError);\n        break;\n      }\n      case 'color-attachment': {\n        t.expectValidationError(() => {\n          const encoder = t.device.createCommandEncoder();\n          const pass = encoder.beginRenderPass({\n            colorAttachments: [\n              {\n                view,\n                loadOp: 'clear',\n                storeOp: 'store',\n              },\n            ],\n          });\n          pass.end();\n          encoder.finish();\n        }, shouldError);\n        break;\n      }\n      case 'depth-attachment': {\n        t.expectValidationError(() => {\n          const encoder = t.device.createCommandEncoder();\n          const pass = encoder.beginRenderPass({\n            colorAttachments: [],\n            depthStencilAttachment: {\n              view,\n              depthClearValue: 1,\n              depthLoadOp: 'clear',\n              depthStoreOp: 'store',\n            },\n          });\n          pass.end();\n          encoder.finish();\n        }, shouldError);\n        break;\n      }\n      case 'stencil-attachment': {\n        t.expectValidationError(() => {\n          const encoder = t.device.createCommandEncoder();\n          const pass = encoder.beginRenderPass({\n            colorAttachments: [],\n            depthStencilAttachment: {\n              view,\n              stencilClearValue: 0,\n              stencilLoadOp: 'clear',\n              stencilStoreOp: 'store',\n            },\n          });\n          pass.end();\n          encoder.finish();\n        }, shouldError);\n        break;\n      }\n      case 'resolve-target': {\n        t.expectValidationError(() => {\n          const encoder = t.device.createCommandEncoder();\n          const pass = encoder.beginRenderPass({\n            colorAttachments: [\n              {\n                view: t.createTextureTracked({\n                  format: 'rgba8unorm',\n                  size: [1],\n                  usage: GPUTextureUsage.RENDER_ATTACHMENT,\n                  sampleCount: 4,\n                }),\n                resolveTarget: view,\n                loadOp: 'clear',\n                storeOp: 'store',\n              },\n            ],\n          });\n          pass.end();\n          encoder.finish();\n        }, shouldError);\n        break;\n      }\n      case 'storage-binding': {\n        const bindGroupLayout = t.device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility: GPUShaderStage.COMPUTE,\n              storageTexture: {\n                access: 'read-only',\n                format: 'rgba8unorm',\n              },\n            },\n          ],\n        });\n        t.expectValidationError(() => {\n          t.device.createBindGroup({\n            layout: bindGroupLayout,\n            entries: [{ binding: 0, resource: view }],\n          });\n        }, shouldError);\n        break;\n      }\n    }\n  });\n\ng.test('compatibility_mode')\n  .desc(\n    `\n  Test that in compatibility mode, swizzles must be equivalent.\n  `\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceOrSkipTestCase('texture-component-swizzle');\n  })\n  .params(u =>\n    u\n      .beginSubcases()\n      .combine('swizzle', kSwizzleTests)\n      .combine('otherSwizzle', kSwizzleTests)\n      .combine('pipelineType', ['render', 'compute'] as const)\n  )\n  .fn(t => {\n    const { swizzle, otherSwizzle, pipelineType } = t.params;\n\n    const module = t.device.createShaderModule({\n      code: `\n        @group(0) @binding(0) var tex0: texture_2d<f32>;\n        @group(1) @binding(0) var tex1: texture_2d<f32>;\n\n        @compute @workgroup_size(1) fn cs() {\n          _ = tex0;\n          _ = tex1;\n        }\n\n        @vertex fn vs() -> @builtin(position) vec4f {\n          return vec4f(0);\n        }\n\n        @fragment fn fs() -> @location(0) vec4f {\n          _ = tex0;\n          _ = tex1;\n          return vec4f(0);\n        }\n      `,\n    });\n\n    const pipeline =\n      pipelineType === 'compute'\n        ? t.device.createComputePipeline({\n            layout: 'auto',\n            compute: { module },\n          })\n        : t.device.createRenderPipeline({\n            layout: 'auto',\n            vertex: { module },\n            fragment: { module, targets: [{ format: 'rgba8unorm' }] },\n          });\n\n    const texture = t.createTextureTracked({\n      size: [1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.TEXTURE_BINDING,\n    });\n\n    const bindGroup0 = t.device.createBindGroup({\n      layout: pipeline.getBindGroupLayout(0),\n      entries: [\n        {\n          binding: 0,\n          resource: texture.createView({ swizzle }),\n        },\n      ],\n    });\n\n    const bindGroup1 = t.device.createBindGroup({\n      layout: pipeline.getBindGroupLayout(0),\n      entries: [\n        {\n          binding: 0,\n          resource: texture.createView({ swizzle: otherSwizzle }),\n        },\n      ],\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    switch (pipelineType) {\n      case 'compute': {\n        const pass = encoder.beginComputePass();\n        pass.setPipeline(pipeline as GPUComputePipeline);\n        pass.setBindGroup(0, bindGroup0);\n        pass.setBindGroup(1, bindGroup1);\n        pass.dispatchWorkgroups(1);\n        pass.end();\n        break;\n      }\n      case 'render': {\n        const view = t.createTextureTracked({\n          size: [1],\n          format: 'rgba8unorm',\n          usage: GPUTextureUsage.RENDER_ATTACHMENT,\n        });\n        const pass = encoder.beginRenderPass({\n          colorAttachments: [{ view, loadOp: 'clear', storeOp: 'store' }],\n        });\n        pass.setPipeline(pipeline as GPURenderPipeline);\n        pass.setBindGroup(0, bindGroup0);\n        pass.setBindGroup(1, bindGroup1);\n        pass.draw(3);\n        pass.end();\n      }\n    }\n\n    const shouldError = t.isCompatibility && swizzle !== otherSwizzle;\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, shouldError);\n  });\n"],"mappings":"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"}