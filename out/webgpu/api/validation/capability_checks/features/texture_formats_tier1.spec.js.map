{"version":3,"file":"texture_formats_tier1.spec.js","names":["description","makeTestGroup","kTextureFormatTier1AllowsRenderAttachmentBlendableMultisample","kTextureFormatTier1ThrowsWhenNotEnabled","kTextureFormatsTier1EnablesStorageReadOnlyWriteOnly","UniqueFeaturesOrLimitsGPUTest","vtu","g","test","desc","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expect","device","features","has","params","u","combine","enable_feature","format","expectValidationErrorOrException","createTextureTracked","size","usage","GPUTextureUsage","RENDER_ATTACHMENT","includes","sampleCount","STORAGE_BINDING","isAsync","check","pipelineDescriptor","layout","vertex","module","createShaderModule","code","entryPoint","fragment","targets","target0","multisample","count","blend","color","operation","srcFactor","dstFactor","alpha","doCreateRenderPipelineTest","unimplemented","access","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","storageTexture","beginSubcases","type","descriptor","compute","doCreateComputePipelineTest"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/features/texture_formats_tier1.spec.ts"],"sourcesContent":["export const description = `\nTests for capability checking for the 'texture-formats-tier1' feature.\n\nTest that enabling texture-formats-tier1 also enables rg11b10ufloat-renderable\n\nTests that abilities enabled by 'texture-formats-tier1' correctly generate validation errors\nwhen the feature is not enabled. This includes:\n- RENDER_ATTACHMENT usage for formats gaining this capability.\n- Multisample usage for formats gaining this capability.\n- Blendability for formats gaining this capability.\n- Resolvability for formats gaining this capability.\n- STORAGE_BINDING usage for formats gaining this capability.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport {\n  kTextureFormatTier1AllowsRenderAttachmentBlendableMultisample,\n  kTextureFormatTier1ThrowsWhenNotEnabled,\n  kTextureFormatsTier1EnablesStorageReadOnlyWriteOnly,\n} from '../../../../format_info.js';\nimport { UniqueFeaturesOrLimitsGPUTest } from '../../../../gpu_test.js';\nimport * as vtu from '../../validation_test_utils.js';\n\nexport const g = makeTestGroup(UniqueFeaturesOrLimitsGPUTest);\n\ng.test('enables_rg11b10ufloat_renderable')\n  .desc(\n    `\n  Test that enabling texture-formats-tier1 also enables rg11b10ufloat-renderable\n  `\n  )\n  .beforeAllSubcases(t => t.selectDeviceOrSkipTestCase('texture-formats-tier1'))\n  .fn(t => {\n    t.expect(() => t.device.features.has('rg11b10ufloat-renderable'));\n  });\n\ng.test('texture_usage,render_attachment')\n  .desc(\n    `\n  Test creating a texture with RENDER_ATTACHMENT usage and a format enabled by\n  'texture-formats-tier1' fails if the feature is not enabled.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kTextureFormatTier1AllowsRenderAttachmentBlendableMultisample)\n      .combine('enable_feature', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier1');\n    }\n  })\n  .fn(t => {\n    const { format, enable_feature } = t.params;\n\n    t.expectValidationErrorOrException(\n      () => {\n        t.createTextureTracked({\n          format,\n          size: [1, 1, 1],\n          usage: GPUTextureUsage.RENDER_ATTACHMENT,\n        });\n      },\n      !enable_feature,\n      kTextureFormatTier1ThrowsWhenNotEnabled.includes(format)\n    );\n  });\n\ng.test('texture_usage,multisample')\n  .desc(\n    `\n  Test creating a multisampled texture with a format enabled by\n  'texture-formats-tier1' fails if the feature is not enabled.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kTextureFormatTier1AllowsRenderAttachmentBlendableMultisample)\n      .combine('enable_feature', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier1');\n    }\n  })\n  .fn(t => {\n    const { format, enable_feature } = t.params;\n\n    t.expectValidationErrorOrException(\n      () => {\n        t.createTextureTracked({\n          format,\n          size: [1, 1, 1],\n          usage: GPUTextureUsage.RENDER_ATTACHMENT,\n          sampleCount: 4,\n        });\n      },\n      !enable_feature,\n      kTextureFormatTier1ThrowsWhenNotEnabled.includes(format)\n    );\n  });\n\ng.test('texture_usage,storage_binding')\n  .desc(\n    `\n  Test creating a texture with STORAGE_BINDING usage and a format enabled by\n  'texture-formats-tier1' fails if the feature is not enabled.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kTextureFormatsTier1EnablesStorageReadOnlyWriteOnly)\n      .combine('enable_feature', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier1');\n    }\n  })\n  .fn(t => {\n    const { format, enable_feature } = t.params;\n\n    t.expectValidationErrorOrException(\n      () => {\n        t.createTextureTracked({\n          format,\n          size: [1, 1, 1],\n          usage: GPUTextureUsage.STORAGE_BINDING,\n        });\n      },\n      !enable_feature,\n      kTextureFormatTier1ThrowsWhenNotEnabled.includes(format)\n    );\n  });\n\ng.test('render_pipeline,color_target')\n  .desc(\n    `\n  Test creating a render pipeline with a color target format enabled by\n  'texture-formats-tier1' fails if the feature is not enabled.\n  This covers RENDER_ATTACHMENT, blendable, and multisample capabilities.\n\n  Note: it's not clear it's possible to check blendable and multisample\n  as most likely there will be an error for RENDER_ATTACHMENT first.\n  `\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', [\n        'rgba8unorm',\n        ...kTextureFormatTier1AllowsRenderAttachmentBlendableMultisample,\n      ] as const)\n      .combine('enable_feature', [true, false])\n      .combine('check', ['RENDER_ATTACHMENT', 'blendable', 'multisample'] as const)\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier1');\n    }\n  })\n  .fn(t => {\n    const { isAsync, format, enable_feature, check } = t.params;\n\n    const pipelineDescriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: `\n            @vertex\n            fn main()-> @builtin(position) vec4<f32> {\n              return vec4<f32>(0.0, 0.0, 0.0, 1.0);\n            }`,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: `\n            @fragment\n            fn main() -> @location(0) vec4<f32> {\n              return vec4<f32>(0.0, 1.0, 0.0, 1.0);\n            }`,\n        }),\n        entryPoint: 'main',\n        targets: [{ format }],\n      },\n    };\n    const target0 = (pipelineDescriptor.fragment!.targets as GPUColorTargetState[])[0];\n\n    if (check === 'multisample') {\n      pipelineDescriptor.multisample = { count: 4 };\n    }\n\n    if (check === 'blendable') {\n      target0.blend = {\n        color: { operation: 'add', srcFactor: 'one', dstFactor: 'zero' },\n        alpha: { operation: 'add', srcFactor: 'one', dstFactor: 'zero' },\n      };\n    }\n\n    vtu.doCreateRenderPipelineTest(\n      t,\n      isAsync,\n      enable_feature || format === 'rgba8unorm',\n      pipelineDescriptor,\n      kTextureFormatTier1ThrowsWhenNotEnabled.includes(format) ? 'TypeError' : 'GPUPipelineError'\n    );\n  });\n\ng.test('render_pass,resolvable')\n  .desc(\n    `\n  Test creating a render pass with resolve with a color target format enabled by\n  'texture-formats-tier1' fails if the feature is not enabled.\n\n  It's not clear this can be tested because you won't be able to create a render pipeline\n  that passes validation which you need before you can create a render pass that resolves.\n  `\n  )\n  .unimplemented();\n\ng.test('bind_group_layout,storage_texture')\n  .desc(\n    `\n  Test creating a bind group layout with a storage texture binding format enabled by\n  'texture-formats-tier1' fails if the feature is not enabled.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kTextureFormatsTier1EnablesStorageReadOnlyWriteOnly)\n      .combine('access', ['read-only', 'write-only'] as const) // Tier1 enables read-only/write-only for these\n      .combine('enable_feature', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier1');\n    }\n  })\n  .fn(t => {\n    const { format, access, enable_feature } = t.params;\n\n    t.expectValidationErrorOrException(\n      () => {\n        t.device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility: GPUShaderStage.COMPUTE,\n              storageTexture: {\n                format,\n                access,\n              },\n            },\n          ],\n        });\n      },\n      !enable_feature,\n      kTextureFormatTier1ThrowsWhenNotEnabled.includes(format)\n    );\n  });\n\ng.test('pipeline_auto_layout,storage_texture')\n  .desc(\n    `\n  Test creating a pipeline with auto layout with a storage texture binding format enabled by\n  'texture-formats-tier1' fails if the feature is not enabled.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kTextureFormatsTier1EnablesStorageReadOnlyWriteOnly)\n      .combine('access', ['read', 'write'] as const) // Tier1 enables read-only/write-only for these\n      .combine('enable_feature', [true, false])\n      .beginSubcases()\n      .combine('isAsync', [false, true] as const)\n      .combine('type', ['compute', 'render'] as const)\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier1');\n    }\n  })\n  .fn(t => {\n    const { format, access, enable_feature, isAsync, type } = t.params;\n\n    const code = `\n      @group(0) @binding(0) var tex1d: texture_storage_1d<${format}, ${access}>;\n      @group(0) @binding(1) var tex2d: texture_storage_1d<${format}, ${access}>;\n      @group(0) @binding(2) var tex3d: texture_storage_1d<${format}, ${access}>;\n\n      fn useTextures() {\n        _ = tex1d;\n        _ = tex2d;\n        _ = tex3d;\n      }\n\n      @compute @workgroup_size(1) fn cs() {\n        useTextures();\n      }\n\n      @vertex fn vs() -> @builtin(position) vec4f {\n        return vec4f(0);\n      }\n      @fragment fn fs() -> @location(0) vec4f {\n        useTextures();\n        return vec4f(0);\n      }\n    `;\n\n    const module = t.device.createShaderModule({ code });\n\n    if (type === 'compute') {\n      const descriptor: GPUComputePipelineDescriptor = {\n        layout: 'auto',\n        compute: { module },\n      };\n      vtu.doCreateComputePipelineTest(t, isAsync, enable_feature, descriptor);\n    } else {\n      const descriptor: GPURenderPipelineDescriptor = {\n        layout: 'auto',\n        vertex: { module },\n        fragment: { module, targets: [{ format: 'rgba8unorm' }] },\n      };\n      vtu.doCreateRenderPipelineTest(t, isAsync, enable_feature, descriptor);\n    }\n  });\n"],"mappings":"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"}