{"version":3,"file":"texture_formats_tier2.spec.js","names":["description","makeTestGroup","kTextureFormatsTier2EnablesStorageReadWrite","UniqueFeaturesOrLimitsGPUTest","g","test","desc","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expect","device","features","has","params","u","combine","enable_feature","format","expectValidationError","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","storageTexture","access"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/features/texture_formats_tier2.spec.ts"],"sourcesContent":["export const description = `\nTests for capability checking for the 'texture-formats-tier2' feature.\n\nTest that enabling texture-formats-tier2 also enables rg11b10ufloat-renderable and texture-formats-tier1\n\nTests that abilities enabled by 'texture-formats-tier2' correctly generate validation errors\nwhen the feature is not enabled. This includes:\n- read-write stoorage access formats gaining this capability.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kTextureFormatsTier2EnablesStorageReadWrite } from '../../../../format_info.js';\nimport { UniqueFeaturesOrLimitsGPUTest } from '../../../../gpu_test.js';\n\nexport const g = makeTestGroup(UniqueFeaturesOrLimitsGPUTest);\n\ng.test('enables_rg11b10ufloat_renderable_and_texture_formats_tier1')\n  .desc(\n    `\n  Test that enabling texture-formats-tier2 also enables rg11b10ufloat-renderable and  texture-formats-tier1\n  `\n  )\n  .beforeAllSubcases(t => t.selectDeviceOrSkipTestCase('texture-formats-tier2'))\n  .fn(t => {\n    t.expect(() => t.device.features.has('rg11b10ufloat-renderable'));\n    t.expect(() => t.device.features.has('texture-formats-tier1'));\n  });\n\ng.test('bind_group_layout,storage_binding_read_write_access')\n  .desc(\n    `\n  Test a bindGroupLayout with access 'read-write' and a format enabled by\n  'texture-formats-tier2' fails if the feature is not enabled and succeeds\n  if it is enabled.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kTextureFormatsTier2EnablesStorageReadWrite)\n      .combine('enable_feature', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier2');\n    }\n  })\n  .fn(t => {\n    const { format, enable_feature } = t.params;\n\n    t.expectValidationError(() => {\n      t.device.createBindGroupLayout({\n        entries: [\n          {\n            binding: 0,\n            visibility: GPUShaderStage.COMPUTE,\n            storageTexture: {\n              access: 'read-write',\n              format,\n            },\n          },\n        ],\n      });\n    }, !enable_feature);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,SAASC,2CAA2C,QAAQ,4BAA4B;AACxF,SAASC,6BAA6B,QAAQ,yBAAyB;;AAEvE,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,6BAA6B,CAAC;;AAE7DC,CAAC,CAACC,IAAI,CAAC,4DAA4D,CAAC;AACjEC,IAAI;EACF;AACL;AACA;AACE,CAAC;AACAC,iBAAiB,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,0BAA0B,CAAC,uBAAuB,CAAC,CAAC;AAC7EC,EAAE,CAAC,CAAAF,CAAC,KAAI;EACPA,CAAC,CAACG,MAAM,CAAC,MAAMH,CAAC,CAACI,MAAM,CAACC,QAAQ,CAACC,GAAG,CAAC,0BAA0B,CAAC,CAAC;EACjEN,CAAC,CAACG,MAAM,CAAC,MAAMH,CAAC,CAACI,MAAM,CAACC,QAAQ,CAACC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAChE,CAAC,CAAC;;AAEJV,CAAC,CAACC,IAAI,CAAC,qDAAqD,CAAC;AAC1DC,IAAI;EACF;AACL;AACA;AACA;AACA;AACE,CAAC;AACAS,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,QAAQ,EAAEf,2CAA2C,CAAC;AAC9De,OAAO,CAAC,gBAAgB,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AAC5C,CAAC;AACAV,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,MAAM,EAAEU,cAAc,CAAC,CAAC,GAAGV,CAAC,CAACO,MAAM;EACnC,IAAIG,cAAc,EAAE;IAClBV,CAAC,CAACC,0BAA0B,CAAC,uBAAuB,CAAC;EACvD;AACF,CAAC,CAAC;AACDC,EAAE,CAAC,CAAAF,CAAC,KAAI;EACP,MAAM,EAAEW,MAAM,EAAED,cAAc,CAAC,CAAC,GAAGV,CAAC,CAACO,MAAM;;EAE3CP,CAAC,CAACY,qBAAqB,CAAC,MAAM;IAC5BZ,CAAC,CAACI,MAAM,CAACS,qBAAqB,CAAC;MAC7BC,OAAO,EAAE;MACP;QACEC,OAAO,EAAE,CAAC;QACVC,UAAU,EAAEC,cAAc,CAACC,OAAO;QAClCC,cAAc,EAAE;UACdC,MAAM,EAAE,YAAY;UACpBT;QACF;MACF,CAAC;;IAEL,CAAC,CAAC;EACJ,CAAC,EAAE,CAACD,cAAc,CAAC;AACrB,CAAC,CAAC"}