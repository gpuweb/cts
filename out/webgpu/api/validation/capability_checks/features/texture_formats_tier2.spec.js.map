{"version":3,"file":"texture_formats_tier2.spec.js","names":["description","makeTestGroup","kTextureFormatsTier2EnablesStorageReadWrite","UniqueFeaturesOrLimitsGPUTest","vtu","g","test","desc","beforeAllSubcases","t","selectDeviceOrSkipTestCase","fn","expect","device","features","has","params","u","combine","enable_feature","format","expectValidationError","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","storageTexture","access","beginSubcases","isAsync","type","code","module","createShaderModule","descriptor","layout","compute","doCreateComputePipelineTest","vertex","fragment","targets","doCreateRenderPipelineTest"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/features/texture_formats_tier2.spec.ts"],"sourcesContent":["export const description = `\nTests for capability checking for the 'texture-formats-tier2' feature.\n\nTest that enabling texture-formats-tier2 also enables rg11b10ufloat-renderable and texture-formats-tier1\n\nTests that abilities enabled by 'texture-formats-tier2' correctly generate validation errors\nwhen the feature is not enabled. This includes:\n- read-write stoorage access formats gaining this capability.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kTextureFormatsTier2EnablesStorageReadWrite } from '../../../../format_info.js';\nimport { UniqueFeaturesOrLimitsGPUTest } from '../../../../gpu_test.js';\nimport * as vtu from '../../validation_test_utils.js';\n\nexport const g = makeTestGroup(UniqueFeaturesOrLimitsGPUTest);\n\ng.test('enables_rg11b10ufloat_renderable_and_texture_formats_tier1')\n  .desc(\n    `\n  Test that enabling texture-formats-tier2 also enables rg11b10ufloat-renderable and  texture-formats-tier1\n  `\n  )\n  .beforeAllSubcases(t => t.selectDeviceOrSkipTestCase('texture-formats-tier2'))\n  .fn(t => {\n    t.expect(() => t.device.features.has('rg11b10ufloat-renderable'));\n    t.expect(() => t.device.features.has('texture-formats-tier1'));\n  });\n\ng.test('bind_group_layout,storage_binding_read_write_access')\n  .desc(\n    `\n  Test a bindGroupLayout with access 'read-write' and a format enabled by\n  'texture-formats-tier2' fails if the feature is not enabled and succeeds\n  if it is enabled.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kTextureFormatsTier2EnablesStorageReadWrite)\n      .combine('enable_feature', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier2');\n    }\n  })\n  .fn(t => {\n    const { format, enable_feature } = t.params;\n\n    t.expectValidationError(() => {\n      t.device.createBindGroupLayout({\n        entries: [\n          {\n            binding: 0,\n            visibility: GPUShaderStage.COMPUTE,\n            storageTexture: {\n              access: 'read-write',\n              format,\n            },\n          },\n        ],\n      });\n    }, !enable_feature);\n  });\n\ng.test('pipeline_auto_layout,storage_texture')\n  .desc(\n    `\n  Test creating a pipeline with auto layout with a storage texture binding format enabled by\n  'texture-formats-tier2' fails if the feature is not enabled.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kTextureFormatsTier2EnablesStorageReadWrite)\n      .combine('enable_feature', [true, false])\n      .beginSubcases()\n      .combine('isAsync', [false, true] as const)\n      .combine('type', ['compute', 'render'] as const)\n  )\n  .beforeAllSubcases(t => {\n    const { enable_feature } = t.params;\n    if (enable_feature) {\n      t.selectDeviceOrSkipTestCase('texture-formats-tier2');\n    }\n  })\n  .fn(t => {\n    const { format, enable_feature, isAsync, type } = t.params;\n\n    const code = `\n      @group(0) @binding(0) var tex1d: texture_storage_1d<${format}, read_write>;\n      @group(0) @binding(1) var tex2d: texture_storage_1d<${format}, read_write>;\n      @group(0) @binding(2) var tex3d: texture_storage_1d<${format}, read_write>;\n\n      fn useTextures() {\n        _ = tex1d;\n        _ = tex2d;\n        _ = tex3d;\n      }\n\n      @compute @workgroup_size(1) fn cs() {\n        useTextures();\n      }\n\n      @vertex fn vs() -> @builtin(position) vec4f {\n        return vec4f(0);\n      }\n      @fragment fn fs() -> @location(0) vec4f {\n        useTextures();\n        return vec4f(0);\n      }\n    `;\n\n    const module = t.device.createShaderModule({ code });\n\n    if (type === 'compute') {\n      const descriptor: GPUComputePipelineDescriptor = {\n        layout: 'auto',\n        compute: { module },\n      };\n      vtu.doCreateComputePipelineTest(t, isAsync, enable_feature, descriptor);\n    } else {\n      const descriptor: GPURenderPipelineDescriptor = {\n        layout: 'auto',\n        vertex: { module },\n        fragment: { module, targets: [{ format: 'rgba8unorm' }] },\n      };\n      vtu.doCreateRenderPipelineTest(t, isAsync, enable_feature, descriptor);\n    }\n  });\n"],"mappings":"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"}