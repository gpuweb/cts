{"version":3,"file":"error_scope.spec.js","names":["description","makeTestGroup","kErrorScopeFilters","kGeneratableErrorScopeFilters","ErrorTest","g","test","desc","params","u","combine","fn","t","errorType","errorFilter","device","pushErrorScope","uncapturedErrorEvent","expectUncapturedError","generateError","expect","isInstanceOfError","error","popErrorScope","promise","shouldReject","allowMissingStack","stackDepth","unmatchedFilters","filter","i","length","chunkedPopManyErrorScopes","numErrors","promises","push","errors","Promise","all","every","e"],"sources":["../../../../src/webgpu/api/validation/error_scope.spec.ts"],"sourcesContent":["export const description = `\nError scope validation tests.\n\nNote these must create their own device, not use GPUTest (that one already has error scopes on it).\n\nTODO: (POSTV1) Test error scopes of different threads and make sure they go to the right place.\nTODO: (POSTV1) Test that unhandled errors go the right device, and nowhere if the device was dropped.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { kErrorScopeFilters, kGeneratableErrorScopeFilters } from '../../capability_info.js';\nimport { ErrorTest } from '../../error_test.js';\n\nexport const g = makeTestGroup(ErrorTest);\n\ng.test('simple')\n  .desc(\n    `\nTests that error scopes catches their expected errors, firing an uncaptured error event otherwise.\n\n- Same error and error filter (popErrorScope should return the error)\n- Different error from filter (uncaptured error should result)\n    `\n  )\n  .params(u =>\n    u.combine('errorType', kGeneratableErrorScopeFilters).combine('errorFilter', kErrorScopeFilters)\n  )\n  .fn(async t => {\n    const { errorType, errorFilter } = t.params;\n    t.device.pushErrorScope(errorFilter);\n\n    if (errorType !== errorFilter) {\n      // Different error case\n      const uncapturedErrorEvent = await t.expectUncapturedError(() => {\n        t.generateError(errorType);\n      });\n      t.expect(t.isInstanceOfError(errorType, uncapturedErrorEvent.error));\n\n      const error = await t.device.popErrorScope();\n      t.expect(error === null);\n    } else {\n      // Same error as filter\n      t.generateError(errorType);\n      const error = await t.device.popErrorScope();\n      t.expect(t.isInstanceOfError(errorType, error));\n    }\n  });\n\ng.test('empty')\n  .desc(\n    `\nTests that popping an empty error scope stack should reject.\n    `\n  )\n  .fn(t => {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise, { allowMissingStack: true });\n  });\n\ng.test('parent_scope')\n  .desc(\n    `\nTests that an error bubbles to the correct parent scope.\n\n- Different error types as the parent scope\n- Different depths of non-capturing filters for the generated error\n    `\n  )\n  .params(u =>\n    u\n      .combine('errorFilter', kGeneratableErrorScopeFilters)\n      .combine('stackDepth', [1, 10, 100, 1000])\n  )\n  .fn(async t => {\n    const { errorFilter, stackDepth } = t.params;\n    t.device.pushErrorScope(errorFilter);\n\n    // Push a bunch of error filters onto the stack (none that match errorFilter)\n    const unmatchedFilters = kErrorScopeFilters.filter(filter => {\n      return filter !== errorFilter;\n    });\n    for (let i = 0; i < stackDepth; i++) {\n      t.device.pushErrorScope(unmatchedFilters[i % unmatchedFilters.length]);\n    }\n\n    // Cause the error and then pop all the unrelated filters.\n    t.generateError(errorFilter);\n\n    await t.chunkedPopManyErrorScopes(stackDepth);\n\n    // Finally the actual error should have been caught by the parent scope.\n    const error = await t.device.popErrorScope();\n    t.expect(t.isInstanceOfError(errorFilter, error));\n  });\n\ng.test('current_scope')\n  .desc(\n    `\nTests that an error does not bubbles to parent scopes when local scope matches.\n\n- Different error types as the current scope\n- Different depths of non-capturing filters for the generated error\n    `\n  )\n  .params(u =>\n    u\n      .combine('errorFilter', kGeneratableErrorScopeFilters)\n      .combine('stackDepth', [1, 10, 100, 1000, 100000])\n  )\n  .fn(async t => {\n    const { errorFilter, stackDepth } = t.params;\n\n    // Push a bunch of error filters onto the stack\n    for (let i = 0; i < stackDepth; i++) {\n      t.device.pushErrorScope(kErrorScopeFilters[i % kErrorScopeFilters.length]);\n    }\n\n    // Current scope should catch the error immediately.\n    t.device.pushErrorScope(errorFilter);\n    t.generateError(errorFilter);\n    const error = await t.device.popErrorScope();\n    t.expect(t.isInstanceOfError(errorFilter, error));\n\n    // Remaining scopes shouldn't catch anything.\n    await t.chunkedPopManyErrorScopes(stackDepth);\n  });\n\ng.test('balanced_siblings')\n  .desc(\n    `\nTests that sibling error scopes need to be balanced.\n\n- Different error types as the current scope\n- Different number of sibling errors\n    `\n  )\n  .params(u =>\n    u.combine('errorFilter', kErrorScopeFilters).combine('numErrors', [1, 10, 100, 1000])\n  )\n  .fn(async t => {\n    const { errorFilter, numErrors } = t.params;\n\n    const promises = [];\n    for (let i = 0; i < numErrors; i++) {\n      t.device.pushErrorScope(errorFilter);\n      promises.push(t.device.popErrorScope());\n    }\n\n    {\n      // Trying to pop an additional non-existing scope should reject.\n      const promise = t.device.popErrorScope();\n      t.shouldReject('OperationError', promise, { allowMissingStack: true });\n    }\n\n    const errors = await Promise.all(promises);\n    t.expect(errors.every(e => e === null));\n  });\n\ng.test('balanced_nesting')\n  .desc(\n    `\nTests that nested error scopes need to be balanced.\n\n- Different error types as the current scope\n- Different number of nested errors\n    `\n  )\n  .params(u =>\n    u.combine('errorFilter', kErrorScopeFilters).combine('numErrors', [1, 10, 100, 1000])\n  )\n  .fn(async t => {\n    const { errorFilter, numErrors } = t.params;\n\n    for (let i = 0; i < numErrors; i++) {\n      t.device.pushErrorScope(errorFilter);\n    }\n\n    const promises = [];\n    for (let i = 0; i < numErrors; i++) {\n      promises.push(t.device.popErrorScope());\n    }\n    const errors = await Promise.all(promises);\n    t.expect(errors.every(e => e === null));\n\n    {\n      // Trying to pop an additional non-existing scope should reject.\n      const promise = t.device.popErrorScope();\n      t.shouldReject('OperationError', promise, { allowMissingStack: true });\n    }\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,yCAAyC;AACvE,SAASC,kBAAkB,EAAEC,6BAA6B,QAAQ,0BAA0B;AAC5F,SAASC,SAAS,QAAQ,qBAAqB;;AAE/C,OAAO,MAAMC,CAAC,GAAGJ,aAAa,CAACG,SAAS,CAAC;;AAEzCC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC;AACbC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,WAAW,EAAEP,6BAA6B,CAAC,CAACO,OAAO,CAAC,aAAa,EAAER,kBAAkB;AACjG,CAAC;AACAS,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAM,EAAEC,SAAS,EAAEC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACJ,MAAM;EAC3CI,CAAC,CAACG,MAAM,CAACC,cAAc,CAACF,WAAW,CAAC;;EAEpC,IAAID,SAAS,KAAKC,WAAW,EAAE;IAC7B;IACA,MAAMG,oBAAoB,GAAG,MAAML,CAAC,CAACM,qBAAqB,CAAC,MAAM;MAC/DN,CAAC,CAACO,aAAa,CAACN,SAAS,CAAC;IAC5B,CAAC,CAAC;IACFD,CAAC,CAACQ,MAAM,CAACR,CAAC,CAACS,iBAAiB,CAACR,SAAS,EAAEI,oBAAoB,CAACK,KAAK,CAAC,CAAC;;IAEpE,MAAMA,KAAK,GAAG,MAAMV,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC;IAC5CX,CAAC,CAACQ,MAAM,CAACE,KAAK,KAAK,IAAI,CAAC;EAC1B,CAAC,MAAM;IACL;IACAV,CAAC,CAACO,aAAa,CAACN,SAAS,CAAC;IAC1B,MAAMS,KAAK,GAAG,MAAMV,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC;IAC5CX,CAAC,CAACQ,MAAM,CAACR,CAAC,CAACS,iBAAiB,CAACR,SAAS,EAAES,KAAK,CAAC,CAAC;EACjD;AACF,CAAC,CAAC;;AAEJjB,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC;AACZC,IAAI;EACF;AACL;AACA;AACE,CAAC;AACAI,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMY,OAAO,GAAGZ,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC;EACxCX,CAAC,CAACa,YAAY,CAAC,gBAAgB,EAAED,OAAO,EAAE,EAAEE,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC;;AAEJrB,CAAC,CAACC,IAAI,CAAC,cAAc,CAAC;AACnBC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAEP,6BAA6B,CAAC;AACrDO,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC;AAC7C,CAAC;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAM,EAAEE,WAAW,EAAEa,UAAU,CAAC,CAAC,GAAGf,CAAC,CAACJ,MAAM;EAC5CI,CAAC,CAACG,MAAM,CAACC,cAAc,CAACF,WAAW,CAAC;;EAEpC;EACA,MAAMc,gBAAgB,GAAG1B,kBAAkB,CAAC2B,MAAM,CAAC,CAAAA,MAAM,KAAI;IAC3D,OAAOA,MAAM,KAAKf,WAAW;EAC/B,CAAC,CAAC;EACF,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,EAAEG,CAAC,EAAE,EAAE;IACnClB,CAAC,CAACG,MAAM,CAACC,cAAc,CAACY,gBAAgB,CAACE,CAAC,GAAGF,gBAAgB,CAACG,MAAM,CAAC,CAAC;EACxE;;EAEA;EACAnB,CAAC,CAACO,aAAa,CAACL,WAAW,CAAC;;EAE5B,MAAMF,CAAC,CAACoB,yBAAyB,CAACL,UAAU,CAAC;;EAE7C;EACA,MAAML,KAAK,GAAG,MAAMV,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC;EAC5CX,CAAC,CAACQ,MAAM,CAACR,CAAC,CAACS,iBAAiB,CAACP,WAAW,EAAEQ,KAAK,CAAC,CAAC;AACnD,CAAC,CAAC;;AAEJjB,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;AACpBC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,aAAa,EAAEP,6BAA6B,CAAC;AACrDO,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC;AACrD,CAAC;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAM,EAAEE,WAAW,EAAEa,UAAU,CAAC,CAAC,GAAGf,CAAC,CAACJ,MAAM;;EAE5C;EACA,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,EAAEG,CAAC,EAAE,EAAE;IACnClB,CAAC,CAACG,MAAM,CAACC,cAAc,CAACd,kBAAkB,CAAC4B,CAAC,GAAG5B,kBAAkB,CAAC6B,MAAM,CAAC,CAAC;EAC5E;;EAEA;EACAnB,CAAC,CAACG,MAAM,CAACC,cAAc,CAACF,WAAW,CAAC;EACpCF,CAAC,CAACO,aAAa,CAACL,WAAW,CAAC;EAC5B,MAAMQ,KAAK,GAAG,MAAMV,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC;EAC5CX,CAAC,CAACQ,MAAM,CAACR,CAAC,CAACS,iBAAiB,CAACP,WAAW,EAAEQ,KAAK,CAAC,CAAC;;EAEjD;EACA,MAAMV,CAAC,CAACoB,yBAAyB,CAACL,UAAU,CAAC;AAC/C,CAAC,CAAC;;AAEJtB,CAAC,CAACC,IAAI,CAAC,mBAAmB,CAAC;AACxBC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAER,kBAAkB,CAAC,CAACQ,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC;AACtF,CAAC;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAM,EAAEE,WAAW,EAAEmB,SAAS,CAAC,CAAC,GAAGrB,CAAC,CAACJ,MAAM;;EAE3C,MAAM0B,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,SAAS,EAAEH,CAAC,EAAE,EAAE;IAClClB,CAAC,CAACG,MAAM,CAACC,cAAc,CAACF,WAAW,CAAC;IACpCoB,QAAQ,CAACC,IAAI,CAACvB,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC,CAAC;EACzC;;EAEA;IACE;IACA,MAAMC,OAAO,GAAGZ,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC;IACxCX,CAAC,CAACa,YAAY,CAAC,gBAAgB,EAAED,OAAO,EAAE,EAAEE,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;EACxE;;EAEA,MAAMU,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAC1CtB,CAAC,CAACQ,MAAM,CAACgB,MAAM,CAACG,KAAK,CAAC,CAAAC,CAAC,KAAIA,CAAC,KAAK,IAAI,CAAC,CAAC;AACzC,CAAC,CAAC;;AAEJnC,CAAC,CAACC,IAAI,CAAC,kBAAkB,CAAC;AACvBC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAO,CAAC,aAAa,EAAER,kBAAkB,CAAC,CAACQ,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC;AACtF,CAAC;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAM,EAAEE,WAAW,EAAEmB,SAAS,CAAC,CAAC,GAAGrB,CAAC,CAACJ,MAAM;;EAE3C,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,SAAS,EAAEH,CAAC,EAAE,EAAE;IAClClB,CAAC,CAACG,MAAM,CAACC,cAAc,CAACF,WAAW,CAAC;EACtC;;EAEA,MAAMoB,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,SAAS,EAAEH,CAAC,EAAE,EAAE;IAClCI,QAAQ,CAACC,IAAI,CAACvB,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC,CAAC;EACzC;EACA,MAAMa,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAC1CtB,CAAC,CAACQ,MAAM,CAACgB,MAAM,CAACG,KAAK,CAAC,CAAAC,CAAC,KAAIA,CAAC,KAAK,IAAI,CAAC,CAAC;;EAEvC;IACE;IACA,MAAMhB,OAAO,GAAGZ,CAAC,CAACG,MAAM,CAACQ,aAAa,CAAC,CAAC;IACxCX,CAAC,CAACa,YAAY,CAAC,gBAAgB,EAAED,OAAO,EAAE,EAAEE,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;EACxE;AACF,CAAC,CAAC"}