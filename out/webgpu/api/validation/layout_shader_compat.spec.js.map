{"version":3,"file":"layout_shader_compat.spec.js","names":["description","makeTestGroup","kShaderStageCombinations","kShaderStages","GPUConst","AllFeaturesMaxLimitsValidationTest","kBindableResources","bindGroupLayoutEntryContents","compareSamp","sampler","type","filtSamp","nonFiltSamp","sampledTex","texture","sampleType","sampledTexMS","multisampled","storageBuf","buffer","readonlyStorageBuf","uniformBuf","readonlyStorageTex","storageTexture","format","access","writeonlyStorageTex","readwriteStorageTex","F","createPipelineLayout","bindingInPipelineLayout","visibility","device","bindGroupLayouts","createBindGroupLayout","entries","binding","GetBindableResourceShaderDeclaration","bindableResource","BindingResourceCompatibleWithShaderStages","bindingResource","shaderStages","ShaderStage","VERTEX","g","test","desc","params","u","combine","beginSubcases","unless","p","bindingInShader","pipelineLayoutVisibility","shaderStageWithBinding","fn","t","isBindingStaticallyUsed","isCompatibility","bindingUsedWithVertexStage","GPUShaderStage","bindingUsedWithFragmentStage","FRAGMENT","bindingIsStorageBuffer","bindingIsStorageTexture","skipIf","limits","maxStorageBuffersInVertexStage","maxStorageTexturesInVertexStage","maxStorageBuffersInFragmentStage","maxStorageTexturesInFragmentStage","layout","bindResourceDeclaration","staticallyUseBinding","isAsync","success","COMPUTE","computeShader","doCreateComputePipelineTest","compute","module","createShaderModule","code","vertexShader","doCreateRenderPipelineTest","vertex","depthStencil","depthWriteEnabled","depthCompare","fragmentShader","fragment","targets"],"sources":["../../../../src/webgpu/api/validation/layout_shader_compat.spec.ts"],"sourcesContent":["export const description = `\nTODO:\n- interface matching between pipeline layout and shader\n    - x= bind group index values, binding index values, multiple bindings\n    - x= {superset, subset}\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport {\n  kShaderStageCombinations,\n  kShaderStages,\n  ValidBindableResource,\n} from '../../capability_info.js';\nimport { GPUConst } from '../../constants.js';\n\nimport { AllFeaturesMaxLimitsValidationTest } from './validation_test.js';\n\ntype BindableResourceType = ValidBindableResource | 'readonlyStorageBuf';\nconst kBindableResources = [\n  'uniformBuf',\n  'storageBuf',\n  'readonlyStorageBuf',\n  'filtSamp',\n  'nonFiltSamp',\n  'compareSamp',\n  'sampledTex',\n  'sampledTexMS',\n  'readonlyStorageTex',\n  'writeonlyStorageTex',\n  'readwriteStorageTex',\n] as const;\n\nconst bindGroupLayoutEntryContents = {\n  compareSamp: {\n    sampler: {\n      type: 'comparison',\n    },\n  },\n  filtSamp: {\n    sampler: {\n      type: 'filtering',\n    },\n  },\n  nonFiltSamp: {\n    sampler: {\n      type: 'non-filtering',\n    },\n  },\n  sampledTex: {\n    texture: {\n      sampleType: 'unfilterable-float',\n    },\n  },\n  sampledTexMS: {\n    texture: {\n      sampleType: 'unfilterable-float',\n      multisampled: true,\n    },\n  },\n  storageBuf: {\n    buffer: {\n      type: 'storage',\n    },\n  },\n  readonlyStorageBuf: {\n    buffer: {\n      type: 'read-only-storage',\n    },\n  },\n  uniformBuf: {\n    buffer: {\n      type: 'uniform',\n    },\n  },\n  readonlyStorageTex: {\n    storageTexture: {\n      format: 'r32float',\n      access: 'read-only',\n    },\n  },\n  writeonlyStorageTex: {\n    storageTexture: {\n      format: 'r32float',\n      access: 'write-only',\n    },\n  },\n  readwriteStorageTex: {\n    storageTexture: {\n      format: 'r32float',\n      access: 'read-write',\n    },\n  },\n} as const;\n\nclass F extends AllFeaturesMaxLimitsValidationTest {\n  createPipelineLayout(\n    bindingInPipelineLayout: BindableResourceType,\n    visibility: number\n  ): GPUPipelineLayout {\n    return this.device.createPipelineLayout({\n      bindGroupLayouts: [\n        this.device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility,\n              ...bindGroupLayoutEntryContents[bindingInPipelineLayout],\n            },\n          ],\n        }),\n      ],\n    });\n  }\n\n  GetBindableResourceShaderDeclaration(bindableResource: BindableResourceType): string {\n    switch (bindableResource) {\n      case 'compareSamp':\n        return 'var tmp : sampler_comparison';\n      case 'filtSamp':\n      case 'nonFiltSamp':\n        return 'var tmp : sampler';\n      case 'sampledTex':\n        return 'var tmp : texture_2d<f32>';\n      case 'sampledTexMS':\n        return 'var tmp : texture_multisampled_2d<f32>';\n      case 'storageBuf':\n        return 'var<storage, read_write> tmp : vec4u';\n      case 'readonlyStorageBuf':\n        return 'var<storage, read> tmp : vec4u';\n      case 'uniformBuf':\n        return 'var<uniform> tmp : vec4u;';\n      case 'readonlyStorageTex':\n        return 'var tmp : texture_storage_2d<r32float, read>';\n      case 'writeonlyStorageTex':\n        return 'var tmp : texture_storage_2d<r32float, write>';\n      case 'readwriteStorageTex':\n        return 'var tmp : texture_storage_2d<r32float, read_write>';\n    }\n  }\n}\n\nconst BindingResourceCompatibleWithShaderStages = function (\n  bindingResource: BindableResourceType,\n  shaderStages: number\n): boolean {\n  if ((shaderStages & GPUConst.ShaderStage.VERTEX) > 0) {\n    switch (bindingResource) {\n      case 'writeonlyStorageTex':\n      case 'readwriteStorageTex':\n      case 'storageBuf':\n        return false;\n      default:\n        break;\n    }\n  }\n  return true;\n};\n\nexport const g = makeTestGroup(F);\n\ng.test('pipeline_layout_shader_exact_match')\n  .desc(\n    `\n  Test that the binding type in the pipeline layout must match the related declaration in shader.\n  Note that read-write storage textures in the pipeline layout can match write-only storage textures\n  in the shader.\n  `\n  )\n  .params(u =>\n    u\n      .combine('bindingInPipelineLayout', kBindableResources)\n      .combine('bindingInShader', kBindableResources)\n      .beginSubcases()\n      .combine('pipelineLayoutVisibility', kShaderStageCombinations)\n      .combine('shaderStageWithBinding', kShaderStages)\n      .combine('isBindingStaticallyUsed', [true, false] as const)\n      .unless(\n        p =>\n          // We don't test using non-filtering sampler in shader because it has the same declaration\n          // as filtering sampler.\n          p.bindingInShader === 'nonFiltSamp' ||\n          !BindingResourceCompatibleWithShaderStages(\n            p.bindingInPipelineLayout,\n            p.pipelineLayoutVisibility\n          ) ||\n          !BindingResourceCompatibleWithShaderStages(p.bindingInShader, p.shaderStageWithBinding)\n      )\n  )\n  .fn(t => {\n    const {\n      bindingInPipelineLayout,\n      bindingInShader,\n      pipelineLayoutVisibility,\n      shaderStageWithBinding,\n      isBindingStaticallyUsed,\n    } = t.params;\n\n    if (t.isCompatibility) {\n      const bindingUsedWithVertexStage =\n        (shaderStageWithBinding & GPUShaderStage.VERTEX) !== 0 ||\n        (pipelineLayoutVisibility & GPUShaderStage.VERTEX) !== 0;\n      const bindingUsedWithFragmentStage =\n        (shaderStageWithBinding & GPUShaderStage.FRAGMENT) !== 0 ||\n        (pipelineLayoutVisibility & GPUShaderStage.FRAGMENT) !== 0;\n      const bindingIsStorageBuffer =\n        bindingInPipelineLayout === 'readonlyStorageBuf' ||\n        bindingInPipelineLayout === 'storageBuf';\n      const bindingIsStorageTexture =\n        bindingInPipelineLayout === 'readonlyStorageTex' ||\n        bindingInPipelineLayout === 'readwriteStorageTex' ||\n        bindingInPipelineLayout === 'writeonlyStorageTex';\n      t.skipIf(\n        bindingUsedWithVertexStage &&\n          bindingIsStorageBuffer &&\n          t.device.limits.maxStorageBuffersInVertexStage === 0,\n        'Storage buffers can not be used in vertex shaders because maxStorageBuffersInVertexStage === 0'\n      );\n      t.skipIf(\n        bindingUsedWithVertexStage &&\n          bindingIsStorageTexture &&\n          t.device.limits.maxStorageTexturesInVertexStage === 0,\n        'Storage textures can not be used in vertex shaders because maxStorageTexturesInVertexStage === 0'\n      );\n      t.skipIf(\n        bindingUsedWithFragmentStage &&\n          bindingIsStorageBuffer &&\n          t.device.limits.maxStorageBuffersInFragmentStage === 0,\n        'Storage buffers can not be used in fragment shaders because maxStorageBuffersInFragmentStage === 0'\n      );\n      t.skipIf(\n        bindingUsedWithFragmentStage &&\n          bindingIsStorageTexture &&\n          t.device.limits.maxStorageTexturesInFragmentStage === 0,\n        'Storage textures can not be used in fragment shaders because maxStorageTexturesInFragmentStage === 0'\n      );\n    }\n\n    const layout = t.createPipelineLayout(bindingInPipelineLayout, pipelineLayoutVisibility);\n    const bindResourceDeclaration = `@group(0) @binding(0) ${t.GetBindableResourceShaderDeclaration(\n      bindingInShader\n    )}`;\n    const staticallyUseBinding = isBindingStaticallyUsed ? '_ = tmp; ' : '';\n    const isAsync = false;\n\n    let success = true;\n    if (isBindingStaticallyUsed) {\n      success = bindingInPipelineLayout === bindingInShader;\n\n      // Filtering and non-filtering both have the same shader declaration.\n      success ||= bindingInPipelineLayout === 'nonFiltSamp' && bindingInShader === 'filtSamp';\n\n      // Promoting storage textures that are read-write in the layout can be readonly in the shader.\n      success ||=\n        bindingInPipelineLayout === 'readwriteStorageTex' &&\n        bindingInShader === 'writeonlyStorageTex';\n\n      // The shader using the resource must be included in the visibility in the layout.\n      success &&= (pipelineLayoutVisibility & shaderStageWithBinding) > 0;\n    }\n\n    switch (shaderStageWithBinding) {\n      case GPUConst.ShaderStage.COMPUTE: {\n        const computeShader = `\n        ${bindResourceDeclaration};\n        @compute @workgroup_size(1)\n        fn main() {\n          ${staticallyUseBinding}\n        }\n        `;\n        t.doCreateComputePipelineTest(isAsync, success, {\n          layout,\n          compute: {\n            module: t.device.createShaderModule({\n              code: computeShader,\n            }),\n          },\n        });\n        break;\n      }\n      case GPUConst.ShaderStage.VERTEX: {\n        const vertexShader = `\n        ${bindResourceDeclaration};\n        @vertex\n        fn main() -> @builtin(position) vec4f {\n          ${staticallyUseBinding}\n          return vec4f();\n        }\n        `;\n        t.doCreateRenderPipelineTest(isAsync, success, {\n          layout,\n          vertex: {\n            module: t.device.createShaderModule({\n              code: vertexShader,\n            }),\n          },\n          depthStencil: { format: 'depth32float', depthWriteEnabled: true, depthCompare: 'always' },\n        });\n        break;\n      }\n      case GPUConst.ShaderStage.FRAGMENT: {\n        const fragmentShader = `\n        ${bindResourceDeclaration};\n        @fragment\n        fn main() -> @location(0) vec4f {\n          ${staticallyUseBinding}\n          return vec4f();\n        }\n        `;\n        t.doCreateRenderPipelineTest(isAsync, success, {\n          layout,\n          vertex: {\n            module: t.device.createShaderModule({\n              code: `\n                @vertex\n                fn main() -> @builtin(position) vec4f {\n                  return vec4f();\n                }`,\n            }),\n          },\n          fragment: {\n            module: t.device.createShaderModule({\n              code: fragmentShader,\n            }),\n            targets: [\n              {\n                format: 'rgba8unorm',\n              },\n            ],\n          },\n        });\n        break;\n      }\n    }\n  });\n"],"mappings":"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"}