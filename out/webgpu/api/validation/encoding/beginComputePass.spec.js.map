{"version":3,"file":"beginComputePass.spec.js","names":["description","makeTestGroup","kQueryTypes","AllFeaturesMaxLimitsValidationTest","F","tryComputePass","success","descriptor","encoder","device","createCommandEncoder","computePass","beginComputePass","end","expectValidationError","finish","g","test","desc","params","u","combine","fn","t","queryType","skipIfDeviceDoesNotSupportQueryType","isValid","timestampWrites","querySet","createQuerySetTracked","type","count","beginningOfPassWriteIndex","endOfPassWriteIndex","querySetState","createQuerySetWithState","paramsSubcasesOnly","undefined","querySetCount","beforeAllSubcases","usesMismatchedDevice","mismatched","sourceDevice","mismatchedDevice","timestampQuerySet","trackForCleanup","createQuerySet"],"sources":["../../../../../src/webgpu/api/validation/encoding/beginComputePass.spec.ts"],"sourcesContent":["export const description = `\nTests for validation in beginComputePass and GPUComputePassDescriptor as its optional descriptor.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kQueryTypes } from '../../../capability_info.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../validation_test.js';\n\nclass F extends AllFeaturesMaxLimitsValidationTest {\n  tryComputePass(success: boolean, descriptor: GPUComputePassDescriptor): void {\n    const encoder = this.device.createCommandEncoder();\n    const computePass = encoder.beginComputePass(descriptor);\n    computePass.end();\n\n    this.expectValidationError(() => {\n      encoder.finish();\n    }, !success);\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('timestampWrites,query_set_type')\n  .desc(\n    `\n  Test that all entries of the timestampWrites must have type 'timestamp'. If all query types are\n  not 'timestamp' in GPUComputePassDescriptor, a validation error should be generated.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('queryType', kQueryTypes)\n  )\n  .fn(t => {\n    const { queryType } = t.params;\n    t.skipIfDeviceDoesNotSupportQueryType(queryType);\n\n    const isValid = queryType === 'timestamp';\n\n    const timestampWrites = {\n      querySet: t.createQuerySetTracked({ type: queryType, count: 2 }),\n      beginningOfPassWriteIndex: 0,\n      endOfPassWriteIndex: 1,\n    };\n\n    const descriptor = {\n      timestampWrites,\n    };\n\n    t.tryComputePass(isValid, descriptor);\n  });\n\ng.test('timestampWrites,invalid_query_set')\n  .desc(`Tests that timestampWrite that has an invalid query set generates a validation error.`)\n  .params(u => u.combine('querySetState', ['valid', 'invalid'] as const))\n  .fn(t => {\n    t.skipIfDeviceDoesNotSupportQueryType('timestamp');\n    const { querySetState } = t.params;\n\n    const querySet = t.createQuerySetWithState(querySetState, {\n      type: 'timestamp',\n      count: 1,\n    });\n\n    const timestampWrites = {\n      querySet,\n      beginningOfPassWriteIndex: 0,\n    };\n\n    const descriptor = {\n      timestampWrites,\n    };\n\n    t.tryComputePass(querySetState === 'valid', descriptor);\n  });\n\ng.test('timestampWrites,query_index')\n  .desc(\n    `Test that querySet.count should be greater than timestampWrite.queryIndex, and that the\n         query indexes are unique.`\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('beginningOfPassWriteIndex', [undefined, 0, 1, 2, 3] as const)\n      .combine('endOfPassWriteIndex', [undefined, 0, 1, 2, 3] as const)\n  )\n  .fn(t => {\n    t.skipIfDeviceDoesNotSupportQueryType('timestamp');\n    const { beginningOfPassWriteIndex, endOfPassWriteIndex } = t.params;\n\n    const querySetCount = 2;\n\n    const timestampWrites = {\n      querySet: t.createQuerySetTracked({ type: 'timestamp', count: querySetCount }),\n      beginningOfPassWriteIndex,\n      endOfPassWriteIndex,\n    };\n\n    const isValid =\n      beginningOfPassWriteIndex !== endOfPassWriteIndex &&\n      (beginningOfPassWriteIndex === undefined || beginningOfPassWriteIndex < querySetCount) &&\n      (endOfPassWriteIndex === undefined || endOfPassWriteIndex < querySetCount);\n\n    const descriptor = {\n      timestampWrites,\n    };\n\n    t.tryComputePass(isValid, descriptor);\n  });\n\ng.test('timestamp_query_set,device_mismatch')\n  .desc(\n    `\n  Tests beginComputePass cannot be called with a timestamp query set created from another device.\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    t.skipIfDeviceDoesNotSupportQueryType('timestamp');\n    const { mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const timestampQuerySet = t.trackForCleanup(\n      sourceDevice.createQuerySet({\n        type: 'timestamp',\n        count: 1,\n      })\n    );\n\n    const timestampWrites = {\n      querySet: timestampQuerySet,\n      beginningOfPassWriteIndex: 0,\n    };\n\n    const descriptor = {\n      timestampWrites,\n    };\n\n    t.tryComputePass(!mismatched, descriptor);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,kCAAkC,QAAQ,uBAAuB;;AAE1E,MAAMC,CAAC,SAASD,kCAAkC,CAAC;EACjDE,cAAcA,CAACC,OAAgB,EAAEC,UAAoC,EAAQ;IAC3E,MAAMC,OAAO,GAAG,IAAI,CAACC,MAAM,CAACC,oBAAoB,CAAC,CAAC;IAClD,MAAMC,WAAW,GAAGH,OAAO,CAACI,gBAAgB,CAACL,UAAU,CAAC;IACxDI,WAAW,CAACE,GAAG,CAAC,CAAC;;IAEjB,IAAI,CAACC,qBAAqB,CAAC,MAAM;MAC/BN,OAAO,CAACO,MAAM,CAAC,CAAC;IAClB,CAAC,EAAE,CAACT,OAAO,CAAC;EACd;AACF;;AAEA,OAAO,MAAMU,CAAC,GAAGf,aAAa,CAACG,CAAC,CAAC;;AAEjCY,CAAC,CAACC,IAAI,CAAC,gCAAgC,CAAC;AACrCC,IAAI;EACF;AACL;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAAC;AAAA,CACCC,OAAO,CAAC,WAAW,EAAEnB,WAAW;AACrC,CAAC;AACAoB,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAM,EAAEC,SAAS,CAAC,CAAC,GAAGD,CAAC,CAACJ,MAAM;EAC9BI,CAAC,CAACE,mCAAmC,CAACD,SAAS,CAAC;;EAEhD,MAAME,OAAO,GAAGF,SAAS,KAAK,WAAW;;EAEzC,MAAMG,eAAe,GAAG;IACtBC,QAAQ,EAAEL,CAAC,CAACM,qBAAqB,CAAC,EAAEC,IAAI,EAAEN,SAAS,EAAEO,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IAChEC,yBAAyB,EAAE,CAAC;IAC5BC,mBAAmB,EAAE;EACvB,CAAC;;EAED,MAAM1B,UAAU,GAAG;IACjBoB;EACF,CAAC;;EAEDJ,CAAC,CAAClB,cAAc,CAACqB,OAAO,EAAEnB,UAAU,CAAC;AACvC,CAAC,CAAC;;AAEJS,CAAC,CAACC,IAAI,CAAC,mCAAmC,CAAC;AACxCC,IAAI,CAAE,uFAAsF,CAAC;AAC7FC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,eAAe,EAAE,CAAC,OAAO,EAAE,SAAS,CAAU,CAAC,CAAC;AACtEC,EAAE,CAAC,CAAAC,CAAC,KAAI;EACPA,CAAC,CAACE,mCAAmC,CAAC,WAAW,CAAC;EAClD,MAAM,EAAES,aAAa,CAAC,CAAC,GAAGX,CAAC,CAACJ,MAAM;;EAElC,MAAMS,QAAQ,GAAGL,CAAC,CAACY,uBAAuB,CAACD,aAAa,EAAE;IACxDJ,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF,MAAMJ,eAAe,GAAG;IACtBC,QAAQ;IACRI,yBAAyB,EAAE;EAC7B,CAAC;;EAED,MAAMzB,UAAU,GAAG;IACjBoB;EACF,CAAC;;EAEDJ,CAAC,CAAClB,cAAc,CAAC6B,aAAa,KAAK,OAAO,EAAE3B,UAAU,CAAC;AACzD,CAAC,CAAC;;AAEJS,CAAC,CAACC,IAAI,CAAC,6BAA6B,CAAC;AAClCC,IAAI;EACF;AACL;AACE,CAAC;AACAkB,kBAAkB,CAAC,CAAAhB,CAAC;AACnBA,CAAC,CAAC;AAAA,CACCC,OAAO,CAAC,2BAA2B,EAAE,CAACgB,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU,CAAC;AACtEhB,OAAO,CAAC,qBAAqB,EAAE,CAACgB,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU;AACpE,CAAC;AACAf,EAAE,CAAC,CAAAC,CAAC,KAAI;EACPA,CAAC,CAACE,mCAAmC,CAAC,WAAW,CAAC;EAClD,MAAM,EAAEO,yBAAyB,EAAEC,mBAAmB,CAAC,CAAC,GAAGV,CAAC,CAACJ,MAAM;;EAEnE,MAAMmB,aAAa,GAAG,CAAC;;EAEvB,MAAMX,eAAe,GAAG;IACtBC,QAAQ,EAAEL,CAAC,CAACM,qBAAqB,CAAC,EAAEC,IAAI,EAAE,WAAW,EAAEC,KAAK,EAAEO,aAAa,CAAC,CAAC,CAAC;IAC9EN,yBAAyB;IACzBC;EACF,CAAC;;EAED,MAAMP,OAAO;EACXM,yBAAyB,KAAKC,mBAAmB;EAChDD,yBAAyB,KAAKK,SAAS,IAAIL,yBAAyB,GAAGM,aAAa,CAAC;EACrFL,mBAAmB,KAAKI,SAAS,IAAIJ,mBAAmB,GAAGK,aAAa,CAAC;;EAE5E,MAAM/B,UAAU,GAAG;IACjBoB;EACF,CAAC;;EAEDJ,CAAC,CAAClB,cAAc,CAACqB,OAAO,EAAEnB,UAAU,CAAC;AACvC,CAAC,CAAC;;AAEJS,CAAC,CAACC,IAAI,CAAC,qCAAqC,CAAC;AAC1CC,IAAI;EACF;AACL;AACA;AACE,CAAC;AACAkB,kBAAkB,CAAC,CAAAhB,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/DkB,iBAAiB,CAAC,CAAAhB,CAAC,KAAIA,CAAC,CAACiB,oBAAoB,CAAC,CAAC,CAAC;AAChDlB,EAAE,CAAC,CAAAC,CAAC,KAAI;EACPA,CAAC,CAACE,mCAAmC,CAAC,WAAW,CAAC;EAClD,MAAM,EAAEgB,UAAU,CAAC,CAAC,GAAGlB,CAAC,CAACJ,MAAM;EAC/B,MAAMuB,YAAY,GAAGD,UAAU,GAAGlB,CAAC,CAACoB,gBAAgB,GAAGpB,CAAC,CAACd,MAAM;;EAE/D,MAAMmC,iBAAiB,GAAGrB,CAAC,CAACsB,eAAe;IACzCH,YAAY,CAACI,cAAc,CAAC;MAC1BhB,IAAI,EAAE,WAAW;MACjBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;;EAED,MAAMJ,eAAe,GAAG;IACtBC,QAAQ,EAAEgB,iBAAiB;IAC3BZ,yBAAyB,EAAE;EAC7B,CAAC;;EAED,MAAMzB,UAAU,GAAG;IACjBoB;EACF,CAAC;;EAEDJ,CAAC,CAAClB,cAAc,CAAC,CAACoC,UAAU,EAAElC,UAAU,CAAC;AAC3C,CAAC,CAAC"}