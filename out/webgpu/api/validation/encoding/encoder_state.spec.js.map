{"version":3,"file":"encoder_state.spec.js","names":["description","makeTestGroup","objectEquals","AllFeaturesMaxLimitsValidationTest","F","beginRenderPass","commandEncoder","view","colorAttachments","clearValue","r","g","b","a","loadOp","storeOp","createAttachmentTextureView","texture","createTextureTracked","format","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","RENDER_ATTACHMENT","createView","test","desc","params","u","combine","beginSubcases","unless","p","firstPassEnd","endPasses","includes","fn","t","pass0Type","pass1Type","encoder","device","createCommandEncoder","firstPass","beginComputePass","end","secondPass","passes","index","valid","expectValidationError","finish","prePassType","IsEncoderFinished","callCmd","pass","insertDebugMarker","paramsSubcasesOnly","passType","endCount","i","filter","endTwice","secondEndInAnotherPass","pass1"],"sources":["../../../../../src/webgpu/api/validation/encoding/encoder_state.spec.ts"],"sourcesContent":["export const description = `\nTODO:\n- createCommandEncoder\n- non-pass command, or beginPass, during {render, compute} pass\n- {before (control case), after} finish()\n    - x= {finish(), ... all non-pass commands}\n- {before (control case), after} end()\n    - x= {render, compute} pass\n    - x= {finish(), ... all relevant pass commands}\n    - x= {\n        - before endPass (control case)\n        - after endPass (no pass open)\n        - after endPass+beginPass (a new pass of the same type is open)\n        - }\n    - should make whole encoder invalid\n- ?\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { objectEquals } from '../../../../common/util/util.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../validation_test.js';\n\nclass F extends AllFeaturesMaxLimitsValidationTest {\n  beginRenderPass(commandEncoder: GPUCommandEncoder, view: GPUTextureView): GPURenderPassEncoder {\n    return commandEncoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view,\n          clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n  }\n\n  createAttachmentTextureView(): GPUTextureView {\n    const texture = this.createTextureTracked({\n      format: 'rgba8unorm',\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    return texture.createView();\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('pass_end_invalid_order')\n  .desc(\n    `\n  Test that beginning a {compute,render} pass before ending the previous {compute,render} pass\n  causes an error.\n  `\n  )\n  .params(u =>\n    u\n      .combine('pass0Type', ['compute', 'render'])\n      .combine('pass1Type', ['compute', 'render'])\n      .beginSubcases()\n      .combine('firstPassEnd', [true, false])\n      .combine('endPasses', [[], [0], [1], [0, 1], [1, 0]])\n      // Don't end the first pass multiple times (that generates a validation error but doesn't invalidate the encoder)\n      .unless(p => p.firstPassEnd && p.endPasses.includes(0))\n  )\n  .fn(t => {\n    const { pass0Type, pass1Type, firstPassEnd, endPasses } = t.params;\n\n    const view = t.createAttachmentTextureView();\n    const encoder = t.device.createCommandEncoder();\n\n    const firstPass =\n      pass0Type === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder, view);\n\n    if (firstPassEnd) firstPass.end();\n\n    // Begin a second pass before ending the previous pass.\n    const secondPass =\n      pass1Type === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder, view);\n\n    const passes = [firstPass, secondPass];\n    for (const index of endPasses) {\n      passes[index].end();\n    }\n\n    // If {endPasses} is '[1]' and {firstPass} ends, it's a control case.\n    const valid = firstPassEnd && objectEquals(endPasses, [1]);\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, !valid);\n  });\n\ng.test('call_after_successful_finish')\n  .desc(`Test that encoding command after a successful finish generates a validation error.`)\n  .params(u =>\n    u\n      .combine('callCmd', ['beginComputePass', 'beginRenderPass', 'insertDebugMarker'])\n      .beginSubcases()\n      .combine('prePassType', ['compute', 'render', 'no-op'])\n      .combine('IsEncoderFinished', [false, true])\n  )\n  .fn(t => {\n    const { prePassType, IsEncoderFinished, callCmd } = t.params;\n\n    const view = t.createAttachmentTextureView();\n    const encoder = t.device.createCommandEncoder();\n\n    if (prePassType !== 'no-op') {\n      const pass =\n        prePassType === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder, view);\n      pass.end();\n    }\n\n    if (IsEncoderFinished) {\n      encoder.finish();\n    }\n\n    switch (callCmd) {\n      case 'beginComputePass':\n        {\n          let pass: GPUComputePassEncoder;\n          t.expectValidationError(() => {\n            pass = encoder.beginComputePass();\n          }, IsEncoderFinished);\n          t.expectValidationError(() => {\n            pass.end();\n          }, IsEncoderFinished);\n        }\n        break;\n      case 'beginRenderPass':\n        {\n          let pass: GPURenderPassEncoder;\n          t.expectValidationError(() => {\n            pass = t.beginRenderPass(encoder, view);\n          }, IsEncoderFinished);\n          t.expectValidationError(() => {\n            pass.end();\n          }, IsEncoderFinished);\n        }\n        break;\n      case 'insertDebugMarker':\n        t.expectValidationError(() => {\n          encoder.insertDebugMarker('');\n        }, IsEncoderFinished);\n        break;\n    }\n\n    if (!IsEncoderFinished) {\n      encoder.finish();\n    }\n  });\n\ng.test('pass_end_none')\n  .desc(\n    `\n  Test that ending a {compute,render} pass without ending the passes generates a validation error.\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('passType', ['compute', 'render']).combine('endCount', [0, 1]))\n  .fn(t => {\n    const { passType, endCount } = t.params;\n\n    const view = t.createAttachmentTextureView();\n    const encoder = t.device.createCommandEncoder();\n\n    const pass =\n      passType === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder, view);\n\n    for (let i = 0; i < endCount; ++i) {\n      pass.end();\n    }\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, endCount === 0);\n  });\n\ng.test('pass_end_twice,basic')\n  .desc(\n    'Test that ending a {compute,render} pass twice generates a validation error. The parent encoder (command encoder) can be either locked or open.'\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('passType', ['compute', 'render'])\n      // Simply end twice, the parent encoder is open at that time. If the second pass end is in the middle of another pass, the parent encoder is locked. It should generate a validation error in either situation.\n      .combine('endTwice', [false, true])\n      .combine('secondEndInAnotherPass', [false, 'compute', 'render'])\n      .filter(p => p.endTwice || !p.secondEndInAnotherPass)\n  )\n  .fn(t => {\n    const { passType, endTwice, secondEndInAnotherPass } = t.params;\n\n    const view = t.createAttachmentTextureView();\n    const encoder = t.device.createCommandEncoder();\n\n    const pass =\n      passType === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder, view);\n\n    pass.end();\n\n    if (secondEndInAnotherPass) {\n      const pass1 =\n        secondEndInAnotherPass === 'compute'\n          ? encoder.beginComputePass()\n          : t.beginRenderPass(encoder, view);\n\n      t.expectValidationError(() => {\n        pass.end();\n      });\n\n      pass1.end();\n    } else {\n      if (endTwice) {\n        t.expectValidationError(() => {\n          pass.end();\n        });\n      }\n    }\n\n    encoder.finish();\n  });\n\ng.test('pass_end_twice,render_pass_invalid')\n  .desc(\n    'Test that ending a render pass twice generates a validation error even if the pass is invalid.'\n  )\n  .paramsSubcasesOnly(u => u.combine('endTwice', [false, true]))\n  .fn(t => {\n    const { endTwice } = t.params;\n\n    const encoder = t.device.createCommandEncoder();\n    // Pass encoder creation will fail because both color and depth/stencil attachments are empty.\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [],\n    });\n\n    pass.end();\n\n    if (endTwice) {\n      t.expectValidationError(() => {\n        pass.end();\n      });\n    }\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    });\n  });\n"],"mappings":"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"}