{"version":3,"file":"debug.spec.js","names":["description","makeTestGroup","kEncoderTypes","AllFeaturesMaxLimitsValidationTest","g","test","params","u","combine","beginSubcases","fn","t","encoder","validateFinishAndSubmit","createEncoder","encoderType","i","pushCount","pushDebugGroup","popCount","popDebugGroup","label","insertDebugMarker"],"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/debug.spec.ts"],"sourcesContent":["export const description = `\nAPI validation test for debug groups and markers\n\nTest Coverage:\n  - For each encoder type (GPUCommandEncoder, GPUComputeEncoder, GPURenderPassEncoder,\n  GPURenderBundleEncoder):\n    - Test that all pushDebugGroup must have a corresponding popDebugGroup\n      - Push and pop counts of 0, 1, and 2 will be used.\n      - An error must be generated for non matching counts.\n    - Test calling pushDebugGroup with empty and non-empty strings.\n    - Test inserting a debug marker with empty and non-empty strings.\n    - Test strings with \\0 in them.\n    - Test non-ASCII strings.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kEncoderTypes } from '../../../../util/command_buffer_maker.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('debug_group_balanced')\n  .params(u =>\n    u\n      .combine('encoderType', kEncoderTypes)\n      .beginSubcases()\n      .combine('pushCount', [0, 1, 2])\n      .combine('popCount', [0, 1, 2])\n  )\n  .fn(t => {\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(t.params.encoderType);\n    for (let i = 0; i < t.params.pushCount; ++i) {\n      encoder.pushDebugGroup(`${i}`);\n    }\n    for (let i = 0; i < t.params.popCount; ++i) {\n      encoder.popDebugGroup();\n    }\n    validateFinishAndSubmit(t.params.pushCount === t.params.popCount, true);\n  });\n\ng.test('debug_group')\n  .params(u =>\n    u //\n      .combine('encoderType', kEncoderTypes)\n      .beginSubcases()\n      .combine('label', ['', 'group', 'null\\0in\\0group\\0label', '\\0null at beginning', 'ðŸŒžðŸ‘†'])\n  )\n  .fn(t => {\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(t.params.encoderType);\n    encoder.pushDebugGroup(t.params.label);\n    encoder.popDebugGroup();\n    validateFinishAndSubmit(true, true);\n  });\n\ng.test('debug_marker')\n  .params(u =>\n    u //\n      .combine('encoderType', kEncoderTypes)\n      .beginSubcases()\n      .combine('label', ['', 'marker', 'null\\0in\\0marker', '\\0null at beginning', 'ðŸŒžðŸ‘†'])\n  )\n  .fn(t => {\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(t.params.encoderType);\n    encoder.insertDebugMarker(t.params.label);\n    validateFinishAndSubmit(true, true);\n  });\n"],"mappings":"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"}