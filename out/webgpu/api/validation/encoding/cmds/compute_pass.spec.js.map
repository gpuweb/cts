{"version":3,"file":"compute_pass.spec.js","names":["description","makeTestGroup","makeValueTestVariant","kBufferUsages","GPUConst","kResourceStates","AllFeaturesMaxLimitsValidationTest","F","createComputePipeline","state","createNoOpComputePipeline","createErrorComputePipeline","createIndirectBuffer","data","descriptor","size","byteLength","usage","GPUBufferUsage","INDIRECT","COPY_DST","device","pushErrorScope","buffer","createBufferTracked","popErrorScope","queue","writeBuffer","destroy","g","test","desc","params","u","beginSubcases","combine","fn","t","pipeline","encoder","validateFinishAndSubmitGivenState","createEncoder","setPipeline","paramsSubcasesOnly","beforeAllSubcases","usesMismatchedDevice","mismatched","sourceDevice","mismatchedDevice","layout","compute","module","createShaderModule","code","entryPoint","validateFinish","mult","add","dispatchType","largeDimIndex","smallDimValue","largeDimValueVariant","maxDispatch","limits","maxComputeWorkgroupsPerDimension","largeDimValue","workSizes","validateFinishAndSubmit","x","y","z","dispatchWorkgroups","dispatchWorkgroupsIndirect","Uint32Array","shouldError","kBufferData","fill","BYTES_PER_ELEMENT","offset","finishShouldError","trackForCleanup","createBuffer","unless","bufferUsage0","bufferUsage1","BufferUsage","MAP_READ","MAP_WRITE","bufferUsage","createPipelineLayout","bindGroupLayouts","success"],"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/compute_pass.spec.ts"],"sourcesContent":["export const description = `\nAPI validation test for compute pass\n\nDoes **not** test usage scopes (resource_usages/) or programmable pass stuff (programmable_pass).\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { makeValueTestVariant } from '../../../../../common/util/util.js';\nimport { kBufferUsages } from '../../../../capability_info.js';\nimport { GPUConst } from '../../../../constants.js';\nimport { kResourceStates, ResourceState } from '../../../../gpu_test.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../../validation_test.js';\n\nclass F extends AllFeaturesMaxLimitsValidationTest {\n  createComputePipeline(state: 'valid' | 'invalid'): GPUComputePipeline {\n    if (state === 'valid') {\n      return this.createNoOpComputePipeline();\n    }\n\n    return this.createErrorComputePipeline();\n  }\n\n  createIndirectBuffer(state: ResourceState, data: Uint32Array): GPUBuffer {\n    const descriptor: GPUBufferDescriptor = {\n      size: data.byteLength,\n      usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_DST,\n    };\n\n    if (state === 'invalid') {\n      descriptor.usage = 0xffff; // Invalid GPUBufferUsage\n    }\n\n    this.device.pushErrorScope('validation');\n    const buffer = this.createBufferTracked(descriptor);\n    void this.device.popErrorScope();\n\n    if (state === 'valid') {\n      this.queue.writeBuffer(buffer, 0, data);\n    }\n\n    if (state === 'destroyed') {\n      buffer.destroy();\n    }\n\n    return buffer;\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('set_pipeline')\n  .desc(\n    `\nsetPipeline should generate an error iff using an 'invalid' pipeline.\n`\n  )\n  .params(u => u.beginSubcases().combine('state', ['valid', 'invalid'] as const))\n  .fn(t => {\n    const { state } = t.params;\n    const pipeline = t.createComputePipeline(state);\n\n    const { encoder, validateFinishAndSubmitGivenState } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    validateFinishAndSubmitGivenState(state);\n  });\n\ng.test('pipeline,device_mismatch')\n  .desc('Tests setPipeline cannot be called with a compute pipeline created from another device')\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const pipeline = sourceDevice.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: sourceDevice.createShaderModule({\n          code: '@compute @workgroup_size(1) fn main() {}',\n        }),\n        entryPoint: 'main',\n      },\n    });\n\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    validateFinish(!mismatched);\n  });\n\ng.test('dispatch_sizes')\n  .desc(\n    `Test 'direct' and 'indirect' dispatch with various sizes.\n\n  Only direct dispatches can produce validation errors.\n  Workgroup sizes:\n    - valid: { zero, one, just under limit }\n    - invalid: { just over limit, way over limit }\n\n  TODO: Verify that the invalid cases don't execute any invocations at all.\n`\n  )\n  .params(u =>\n    u\n      .combine('dispatchType', ['direct', 'indirect'] as const)\n      .combine('largeDimValueVariant', [\n        { mult: 0, add: 0 },\n        { mult: 0, add: 1 },\n        { mult: 1, add: 0 },\n        { mult: 1, add: 1 },\n        { mult: 0, add: 0x7fff_ffff },\n        { mult: 0, add: 0xffff_ffff },\n      ])\n      .beginSubcases()\n      .combine('largeDimIndex', [0, 1, 2] as const)\n      .combine('smallDimValue', [0, 1])\n  )\n  .fn(t => {\n    const { dispatchType, largeDimIndex, smallDimValue, largeDimValueVariant } = t.params;\n    const maxDispatch = t.device.limits.maxComputeWorkgroupsPerDimension;\n    const largeDimValue = makeValueTestVariant(maxDispatch, largeDimValueVariant);\n\n    const pipeline = t.createNoOpComputePipeline();\n\n    const workSizes = [smallDimValue, smallDimValue, smallDimValue];\n    workSizes[largeDimIndex] = largeDimValue;\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    if (dispatchType === 'direct') {\n      const [x, y, z] = workSizes;\n      encoder.dispatchWorkgroups(x, y, z);\n    } else if (dispatchType === 'indirect') {\n      encoder.dispatchWorkgroupsIndirect(\n        t.createIndirectBuffer('valid', new Uint32Array(workSizes)),\n        0\n      );\n    }\n\n    const shouldError =\n      dispatchType === 'direct' &&\n      (workSizes[0] > maxDispatch || workSizes[1] > maxDispatch || workSizes[2] > maxDispatch);\n\n    validateFinishAndSubmit(!shouldError, true);\n  });\n\nconst kBufferData = new Uint32Array(6).fill(1);\ng.test('indirect_dispatch_buffer_state')\n  .desc(\n    `\nTest dispatchWorkgroupsIndirect validation by submitting various dispatches with a no-op pipeline\nand an indirectBuffer with 6 elements.\n- indirectBuffer: {'valid', 'invalid', 'destroyed'}\n- indirectOffset:\n  - valid, within the buffer: {beginning, middle, end} of the buffer\n  - invalid, non-multiple of 4\n  - invalid, the last element is outside the buffer\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('state', kResourceStates)\n      .combine('offset', [\n        // valid (for 'valid' buffers)\n        0,\n        Uint32Array.BYTES_PER_ELEMENT,\n        kBufferData.byteLength - 3 * Uint32Array.BYTES_PER_ELEMENT,\n        // invalid, non-multiple of 4 offset\n        1,\n        // invalid, last element outside buffer\n        kBufferData.byteLength - 2 * Uint32Array.BYTES_PER_ELEMENT,\n      ])\n  )\n  .fn(t => {\n    const { state, offset } = t.params;\n    const pipeline = t.createNoOpComputePipeline();\n    const buffer = t.createIndirectBuffer(state, kBufferData);\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    encoder.dispatchWorkgroupsIndirect(buffer, offset);\n\n    const finishShouldError =\n      state === 'invalid' ||\n      offset % 4 !== 0 ||\n      offset + 3 * Uint32Array.BYTES_PER_ELEMENT > kBufferData.byteLength;\n    validateFinishAndSubmit(!finishShouldError, state !== 'destroyed');\n  });\n\ng.test('indirect_dispatch_buffer,device_mismatch')\n  .desc(\n    `Tests dispatchWorkgroupsIndirect cannot be called with an indirect buffer created from another device`\n  )\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { mismatched } = t.params;\n\n    const pipeline = t.createNoOpComputePipeline();\n\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const buffer = t.trackForCleanup(\n      sourceDevice.createBuffer({\n        size: 16,\n        usage: GPUBufferUsage.INDIRECT,\n      })\n    );\n\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    encoder.dispatchWorkgroupsIndirect(buffer, 0);\n    validateFinish(!mismatched);\n  });\n\ng.test('indirect_dispatch_buffer,usage')\n  .desc(\n    `\n    Tests dispatchWorkgroupsIndirect generates a validation error if the buffer usage does not\n    contain INDIRECT usage.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      // If bufferUsage0 and bufferUsage1 are the same, the usage being test is a single usage.\n      // Otherwise, it's a combined usage.\n      .combine('bufferUsage0', kBufferUsages)\n      .combine('bufferUsage1', kBufferUsages)\n      .unless(\n        ({ bufferUsage0, bufferUsage1 }) =>\n          ((bufferUsage0 | bufferUsage1) &\n            (GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.MAP_WRITE)) !==\n          0\n      )\n  )\n  .fn(t => {\n    const { bufferUsage0, bufferUsage1 } = t.params;\n\n    const bufferUsage = bufferUsage0 | bufferUsage1;\n\n    const layout = t.device.createPipelineLayout({ bindGroupLayouts: [] });\n    const pipeline = t.createNoOpComputePipeline(layout);\n\n    const buffer = t.createBufferTracked({\n      size: 16,\n      usage: bufferUsage,\n    });\n\n    const success = (GPUBufferUsage.INDIRECT & bufferUsage) !== 0;\n\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n\n    encoder.dispatchWorkgroupsIndirect(buffer, 0);\n    validateFinish(success);\n  });\n"],"mappings":"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"}