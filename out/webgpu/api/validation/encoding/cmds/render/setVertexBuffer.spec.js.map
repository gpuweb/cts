{"version":3,"file":"setVertexBuffer.spec.js","names":["description","makeTestGroup","makeValueTestVariant","GPUConst","kResourceStates","AllFeaturesMaxLimitsValidationTest","kRenderEncodeTypeParams","buildBufferOffsetAndSizeOOBTestParams","g","test","desc","paramsSubcasesOnly","combine","mult","add","fn","t","encoderType","slotVariant","params","maxVertexBuffers","device","limits","slot","vertexBuffer","createBufferWithState","size","usage","GPUBufferUsage","VERTEX","encoder","validateFinish","createEncoder","setVertexBuffer","state","validateFinishAndSubmitGivenState","beforeAllSubcases","usesMismatchedDevice","mismatched","sourceDevice","mismatchedDevice","trackForCleanup","createBuffer","BufferUsage","COPY_DST","createBufferTracked","offset","finish","_valid"],"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/setVertexBuffer.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for setVertexBuffer on render pass and render bundle.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { makeValueTestVariant } from '../../../../../../common/util/util.js';\nimport { GPUConst } from '../../../../../constants.js';\nimport { kResourceStates } from '../../../../../gpu_test.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../../../validation_test.js';\n\nimport { kRenderEncodeTypeParams, buildBufferOffsetAndSizeOOBTestParams } from './render.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('slot')\n  .desc(\n    `\nTests slot must be less than the maxVertexBuffers in device limits.\n  `\n  )\n  .paramsSubcasesOnly(\n    kRenderEncodeTypeParams.combine('slotVariant', [\n      { mult: 0, add: 0 },\n      { mult: 1, add: -1 },\n      { mult: 1, add: 0 },\n    ] as const)\n  )\n  .fn(t => {\n    const { encoderType, slotVariant } = t.params;\n    const maxVertexBuffers = t.device.limits.maxVertexBuffers;\n    const slot = makeValueTestVariant(maxVertexBuffers, slotVariant);\n\n    const vertexBuffer = t.createBufferWithState('valid', {\n      size: 16,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(slot, vertexBuffer);\n    validateFinish(slot < maxVertexBuffers);\n  });\n\ng.test('vertex_buffer_state')\n  .desc(\n    `\nTests vertex buffer must be valid.\n  `\n  )\n  .paramsSubcasesOnly(kRenderEncodeTypeParams.combine('state', kResourceStates))\n  .fn(t => {\n    const { encoderType, state } = t.params;\n    const vertexBuffer = t.createBufferWithState(state, {\n      size: 16,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, validateFinishAndSubmitGivenState } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer);\n    validateFinishAndSubmitGivenState(state);\n  });\n\ng.test('vertex_buffer,device_mismatch')\n  .desc('Tests setVertexBuffer cannot be called with a vertex buffer created from another device')\n  .paramsSubcasesOnly(kRenderEncodeTypeParams.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { encoderType, mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const vertexBuffer = t.trackForCleanup(\n      sourceDevice.createBuffer({\n        size: 16,\n        usage: GPUBufferUsage.VERTEX,\n      })\n    );\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer);\n    validateFinish(!mismatched);\n  });\n\ng.test('vertex_buffer_usage')\n  .desc(\n    `\nTests vertex buffer must have 'Vertex' usage.\n  `\n  )\n  .paramsSubcasesOnly(\n    kRenderEncodeTypeParams.combine('usage', [\n      GPUConst.BufferUsage.VERTEX, // control case\n      GPUConst.BufferUsage.COPY_DST,\n      GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.VERTEX,\n    ] as const)\n  )\n  .fn(t => {\n    const { encoderType, usage } = t.params;\n    const vertexBuffer = t.createBufferTracked({\n      size: 16,\n      usage,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer);\n    validateFinish((usage & GPUBufferUsage.VERTEX) !== 0);\n  });\n\ng.test('offset_alignment')\n  .desc(\n    `\nTests offset must be a multiple of 4.\n  `\n  )\n  .paramsSubcasesOnly(kRenderEncodeTypeParams.combine('offset', [0, 2, 4] as const))\n  .fn(t => {\n    const { encoderType, offset } = t.params;\n    const vertexBuffer = t.createBufferTracked({\n      size: 16,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, validateFinish: finish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer, offset);\n    finish(offset % 4 === 0);\n  });\n\ng.test('offset_and_size_oob')\n  .desc(\n    `\nTests offset and size cannot be larger than vertex buffer size.\n  `\n  )\n  .paramsSubcasesOnly(buildBufferOffsetAndSizeOOBTestParams(4, 256))\n  .fn(t => {\n    const { encoderType, offset, size, _valid } = t.params;\n    const vertexBuffer = t.createBufferTracked({\n      size: 256,\n      usage: GPUBufferUsage.VERTEX,\n    });\n\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setVertexBuffer(0, vertexBuffer, offset, size);\n    validateFinish(_valid);\n  });\n"],"mappings":"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"}