{"version":3,"file":"general.spec.js","names":["description","makeTestGroup","kQueryTypes","AllFeaturesMaxLimitsValidationTest","createQuerySetWithType","g","test","desc","params","u","combine","undefined","fn","t","type","skipIfDeviceDoesNotSupportQueryType","querySet","encoder","createEncoder","occlusionQuerySet","beginOcclusionQuery","endOcclusionQuery","validateFinish","paramsSubcasesOnly","createQuerySetWithState","querySetState","validateFinishAndSubmitGivenState","queryIndex","beginSubcases","expand","p","count","writeTimestamp","ex","skipIf","TypeError","beforeAllSubcases","usesMismatchedDevice","mismatched","sourceDevice","mismatchedDevice","device","trackForCleanup","createQuerySet"],"sources":["../../../../../../src/webgpu/api/validation/encoding/queries/general.spec.ts"],"sourcesContent":["export const description = `\nValidation for encoding queries.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kQueryTypes } from '../../../../capability_info.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../../validation_test.js';\n\nimport { createQuerySetWithType } from './common.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('occlusion_query,query_type')\n  .desc(\n    `\nTests that set occlusion query set with all types in render pass descriptor:\n- type {occlusion (control case), timestamp}\n- {undefined} for occlusion query set in render pass descriptor\n  `\n  )\n  .params(u => u.combine('type', [undefined, ...kQueryTypes]))\n  .fn(t => {\n    const type = t.params.type;\n    if (type) {\n      t.skipIfDeviceDoesNotSupportQueryType(type);\n    }\n    const querySet = type === undefined ? undefined : createQuerySetWithType(t, type, 1);\n\n    const encoder = t.createEncoder('render pass', { occlusionQuerySet: querySet });\n    encoder.encoder.beginOcclusionQuery(0);\n    encoder.encoder.endOcclusionQuery();\n    encoder.validateFinish(type === 'occlusion');\n  });\n\ng.test('occlusion_query,invalid_query_set')\n  .desc(\n    `\nTests that begin occlusion query with a invalid query set that failed during creation.\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('querySetState', ['valid', 'invalid'] as const))\n  .fn(t => {\n    const occlusionQuerySet = t.createQuerySetWithState(t.params.querySetState);\n\n    const encoder = t.createEncoder('render pass', { occlusionQuerySet });\n    encoder.encoder.beginOcclusionQuery(0);\n    encoder.encoder.endOcclusionQuery();\n    encoder.validateFinishAndSubmitGivenState(t.params.querySetState);\n  });\n\ng.test('occlusion_query,query_index')\n  .desc(\n    `\nTests that begin occlusion query with query index:\n- queryIndex {in, out of} range for GPUQuerySet\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('queryIndex', [0, 2]))\n  .fn(t => {\n    const occlusionQuerySet = createQuerySetWithType(t, 'occlusion', 2);\n\n    const encoder = t.createEncoder('render pass', { occlusionQuerySet });\n    encoder.encoder.beginOcclusionQuery(t.params.queryIndex);\n    encoder.encoder.endOcclusionQuery();\n    encoder.validateFinish(t.params.queryIndex < 2);\n  });\n\ng.test('writeTimestamp,query_type_and_index')\n  .desc(\n    `\nTests that write timestamp to all types of query set on all possible encoders:\n- type {occlusion, timestamp}\n- queryIndex {in, out of} range for GPUQuerySet\n- x= {non-pass} encoder\n\nTODO: writeTimestamp is removed from the spec so it's skipped if it TypeErrors.\n`\n  )\n  .params(u =>\n    u\n      .combine('type', kQueryTypes)\n      .beginSubcases()\n      .expand('queryIndex', p => (p.type === 'timestamp' ? [0, 2] : [0]))\n  )\n  .fn(t => {\n    const { type, queryIndex } = t.params;\n    t.skipIfDeviceDoesNotSupportQueryType('timestamp');\n    t.skipIfDeviceDoesNotSupportQueryType(type);\n\n    const count = 2;\n    const querySet = createQuerySetWithType(t, type, count);\n\n    const encoder = t.createEncoder('non-pass');\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder.encoder as any).writeTimestamp(querySet, queryIndex);\n    } catch (ex) {\n      t.skipIf(ex instanceof TypeError, 'writeTimestamp is actually not available');\n    }\n    encoder.validateFinish(type === 'timestamp' && queryIndex < count);\n  });\n\ng.test('writeTimestamp,invalid_query_set')\n  .desc(\n    `\nTests that write timestamp to a invalid query set that failed during creation:\n- x= {non-pass} encoder\n\nTODO: writeTimestamp is removed from the spec so it's skipped if it TypeErrors.\n`\n  )\n  .paramsSubcasesOnly(u => u.combine('querySetState', ['valid', 'invalid'] as const))\n  .fn(t => {\n    t.skipIfDeviceDoesNotSupportQueryType('timestamp');\n    const { querySetState } = t.params;\n\n    const querySet = t.createQuerySetWithState(querySetState, {\n      type: 'timestamp',\n      count: 2,\n    });\n\n    const encoder = t.createEncoder('non-pass');\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder.encoder as any).writeTimestamp(querySet, 0);\n    } catch (ex) {\n      t.skipIf(ex instanceof TypeError, 'writeTimestamp is actually not available');\n    }\n    encoder.validateFinish(querySetState !== 'invalid');\n  });\n\ng.test('writeTimestamp,device_mismatch')\n  .desc(\n    `Tests writeTimestamp cannot be called with a query set created from another device\n\n  TODO: writeTimestamp is removed from the spec so it's skipped if it TypeErrors.\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    t.skipIfDeviceDoesNotSupportQueryType('timestamp');\n    const { mismatched } = t.params;\n    const sourceDevice = mismatched ? t.mismatchedDevice : t.device;\n\n    const querySet = t.trackForCleanup(\n      sourceDevice.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      })\n    );\n\n    const encoder = t.createEncoder('non-pass');\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (encoder.encoder as any).writeTimestamp(querySet, 0);\n    } catch (ex) {\n      t.skipIf(ex instanceof TypeError, 'writeTimestamp is actually not available');\n    }\n    encoder.validateFinish(!mismatched);\n  });\n"],"mappings":"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"}