{"version":3,"file":"resolveQuerySet.spec.js","names":["description","makeTestGroup","GPUConst","kResourceStates","AllFeaturesMaxLimitsValidationTest","g","kQueryCount","test","desc","params","u","combine","fn","t","querySetState","destinationState","shouldBeValid","shouldSubmitSuccess","querySet","createQuerySetWithState","destination","createBufferWithState","size","usage","GPUBufferUsage","QUERY_RESOLVE","encoder","createEncoder","resolveQuerySet","validateFinishAndSubmit","paramsSubcasesOnly","firstQuery","queryCount","createQuerySetTracked","type","count","createBufferTracked","validateFinish","BufferUsage","STORAGE","bufferUsage","destinationOffset","combineWithParams","bufferSize","_success","querySetMismatched","bufferMismatched","beforeAllSubcases","usesMismatchedDevice","querySetDevice","mismatchedDevice","device","trackForCleanup","createQuerySet","bufferDevice","buffer","createBuffer"],"sources":["../../../../../../src/webgpu/api/validation/encoding/queries/resolveQuerySet.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for resolveQuerySet.\n`;\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../../constants.js';\nimport { kResourceStates } from '../../../../gpu_test.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\nexport const kQueryCount = 2;\n\ng.test('queryset_and_destination_buffer_state')\n  .desc(\n    `\nTests that resolve query set must be with valid query set and destination buffer.\n- {invalid, destroyed} GPUQuerySet results in validation error.\n- {invalid, destroyed} destination buffer results in validation error.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('querySetState', kResourceStates)\n      .combine('destinationState', kResourceStates)\n  )\n  .fn(t => {\n    const { querySetState, destinationState } = t.params;\n\n    const shouldBeValid = querySetState !== 'invalid' && destinationState !== 'invalid';\n    const shouldSubmitSuccess = querySetState === 'valid' && destinationState === 'valid';\n\n    const querySet = t.createQuerySetWithState(querySetState);\n\n    const destination = t.createBufferWithState(destinationState, {\n      size: kQueryCount * 8,\n      usage: GPUBufferUsage.QUERY_RESOLVE,\n    });\n\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.resolveQuerySet(querySet, 0, 1, destination, 0);\n    encoder.validateFinishAndSubmit(shouldBeValid, shouldSubmitSuccess);\n  });\n\ng.test('first_query_and_query_count')\n  .desc(\n    `\nTests that resolve query set with invalid firstQuery and queryCount:\n- firstQuery and/or queryCount out of range\n  `\n  )\n  .paramsSubcasesOnly([\n    { firstQuery: 0, queryCount: kQueryCount }, // control case\n    { firstQuery: 0, queryCount: kQueryCount + 1 },\n    { firstQuery: 1, queryCount: kQueryCount },\n    { firstQuery: kQueryCount, queryCount: 1 },\n  ])\n  .fn(t => {\n    const { firstQuery, queryCount } = t.params;\n\n    const querySet = t.createQuerySetTracked({ type: 'occlusion', count: kQueryCount });\n    const destination = t.createBufferTracked({\n      size: kQueryCount * 8,\n      usage: GPUBufferUsage.QUERY_RESOLVE,\n    });\n\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.resolveQuerySet(querySet, firstQuery, queryCount, destination, 0);\n    encoder.validateFinish(firstQuery + queryCount <= kQueryCount);\n  });\n\ng.test('destination_buffer_usage')\n  .desc(\n    `\nTests that resolve query set with invalid destinationBuffer:\n- Buffer usage {with, without} QUERY_RESOLVE\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('bufferUsage', [\n        GPUConst.BufferUsage.STORAGE,\n        GPUConst.BufferUsage.QUERY_RESOLVE, // control case\n      ] as const)\n  )\n  .fn(t => {\n    const querySet = t.createQuerySetTracked({ type: 'occlusion', count: kQueryCount });\n    const destination = t.createBufferTracked({\n      size: kQueryCount * 8,\n      usage: t.params.bufferUsage,\n    });\n\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.resolveQuerySet(querySet, 0, kQueryCount, destination, 0);\n    encoder.validateFinish(t.params.bufferUsage === GPUConst.BufferUsage.QUERY_RESOLVE);\n  });\n\ng.test('destination_offset_alignment')\n  .desc(\n    `\nTests that resolve query set with invalid destinationOffset:\n- destinationOffset is not a multiple of 256\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destinationOffset', [0, 128, 256, 384]))\n  .fn(t => {\n    const { destinationOffset } = t.params;\n    const querySet = t.createQuerySetTracked({ type: 'occlusion', count: kQueryCount });\n    const destination = t.createBufferTracked({\n      size: 512,\n      usage: GPUBufferUsage.QUERY_RESOLVE,\n    });\n\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.resolveQuerySet(querySet, 0, kQueryCount, destination, destinationOffset);\n    encoder.validateFinish(destinationOffset % 256 === 0);\n  });\n\ng.test('resolve_buffer_oob')\n  .desc(\n    `\nTests that resolve query set with the size oob:\n- The size of destinationBuffer - destinationOffset < queryCount * 8\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combineWithParams([\n      { queryCount: 2, bufferSize: 16, destinationOffset: 0, _success: true },\n      { queryCount: 3, bufferSize: 16, destinationOffset: 0, _success: false },\n      { queryCount: 2, bufferSize: 16, destinationOffset: 256, _success: false },\n      { queryCount: 2, bufferSize: 272, destinationOffset: 256, _success: true },\n      { queryCount: 2, bufferSize: 264, destinationOffset: 256, _success: false },\n    ])\n  )\n  .fn(t => {\n    const { queryCount, bufferSize, destinationOffset, _success } = t.params;\n    const querySet = t.createQuerySetTracked({ type: 'occlusion', count: queryCount });\n    const destination = t.createBufferTracked({\n      size: bufferSize,\n      usage: GPUBufferUsage.QUERY_RESOLVE,\n    });\n\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.resolveQuerySet(querySet, 0, queryCount, destination, destinationOffset);\n    encoder.validateFinish(_success);\n  });\n\ng.test('query_set_buffer,device_mismatch')\n  .desc(\n    'Tests resolveQuerySet cannot be called with a query set or destination buffer created from another device'\n  )\n  .paramsSubcasesOnly([\n    { querySetMismatched: false, bufferMismatched: false }, // control case\n    { querySetMismatched: true, bufferMismatched: false },\n    { querySetMismatched: false, bufferMismatched: true },\n  ] as const)\n  .beforeAllSubcases(t => t.usesMismatchedDevice())\n  .fn(t => {\n    const { querySetMismatched, bufferMismatched } = t.params;\n\n    const kQueryCount = 1;\n\n    const querySetDevice = querySetMismatched ? t.mismatchedDevice : t.device;\n    const querySet = t.trackForCleanup(\n      querySetDevice.createQuerySet({\n        type: 'occlusion',\n        count: kQueryCount,\n      })\n    );\n\n    const bufferDevice = bufferMismatched ? t.mismatchedDevice : t.device;\n    const buffer = t.trackForCleanup(\n      bufferDevice.createBuffer({\n        size: kQueryCount * 8,\n        usage: GPUBufferUsage.QUERY_RESOLVE,\n      })\n    );\n\n    const encoder = t.createEncoder('non-pass');\n    encoder.encoder.resolveQuerySet(querySet, 0, kQueryCount, buffer, 0);\n    encoder.validateFinish(!(querySetMismatched || bufferMismatched));\n  });\n"],"mappings":"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"}