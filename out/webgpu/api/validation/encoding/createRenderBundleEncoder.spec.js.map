{"version":3,"file":"createRenderBundleEncoder.spec.js","names":["description","makeTestGroup","range","getDefaultLimits","computeBytesPerSampleFromFormats","getColorRenderByteCost","isDepthOrStencilTextureFormat","isTextureFormatColorRenderable","kAllTextureFormats","kDepthStencilFormats","kPossibleColorRenderableTextureFormats","AllFeaturesMaxLimitsValidationTest","kMaxColorAttachments","maxColorAttachments","default","g","test","desc","params","u","beginSubcases","combine","i","fn","t","colorFormatCount","device","limits","skipIf","expectValidationError","createRenderBundleEncoder","colorFormats","Array","fill","format","skipIfTextureFormatNotSupported","shouldError","maxColorAttachmentBytesPerSample","combineWithParams","formats","length","undefined","depthStencilFormat","attachment","colorRenderable","depthStencil","depthReadOnly","stencilReadOnly"],"sources":["../../../../../src/webgpu/api/validation/encoding/createRenderBundleEncoder.spec.ts"],"sourcesContent":["export const description = `\ncreateRenderBundleEncoder validation tests.\n\nTODO(#3363): Make this into a MaxLimitTest and increase kMaxColorAttachments.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport { getDefaultLimits } from '../../../capability_info.js';\nimport {\n  computeBytesPerSampleFromFormats,\n  getColorRenderByteCost,\n  isDepthOrStencilTextureFormat,\n  isTextureFormatColorRenderable,\n  kAllTextureFormats,\n  kDepthStencilFormats,\n  kPossibleColorRenderableTextureFormats,\n} from '../../../format_info.js';\nimport { AllFeaturesMaxLimitsValidationTest } from '../validation_test.js';\n\n// MAINTENANCE_TODO: This should be changed to kMaxColorAttachmentsToTest\n// when this is made a MaxLimitTest (see above).\nconst kMaxColorAttachments = getDefaultLimits('core').maxColorAttachments.default;\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsValidationTest);\n\ng.test('attachment_state,limits,maxColorAttachments')\n  .desc(`Tests that attachment state must have <= device.limits.maxColorAttachments.`)\n  .params(u =>\n    u.beginSubcases().combine(\n      'colorFormatCount',\n      range(kMaxColorAttachments, i => i + 1)\n    )\n  )\n  .fn(t => {\n    const { colorFormatCount } = t.params;\n    const maxColorAttachments = t.device.limits.maxColorAttachments;\n    t.skipIf(\n      colorFormatCount > maxColorAttachments,\n      `${colorFormatCount} > maxColorAttachments: ${maxColorAttachments}`\n    );\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: Array(colorFormatCount).fill('r8unorm'),\n      });\n    }, colorFormatCount > t.device.limits.maxColorAttachments);\n  });\n\ng.test('attachment_state,limits,maxColorAttachmentBytesPerSample,aligned')\n  .desc(\n    `\n    Tests that the total color attachment bytes per sample <=\n    device.limits.maxColorAttachmentBytesPerSample when using the same format (aligned) for multiple\n    attachments.\n    `\n  )\n  .params(u =>\n    u\n      .combine('format', kPossibleColorRenderableTextureFormats)\n      .beginSubcases()\n      .combine(\n        'colorFormatCount',\n        range(kMaxColorAttachments, i => i + 1)\n      )\n  )\n  .fn(t => {\n    const { format, colorFormatCount } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n    const maxColorAttachments = t.device.limits.maxColorAttachments;\n    t.skipIf(\n      colorFormatCount > maxColorAttachments,\n      `${colorFormatCount} > maxColorAttachments: ${maxColorAttachments}`\n    );\n    const shouldError =\n      !isTextureFormatColorRenderable(t.device, format) ||\n      getColorRenderByteCost(format) * colorFormatCount >\n        t.device.limits.maxColorAttachmentBytesPerSample;\n\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: Array(colorFormatCount).fill(format),\n      });\n    }, shouldError);\n  });\n\ng.test('attachment_state,limits,maxColorAttachmentBytesPerSample,unaligned')\n  .desc(\n    `\n    Tests that the total color attachment bytes per sample <=\n    device.limits.maxColorAttachmentBytesPerSample when using various sets of (potentially)\n    unaligned formats.\n    `\n  )\n  .params(u =>\n    u.combineWithParams([\n      // Alignment causes the first 1 byte R8Unorm to become 4 bytes. So even though\n      // 1+4+8+16+1 < 32, the 4 byte alignment requirement of R32Float makes the first R8Unorm\n      // become 4 and 4+4+8+16+1 > 32. Re-ordering this so the R8Unorm's are at the end, however\n      // is allowed: 4+8+16+1+1 < 32.\n      {\n        formats: [\n          'r8unorm',\n          'r32float',\n          'rgba8unorm',\n          'rgba32float',\n          'r8unorm',\n        ] as GPUTextureFormat[],\n      },\n      {\n        formats: [\n          'r32float',\n          'rgba8unorm',\n          'rgba32float',\n          'r8unorm',\n          'r8unorm',\n        ] as GPUTextureFormat[],\n      },\n    ])\n  )\n  .fn(t => {\n    const { formats } = t.params;\n\n    t.skipIf(\n      formats.length > t.device.limits.maxColorAttachments,\n      `numColorAttachments: ${formats.length} > maxColorAttachments: ${t.device.limits.maxColorAttachments}`\n    );\n\n    const shouldError =\n      computeBytesPerSampleFromFormats(formats) > t.device.limits.maxColorAttachmentBytesPerSample;\n\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: formats,\n      });\n    }, shouldError);\n  });\n\ng.test('attachment_state,empty_color_formats')\n  .desc(`Tests that if no colorFormats are given, a depthStencilFormat must be specified.`)\n  .params(u =>\n    u.beginSubcases().combine('depthStencilFormat', [undefined, 'depth24plus-stencil8'] as const)\n  )\n  .fn(t => {\n    const { depthStencilFormat } = t.params;\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: [],\n        depthStencilFormat,\n      });\n    }, depthStencilFormat === undefined);\n  });\n\ng.test('valid_texture_formats')\n  .desc(\n    `\n    Tests that createRenderBundleEncoder only accepts valid formats for its attachments.\n      - colorFormats\n      - depthStencilFormat\n    `\n  )\n  .params(u =>\n    u //\n      .combine('format', kAllTextureFormats)\n      .beginSubcases()\n      .combine('attachment', ['color', 'depthStencil'])\n  )\n  .fn(t => {\n    const { format, attachment } = t.params;\n    t.skipIfTextureFormatNotSupported(format);\n\n    const colorRenderable = isTextureFormatColorRenderable(t.device, format);\n    const depthStencil = isDepthOrStencilTextureFormat(format);\n\n    switch (attachment) {\n      case 'color': {\n        t.expectValidationError(() => {\n          t.device.createRenderBundleEncoder({\n            colorFormats: [format],\n          });\n        }, !colorRenderable);\n\n        break;\n      }\n      case 'depthStencil': {\n        t.expectValidationError(() => {\n          t.device.createRenderBundleEncoder({\n            colorFormats: [],\n            depthStencilFormat: format,\n          });\n        }, !depthStencil);\n\n        break;\n      }\n    }\n  });\n\ng.test('depth_stencil_readonly')\n  .desc(\n    `\n      Test that allow combinations of depth-stencil format, depthReadOnly and stencilReadOnly are allowed.\n    `\n  )\n  .params(u =>\n    u //\n      .combine('depthStencilFormat', kDepthStencilFormats)\n      .beginSubcases()\n      .combine('depthReadOnly', [false, true])\n      .combine('stencilReadOnly', [false, true])\n  )\n  .fn(t => {\n    const { depthStencilFormat, depthReadOnly, stencilReadOnly } = t.params;\n    t.skipIfTextureFormatNotSupported(depthStencilFormat);\n    t.device.createRenderBundleEncoder({\n      colorFormats: [],\n      depthStencilFormat,\n      depthReadOnly,\n      stencilReadOnly,\n    });\n  });\n"],"mappings":"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"}