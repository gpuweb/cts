{"version":3,"file":"pipeline_layout_created_with_null_bind_group_layout.spec.js","names":["description","makeTestGroup","GPUConst","GPUTest","g","test","desc","params","u","combine","fn","t","emptyBindGroupLayoutType","emptyBindGroupLayoutIndex","colors","outputColor","declarations","statement","bindGroupLayouts","bindGroups","bindGroupIndex","bindGroupLayout","device","createBindGroupLayout","entries","binding","visibility","ShaderStage","FRAGMENT","buffer","type","minBindingSize","color","makeBufferWithContents","Float32Array","GPUBufferUsage","UNIFORM","bindGroup","createBindGroup","layout","resource","push","undefined","i","length","pipelineLayout","createPipelineLayout","format","code","shaderModule","createShaderModule","renderPipeline","createRenderPipeline","vertex","module","fragment","targets","primitive","topology","renderTarget","createTextureTracked","usage","GPUTextureUsage","RENDER_ATTACHMENT","COPY_SRC","size","commandEncoder","createCommandEncoder","renderPassEncoder","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","setBindGroup","setPipeline","draw","end","queue","submit","finish","expectSingleColor","exp","R","G","B","A","outputBuffer","createBufferTracked","STORAGE","expectedValue","outputDeclared","inputBuffer","Uint32Array","bindGroupLayoutEntries","bindGroupEntries","COMPUTE","computePipeline","createComputePipeline","compute","computePassEncoder","beginComputePass","dispatchWorkgroups","expectedValues","expectGPUBufferValuesEqual"],"sources":["../../../../../src/webgpu/api/operation/pipeline/pipeline_layout_created_with_null_bind_group_layout.spec.ts"],"sourcesContent":["export const description = `\nTests for the creation of pipeline layouts with null bind group layouts.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../constants.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('pipeline_layout_with_null_bind_group_layout,rendering')\n  .desc(\n    `\nTests that using a render pipeline created with a pipeline layout that has null bind group layout\nworks correctly.\n`\n  )\n  .params(u =>\n    u\n      .combine('emptyBindGroupLayoutType', ['Null', 'Undefined', 'Empty'] as const)\n      .combine('emptyBindGroupLayoutIndex', [0, 1, 2, 3] as const)\n  )\n  .fn(t => {\n    const { emptyBindGroupLayoutType, emptyBindGroupLayoutIndex } = t.params;\n\n    const colors = [\n      [0.2, 0, 0, 0.2],\n      [0, 0.2, 0, 0.2],\n      [0, 0, 0.2, 0.2],\n      [0.4, 0, 0, 0.2],\n    ] as const;\n    const outputColor = [0.0, 0.0, 0.0, 0.0];\n\n    let declarations = '';\n    let statement = 'return vec4(0.0, 0.0, 0.0, 0.0)';\n    const bindGroupLayouts: (GPUBindGroupLayout | null | undefined)[] = [];\n    const bindGroups: GPUBindGroup[] = [];\n    for (let bindGroupIndex = 0; bindGroupIndex < 4; ++bindGroupIndex) {\n      const bindGroupLayout = t.device.createBindGroupLayout({\n        entries: [\n          {\n            binding: 0,\n            visibility: GPUConst.ShaderStage.FRAGMENT,\n            buffer: {\n              type: 'uniform',\n              minBindingSize: 16,\n            },\n          },\n        ],\n      });\n\n      const color = colors[bindGroupIndex];\n      const buffer = t.makeBufferWithContents(new Float32Array(color), GPUBufferUsage.UNIFORM);\n\n      // Still create and set the bind group when the corresponding bind group layout in the\n      // pipeline is null. The output color should not be affected by the buffer in this bind group\n      const bindGroup = t.device.createBindGroup({\n        layout: bindGroupLayout,\n        entries: [\n          {\n            binding: 0,\n            resource: {\n              buffer,\n            },\n          },\n        ],\n      });\n      bindGroups.push(bindGroup);\n\n      // Set `null`, `undefined` or empty bind group layout in `bindGroupLayouts` which is used in\n      // the creation of pipeline layout\n      if (bindGroupIndex === emptyBindGroupLayoutIndex) {\n        switch (emptyBindGroupLayoutType) {\n          case 'Null':\n            bindGroupLayouts.push(null);\n            break;\n          case 'Undefined':\n            bindGroupLayouts.push(undefined);\n            break;\n          case 'Empty':\n            bindGroupLayouts.push(\n              t.device.createBindGroupLayout({\n                entries: [],\n              })\n            );\n            break;\n        }\n        continue;\n      }\n\n      // Set the uniform buffers used in the shader\n      bindGroupLayouts.push(bindGroupLayout);\n      declarations += `@group(${bindGroupIndex}) @binding(0) var<uniform> input${bindGroupIndex} : vec4f;\\n`;\n      statement += ` + input${bindGroupIndex}`;\n\n      // Compute the expected output color\n      for (let i = 0; i < color.length; ++i) {\n        outputColor[i] += color[i];\n      }\n    }\n\n    const pipelineLayout = t.device.createPipelineLayout({\n      bindGroupLayouts,\n    });\n\n    const format = 'rgba8unorm';\n    const code = `\n    ${declarations}\n    @vertex\n    fn vert_main() -> @builtin(position) vec4f {\n        return vec4f(0.0, 0.0, 0.0, 1.0);\n    }\n    @fragment\n    fn frag_main() -> @location(0) vec4f {\n        ${statement};\n    }\n    `;\n    const shaderModule = t.device.createShaderModule({\n      code,\n    });\n    const renderPipeline = t.device.createRenderPipeline({\n      layout: pipelineLayout,\n      vertex: {\n        module: shaderModule,\n      },\n      fragment: {\n        module: shaderModule,\n        targets: [\n          {\n            format,\n          },\n        ],\n      },\n      primitive: {\n        topology: 'point-list',\n      },\n    });\n\n    const renderTarget = t.createTextureTracked({\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,\n      size: [1, 1, 1],\n      format,\n    });\n    const commandEncoder = t.device.createCommandEncoder();\n    const renderPassEncoder = commandEncoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: renderTarget.createView(),\n          loadOp: 'load',\n          storeOp: 'store',\n        },\n      ],\n    });\n    for (let i = 0; i < 4; ++i) {\n      renderPassEncoder.setBindGroup(i, bindGroups[i]);\n    }\n    renderPassEncoder.setPipeline(renderPipeline);\n    renderPassEncoder.draw(1);\n    renderPassEncoder.end();\n\n    t.queue.submit([commandEncoder.finish()]);\n\n    t.expectSingleColor(renderTarget, format, {\n      size: [1, 1, 1],\n      exp: { R: outputColor[0], G: outputColor[1], B: outputColor[2], A: outputColor[3] },\n    });\n  });\n\ng.test('pipeline_layout_with_null_bind_group_layout,compute')\n  .desc(\n    `\nTests that using a compute pipeline created with a pipeline layout that has null bind group layout\nworks correctly.\n`\n  )\n  .params(u =>\n    u\n      .combine('emptyBindGroupLayoutType', ['Null', 'Undefined', 'Empty'] as const)\n      .combine('emptyBindGroupLayoutIndex', [0, 1, 2, 3] as const)\n  )\n  .fn(t => {\n    const { emptyBindGroupLayoutType, emptyBindGroupLayoutIndex } = t.params;\n\n    let declarations = '';\n    let statement = 'output = 0u ';\n\n    const outputBuffer = t.createBufferTracked({\n      size: 4,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE,\n    });\n    let expectedValue = 0;\n\n    const bindGroupLayouts: (GPUBindGroupLayout | null | undefined)[] = [];\n    const bindGroups: GPUBindGroup[] = [];\n    let outputDeclared = false;\n    for (let bindGroupIndex = 0; bindGroupIndex < 4; ++bindGroupIndex) {\n      const inputBuffer = t.makeBufferWithContents(\n        new Uint32Array([bindGroupIndex + 1]),\n        GPUBufferUsage.UNIFORM\n      );\n\n      const bindGroupLayoutEntries: GPUBindGroupLayoutEntry[] = [];\n      const bindGroupEntries: GPUBindGroupEntry[] = [];\n      bindGroupLayoutEntries.push({\n        binding: 0,\n        visibility: GPUConst.ShaderStage.COMPUTE,\n        buffer: {\n          type: 'uniform',\n          minBindingSize: 4,\n        },\n      });\n      bindGroupEntries.push({\n        binding: 0,\n        resource: {\n          buffer: inputBuffer,\n        },\n      });\n\n      // Set `null`, `undefined` or empty bind group layout in `bindGroupLayouts` which is used in\n      // the creation of pipeline layout\n      if (bindGroupIndex === emptyBindGroupLayoutIndex) {\n        switch (emptyBindGroupLayoutType) {\n          case 'Null':\n            bindGroupLayouts.push(null);\n            break;\n          case 'Undefined':\n            bindGroupLayouts.push(undefined);\n            break;\n          case 'Empty':\n            bindGroupLayouts.push(\n              t.device.createBindGroupLayout({\n                entries: [],\n              })\n            );\n            break;\n        }\n\n        // Still create and set the bind group when the corresponding bind group layout in the\n        // compute pipeline is null. The value in the output buffer should not be affected by the\n        // buffer in this bind group\n        const bindGroup = t.device.createBindGroup({\n          layout: t.device.createBindGroupLayout({\n            entries: bindGroupLayoutEntries,\n          }),\n          entries: bindGroupEntries,\n        });\n        bindGroups.push(bindGroup);\n        continue;\n      }\n\n      declarations += `@group(${bindGroupIndex}) @binding(0) var<uniform> input${bindGroupIndex} : u32;\\n`;\n      statement += ` + input${bindGroupIndex}`;\n\n      // Set the output storage buffer\n      if (!outputDeclared) {\n        bindGroupLayoutEntries.push({\n          binding: 1,\n          visibility: GPUConst.ShaderStage.COMPUTE,\n          buffer: {\n            type: 'storage',\n            minBindingSize: 4,\n          },\n        });\n        bindGroupEntries.push({\n          binding: 1,\n          resource: {\n            buffer: outputBuffer,\n          },\n        });\n        declarations += `@group(${bindGroupIndex}) @binding(1) var<storage, read_write> output : u32;\\n`;\n        outputDeclared = true;\n      }\n\n      // Set the input uniform buffers\n      const bindGroupLayout = t.device.createBindGroupLayout({\n        entries: bindGroupLayoutEntries,\n      });\n      bindGroupLayouts.push(bindGroupLayout);\n\n      const bindGroup = t.device.createBindGroup({\n        layout: bindGroupLayout,\n        entries: bindGroupEntries,\n      });\n      bindGroups.push(bindGroup);\n\n      // Compute the expected output value in the output storage buffer\n      expectedValue += bindGroupIndex + 1;\n    }\n\n    const pipelineLayout = t.device.createPipelineLayout({\n      bindGroupLayouts,\n    });\n\n    const code = `\n    ${declarations}\n    @compute @workgroup_size(1)\n    fn main() {\n      ${statement};\n    }\n    `;\n    const module = t.device.createShaderModule({\n      code,\n    });\n    const computePipeline = t.device.createComputePipeline({\n      layout: pipelineLayout,\n      compute: {\n        module,\n      },\n    });\n\n    const commandEncoder = t.device.createCommandEncoder();\n    const computePassEncoder = commandEncoder.beginComputePass();\n    for (let i = 0; i < bindGroups.length; ++i) {\n      computePassEncoder.setBindGroup(i, bindGroups[i]);\n    }\n    computePassEncoder.setPipeline(computePipeline);\n    computePassEncoder.dispatchWorkgroups(1);\n    computePassEncoder.end();\n\n    t.queue.submit([commandEncoder.finish()]);\n\n    const expectedValues = new Uint32Array([expectedValue]);\n    t.expectGPUBufferValuesEqual(outputBuffer, expectedValues);\n  });\n"],"mappings":"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"}