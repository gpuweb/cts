{"version":3,"file":"labels.spec.js","names":["description","makeTestGroup","keysOf","getGPU","AllFeaturesMaxLimitsGPUTest","g","kTestFunctions","createBuffer","t","label","buffer","createBufferTracked","size","usage","GPUBufferUsage","COPY_DST","expect","destroy","requestDevice","gpu","rec","adapter","requestAdapter","device","requestDeviceTracked","createTexture","texture","createTextureTracked","format","GPUTextureUsage","RENDER_ATTACHMENT","createSampler","sampler","createBindGroupLayout","bindGroupLayout","entries","createPipelineLayout","pipelineLayout","bindGroupLayouts","createBindGroup","layout","bindGroup","createShaderModule","shaderModule","code","createComputePipeline","module","computePipeline","compute","entryPoint","createRenderPipeline","renderPipeline","vertex","fragment","targets","createComputePipelineAsync","createRenderPipelineAsync","createCommandEncoder","encoder","createRenderBundleEncoder","colorFormats","createQuerySet","querySet","createQuerySetTracked","type","count","beginRenderPass","label2","renderPass","colorAttachments","view","createView","loadOp","storeOp","end","finish","beginComputePass","computePass","commandBuffer","test","desc","params","u","combine","beginSubcases","fn","name","result","Promise","pipeline","layout1","getBindGroupLayout","layout2"],"sources":["../../../../src/webgpu/api/operation/labels.spec.ts"],"sourcesContent":["export const description = `\nTests for object labels.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { keysOf } from '../../../common/util/data_tables.js';\nimport { getGPU } from '../../../common/util/navigator_gpu.js';\nimport { AllFeaturesMaxLimitsGPUTest, GPUTest } from '../../gpu_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\ntype TestFunction = (t: GPUTest, label: string) => Promise<void> | void;\nconst kTestFunctions: { [name: string]: TestFunction } = {\n  createBuffer: (t: GPUTest, label: string) => {\n    const buffer = t.createBufferTracked({ size: 16, usage: GPUBufferUsage.COPY_DST, label });\n    t.expect(buffer.label === label);\n    buffer.destroy();\n    t.expect(buffer.label === label);\n  },\n\n  requestDevice: async (t: GPUTest, label: string) => {\n    const gpu = getGPU(t.rec);\n    const adapter = await gpu.requestAdapter();\n    t.expect(!!adapter);\n    const device = await t.requestDeviceTracked(adapter!, { label });\n    t.expect(!!device);\n    t.expect(device.label === label);\n    device.destroy();\n    t.expect(device.label === label);\n  },\n\n  createTexture: (t: GPUTest, label: string) => {\n    const texture = t.createTextureTracked({\n      label,\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    t.expect(texture.label === label);\n    texture.destroy();\n    t.expect(texture.label === label);\n  },\n\n  createSampler: (t: GPUTest, label: string) => {\n    const sampler = t.device.createSampler({ label });\n    t.expect(sampler.label === label);\n  },\n\n  createBindGroupLayout: (t: GPUTest, label: string) => {\n    const bindGroupLayout = t.device.createBindGroupLayout({ label, entries: [] });\n    t.expect(bindGroupLayout.label === label);\n  },\n\n  createPipelineLayout: (t: GPUTest, label: string) => {\n    const pipelineLayout = t.device.createPipelineLayout({ label, bindGroupLayouts: [] });\n    t.expect(pipelineLayout.label === label);\n  },\n\n  createBindGroup: (t: GPUTest, label: string) => {\n    const layout = t.device.createBindGroupLayout({ entries: [] });\n    const bindGroup = t.device.createBindGroup({ label, layout, entries: [] });\n    t.expect(bindGroup.label === label);\n  },\n\n  createShaderModule: (t: GPUTest, label: string) => {\n    const shaderModule = t.device.createShaderModule({\n      label,\n      code: `\n        @vertex fn vs() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    t.expect(shaderModule.label === label);\n  },\n\n  createComputePipeline: (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @compute @workgroup_size(1u) fn foo() {}\n      `,\n    });\n    const computePipeline = t.device.createComputePipeline({\n      label,\n      layout: 'auto',\n      compute: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(computePipeline.label === label);\n  },\n\n  createRenderPipeline: (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @vertex fn foo() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    const renderPipeline = t.device.createRenderPipeline({\n      label,\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'foo',\n      },\n      // Specify a color attachment so we have at least one render target. Otherwise, details here\n      // are not relevant to this test.\n      fragment: {\n        targets: [{ format: 'rgba8unorm' }],\n        module: t.device.createShaderModule({\n          code: `@fragment fn main() -> @location(0) vec4f { return vec4f(0); }`,\n        }),\n      },\n    });\n    t.expect(renderPipeline.label === label);\n  },\n\n  createComputePipelineAsync: async (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @compute @workgroup_size(1u) fn foo() {}\n      `,\n    });\n    const computePipeline = await t.device.createComputePipelineAsync({\n      label,\n      layout: 'auto',\n      compute: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(computePipeline.label === label);\n  },\n\n  createRenderPipelineAsync: async (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      label,\n      code: `\n        @vertex fn foo() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    const renderPipeline = await t.device.createRenderPipelineAsync({\n      label,\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'foo',\n      },\n      // Specify a color attachment so we have at least one render target. Otherwise, details here\n      // are not relevant to this test.\n      fragment: {\n        targets: [{ format: 'rgba8unorm' }],\n        module: t.device.createShaderModule({\n          code: `@fragment fn main() -> @location(0) vec4f { return vec4f(0); }`,\n        }),\n      },\n    });\n    t.expect(renderPipeline.label === label);\n  },\n\n  createCommandEncoder: (t: GPUTest, label: string) => {\n    const encoder = t.device.createCommandEncoder({ label });\n    t.expect(encoder.label === label);\n  },\n\n  createRenderBundleEncoder: (t: GPUTest, label: string) => {\n    const encoder = t.device.createRenderBundleEncoder({\n      label,\n      colorFormats: ['rgba8unorm'],\n    });\n    t.expect(encoder.label === label);\n  },\n\n  createQuerySet: (t: GPUTest, label: string) => {\n    const querySet = t.createQuerySetTracked({\n      label,\n      type: 'occlusion',\n      count: 1,\n    });\n    t.expect(querySet.label === label);\n    querySet.destroy();\n    t.expect(querySet.label === label);\n  },\n\n  beginRenderPass: (t: GPUTest, label: string) => {\n    const texture = t.createTextureTracked({\n      label,\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    const label2 = `${label}-2`;\n    const encoder = t.device.createCommandEncoder();\n    encoder.label = label2;\n    const renderPass = encoder.beginRenderPass({\n      label,\n      colorAttachments: [{ view: texture.createView(), loadOp: 'clear', storeOp: 'store' }],\n    });\n    t.expect(renderPass.label === label);\n    renderPass.end();\n    t.expect(renderPass.label === label);\n    encoder.finish();\n    t.expect(renderPass.label === label);\n    t.expect(encoder.label === label2);\n    texture.destroy();\n  },\n\n  beginComputePass: (t: GPUTest, label: string) => {\n    const label2 = `${label}-2`;\n    const encoder = t.device.createCommandEncoder();\n    encoder.label = label2;\n    const computePass = encoder.beginComputePass({ label });\n    t.expect(computePass.label === label);\n    computePass.end();\n    t.expect(computePass.label === label);\n    encoder.finish();\n    t.expect(computePass.label === label);\n    t.expect(encoder.label === label2);\n  },\n\n  finish: (t: GPUTest, label: string) => {\n    const encoder = t.device.createCommandEncoder();\n    const commandBuffer = encoder.finish({ label });\n    t.expect(commandBuffer.label === label);\n  },\n\n  createView: (t: GPUTest, label: string) => {\n    const texture = t.createTextureTracked({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    const view = texture.createView({ label });\n    t.expect(view.label === label);\n    texture.destroy();\n    t.expect(view.label === label);\n  },\n};\n\ng.test('object_has_descriptor_label')\n  .desc(\n    `\n  For every create function, the descriptor.label is carried over to the object.label.\n\n  TODO: test importExternalTexture\n  TODO: make a best effort and generating an error that is likely to use label. There's nothing to check for\n        but it may surface bugs related to unusual labels.\n    `\n  )\n  .params(u =>\n    u\n      .combine('name', keysOf(kTestFunctions))\n      .beginSubcases()\n      .combine('label', ['label', '\\0', 'null\\0in\\0label', 'ðŸŒžðŸ‘†'])\n  )\n  .fn(async t => {\n    const { name, label } = t.params;\n    const result = kTestFunctions[name](t, label);\n    if (result instanceof Promise) {\n      await result;\n    }\n  });\n\ng.test('wrappers_do_not_share_labels')\n  .desc('test that different wrapper objects for the same GPU object do not share labels')\n  .fn(t => {\n    const module = t.device.createShaderModule({\n      code: `\n        @group(0) @binding(0) var<uniform> pos: vec4f;\n        @vertex fn main() -> @builtin(position) vec4f {\n          return pos;\n        }\n      `,\n    });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'main',\n      },\n      // Specify a color attachment so we have at least one render target. Otherwise, details here\n      // are not relevant to this test.\n      fragment: {\n        targets: [{ format: 'rgba8unorm' }],\n        module: t.device.createShaderModule({\n          code: `@fragment fn main() -> @location(0) vec4f { return vec4f(0); }`,\n        }),\n      },\n    });\n    const layout1 = pipeline.getBindGroupLayout(0);\n    const layout2 = pipeline.getBindGroupLayout(0);\n    t.expect(layout1 !== layout2);\n\n    layout1.label = 'foo';\n    layout2.label = 'bar';\n\n    t.expect(layout1.label === 'foo');\n    t.expect(layout2.label === 'bar');\n  });\n"],"mappings":"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"}