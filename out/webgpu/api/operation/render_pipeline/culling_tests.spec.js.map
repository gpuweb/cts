{"version":3,"file":"culling_tests.spec.js","names":["description","makeTestGroup","isStencilTextureFormat","AllFeaturesMaxLimitsGPUTest","TextureTestMixin","faceIsCulled","face","frontFace","cullMode","faceColor","isCulled","Uint8Array","CullingTest","checkCornerPixels","texture","expectedTopLeftColor","expectedBottomRightColor","expectSinglePixelComparisonsAreOkInTexture","coord","x","y","exp","width","height","drawFullClipSpaceTriangleAndCheckCornerPixels","format","topology","color","depthStencil","depthStencilAttachment","device","encoder","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","setPipeline","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","Array","from","map","v","targets","primitive","draw","end","queue","submit","finish","g","test","desc","params","u","combine","beginSubcases","fn","t","depthStencilFormat","size","createTextureTracked","depthOrArrayLayers","usage","GPUTextureUsage","RENDER_ATTACHMENT","COPY_SRC","haveStencil","depthTexture","undefined","depthClearValue","depthLoadOp","depthStoreOp","depthCompare","depthWriteEnabled","stencilLoadOp","stencilStoreOp","stencilFront","passOp","stencilBack","clearValue","kCCWTriangleTopLeftColor","kCWTriangleBottomRightColor","k2ndDrawColor","isTopLeftCulled","kExpectedTopLeftColor","isBottomRightCulled","kExpectedBottomRightColor","compare","k3rdDrawColor"],"sources":["../../../../../src/webgpu/api/operation/render_pipeline/culling_tests.spec.ts"],"sourcesContent":["export const description = `Test culling and rasterization state.\n\nTest coverage:\nTest all culling combinations of GPUFrontFace and GPUCullMode show the correct output.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { isStencilTextureFormat, SizedTextureFormat } from '../../../format_info.js';\nimport { AllFeaturesMaxLimitsGPUTest, TextureTestMixin } from '../../../gpu_test.js';\n\nfunction faceIsCulled(face: 'cw' | 'ccw', frontFace: GPUFrontFace, cullMode: GPUCullMode): boolean {\n  return cullMode !== 'none' && (frontFace === face) === (cullMode === 'front');\n}\n\nfunction faceColor(face: 'cw' | 'ccw', frontFace: GPUFrontFace, cullMode: GPUCullMode): Uint8Array {\n  // front facing color is green, non front facing is red, background is blue\n  const isCulled = faceIsCulled(face, frontFace, cullMode);\n  if (!isCulled && face === frontFace) {\n    return new Uint8Array([0x00, 0xff, 0x00, 0xff]);\n  } else if (isCulled) {\n    return new Uint8Array([0x00, 0x00, 0xff, 0xff]);\n  } else {\n    return new Uint8Array([0xff, 0x00, 0x00, 0xff]);\n  }\n}\n\nclass CullingTest extends TextureTestMixin(AllFeaturesMaxLimitsGPUTest) {\n  checkCornerPixels(\n    texture: GPUTexture,\n    expectedTopLeftColor: Uint8Array,\n    expectedBottomRightColor: Uint8Array\n  ) {\n    this.expectSinglePixelComparisonsAreOkInTexture({ texture }, [\n      { coord: { x: 0, y: 0 }, exp: expectedTopLeftColor },\n      { coord: { x: texture.width - 1, y: texture.height - 1 }, exp: expectedBottomRightColor },\n    ]);\n  }\n\n  drawFullClipSpaceTriangleAndCheckCornerPixels(\n    texture: GPUTexture,\n    format: SizedTextureFormat,\n    topology: GPUPrimitiveTopology,\n    color: Uint8Array,\n    depthStencil: GPUDepthStencilState,\n    depthStencilAttachment: GPURenderPassDepthStencilAttachment,\n    expectedTopLeftColor: Uint8Array,\n    expectedBottomRightColor: Uint8Array\n  ) {\n    const { device } = this;\n    const encoder = device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: texture.createView(),\n          loadOp: 'load',\n          storeOp: 'store',\n        },\n      ],\n      depthStencilAttachment,\n    });\n\n    pass.setPipeline(\n      device.createRenderPipeline({\n        layout: 'auto',\n        vertex: {\n          module: device.createShaderModule({\n            code: `\n              @vertex fn main(\n                @builtin(vertex_index) VertexIndex : u32\n                ) -> @builtin(position) vec4<f32> {\n                  var pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n                    vec2<f32>(-1.0, -1.0),\n                    vec2<f32>( 3.0, -1.0),\n                    vec2<f32>(-1.0,  3.0));\n                return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n              }`,\n          }),\n          entryPoint: 'main',\n        },\n        fragment: {\n          module: device.createShaderModule({\n            code: `\n              @fragment fn main() -> @location(0) vec4<f32> {\n                return vec4f(${Array.from(color).map(v => v / 255)});\n              }`,\n          }),\n          entryPoint: 'main',\n          targets: [{ format }],\n        },\n        primitive: {\n          topology,\n        },\n        depthStencil,\n      })\n    );\n    pass.draw(3);\n    pass.end();\n\n    device.queue.submit([encoder.finish()]);\n\n    this.checkCornerPixels(texture, expectedTopLeftColor, expectedBottomRightColor);\n  }\n}\n\nexport const g = makeTestGroup(CullingTest);\n\ng.test('culling')\n  .desc(\n    `\n    Test 2 triangles with different winding orders:\n\n    - Test that the counter-clock wise triangle has correct output for:\n      - All FrontFaces (ccw, cw)\n      - All CullModes (none, front, back)\n      - All depth stencil attachment types (none, depth24plus, depth32float, depth24plus-stencil8)\n      - Some primitive topologies (triangle-list, triangle-strip)\n\n    - Test that the clock wise triangle has correct output for:\n      - All FrontFaces (ccw, cw)\n      - All CullModes (none, front, back)\n      - All depth stencil attachment types (none, depth24plus, depth32float, depth24plus-stencil8)\n      - Some primitive topologies (triangle-list, triangle-strip)\n    `\n  )\n  .params(u =>\n    u\n      .combine('frontFace', ['ccw', 'cw'] as const)\n      .combine('cullMode', ['none', 'front', 'back'] as const)\n      .beginSubcases()\n      .combine('depthStencilFormat', [\n        null,\n        'depth24plus',\n        'depth32float',\n        'depth24plus-stencil8',\n      ] as const)\n      .combine('topology', ['triangle-list', 'triangle-strip'] as const)\n  )\n  .fn(t => {\n    const { frontFace, cullMode, depthStencilFormat, topology } = t.params;\n    const size = 4;\n    const format = 'rgba8unorm';\n\n    const texture = t.createTextureTracked({\n      size: { width: size, height: size, depthOrArrayLayers: 1 },\n      format,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,\n    });\n\n    const haveStencil = depthStencilFormat && isStencilTextureFormat(depthStencilFormat);\n    let depthTexture: GPUTexture | undefined = undefined;\n    let depthStencilAttachment: GPURenderPassDepthStencilAttachment | undefined = undefined;\n    let depthStencil: GPUDepthStencilState | undefined = undefined;\n    if (depthStencilFormat) {\n      depthTexture = t.createTextureTracked({\n        size: { width: size, height: size, depthOrArrayLayers: 1 },\n        format: depthStencilFormat,\n        usage: GPUTextureUsage.RENDER_ATTACHMENT,\n      });\n\n      depthStencilAttachment = {\n        view: depthTexture.createView(),\n        depthClearValue: 1.0,\n        depthLoadOp: 'clear',\n        depthStoreOp: 'store',\n      };\n\n      depthStencil = {\n        format: depthStencilFormat as GPUTextureFormat,\n        depthCompare: 'less',\n        depthWriteEnabled: true,\n      };\n\n      if (haveStencil) {\n        depthStencilAttachment.stencilLoadOp = 'clear';\n        depthStencilAttachment.stencilStoreOp = 'store';\n        depthStencil.stencilFront = { passOp: 'increment-clamp' };\n        depthStencil.stencilBack = { passOp: 'increment-clamp' };\n      }\n    }\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: texture.createView(),\n          clearValue: [0, 0, 1, 1],\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n      depthStencilAttachment,\n    });\n\n    // Draw triangles with different winding orders:\n    //\n    // for triangle-list, 2 triangles\n    //   1. The top-left one is counterclockwise (CCW)\n    //   2. The bottom-right one is clockwise (CW)\n    //\n    //     0---2---+\n    //     |   |   |\n    //     |   |   |\n    //     1---+---4\n    //     |   |   |\n    //     |   |   |\n    //     +---3---5\n    //\n    // for triangle-strip, 4 triangles\n    // note: for triangle-strip the index order swaps every other triangle\n    // so the order is 012, 213, 234, 435\n    //\n    //   1. The top left is counterclockwise (CCW)\n    //   2. zero size\n    //   3. zero size\n    //   4. The bottom right one is clockwise (CW)\n    //\n    //         0\n    //         |\n    //         |\n    //     +---+---+\n    //     |   |   |\n    //     |   |   |\n    // 1---+---23--+---5\n    //     |   |   |\n    //     |   |   |\n    //     +---+---+\n    //         |\n    //         |\n    //         4\n    pass.setPipeline(\n      t.device.createRenderPipeline({\n        layout: 'auto',\n        vertex: {\n          module: t.device.createShaderModule({\n            code: `\n              @vertex fn main(\n                @builtin(vertex_index) VertexIndex : u32\n                ) -> @builtin(position) vec4<f32> {\n                  var pos : array<vec2<f32>, 6> = array<vec2<f32>, 6>(\n                ${\n                  topology === 'triangle-list'\n                    ? `\n                    vec2<f32>(-1.0,  1.0),\n                    vec2<f32>(-1.0,  0.0),\n                    vec2<f32>( 0.0,  1.0),\n                    vec2<f32>( 0.0, -1.0),\n                    vec2<f32>( 1.0,  0.0),\n                    vec2<f32>( 1.0, -1.0));\n                `\n                    : `\n                    vec2<f32>( 0.0,  2.0),\n                    vec2<f32>(-2.0,  0.0),\n                    vec2<f32>( 0.0,  0.0),\n                    vec2<f32>( 0.0,  0.0),\n                    vec2<f32>( 0.0, -2.0),\n                    vec2<f32>( 2.0,  0.0));\n                `\n                }\n                return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n              }`,\n          }),\n          entryPoint: 'main',\n        },\n        fragment: {\n          module: t.device.createShaderModule({\n            code: `\n              @fragment fn main(\n                @builtin(front_facing) FrontFacing : bool\n                ) -> @location(0) vec4<f32> {\n                var color : vec4<f32>;\n                if (FrontFacing) {\n                  color = vec4<f32>(0.0, 1.0, 0.0, 1.0);\n                } else {\n                  color = vec4<f32>(1.0, 0.0, 0.0, 1.0);\n                }\n                return color;\n              }`,\n          }),\n          entryPoint: 'main',\n          targets: [{ format }],\n        },\n        primitive: {\n          topology,\n          frontFace,\n          cullMode,\n        },\n        depthStencil,\n      })\n    );\n    pass.draw(6);\n    pass.end();\n\n    t.device.queue.submit([encoder.finish()]);\n\n    // front facing color is green, non front facing is red, background is blue\n    const kCCWTriangleTopLeftColor = faceColor('ccw', frontFace, cullMode);\n    const kCWTriangleBottomRightColor = faceColor('cw', frontFace, cullMode);\n    t.checkCornerPixels(texture, kCCWTriangleTopLeftColor, kCWTriangleBottomRightColor);\n\n    if (depthTexture) {\n      // draw a triangle that covers all of clip space in yellow at the same depth\n      // as the previous triangles with the depth test set to 'less'. We should only\n      // draw yellow where the previous triangles did not.\n      depthStencilAttachment!.depthLoadOp = 'load';\n\n      if (haveStencil) {\n        depthStencilAttachment!.stencilLoadOp = 'load';\n        depthStencil!.stencilFront!.passOp = 'keep';\n        depthStencil!.stencilBack!.passOp = 'keep';\n      }\n\n      const k2ndDrawColor = new Uint8Array([255, 255, 0, 255]);\n\n      const isTopLeftCulled = faceIsCulled('ccw', frontFace, cullMode);\n      const kExpectedTopLeftColor = isTopLeftCulled ? k2ndDrawColor : kCCWTriangleTopLeftColor;\n\n      const isBottomRightCulled = faceIsCulled('cw', frontFace, cullMode);\n      const kExpectedBottomRightColor = isBottomRightCulled\n        ? k2ndDrawColor\n        : kCWTriangleBottomRightColor;\n\n      t.drawFullClipSpaceTriangleAndCheckCornerPixels(\n        texture,\n        format,\n        topology,\n        k2ndDrawColor,\n        depthStencil as GPUDepthStencilState,\n        depthStencilAttachment as GPURenderPassDepthStencilAttachment,\n        kExpectedTopLeftColor,\n        kExpectedBottomRightColor\n      );\n\n      if (haveStencil) {\n        // draw a triangle that covers all of clip space in cyan with the stencil\n        // compare set to 'equal'. The reference value defaults to 0 so we should\n        // only render cyan where the first two triangles did not.\n        depthStencil!.depthCompare = 'always';\n        depthStencil!.stencilFront!.compare = 'equal';\n        depthStencil!.stencilBack!.compare = 'equal';\n\n        const k3rdDrawColor = new Uint8Array([0, 255, 255, 255]);\n        const kExpectedTopLeftColor = isTopLeftCulled ? k3rdDrawColor : kCCWTriangleTopLeftColor;\n        const kExpectedBottomRightColor = isBottomRightCulled\n          ? k3rdDrawColor\n          : kCWTriangleBottomRightColor;\n\n        t.drawFullClipSpaceTriangleAndCheckCornerPixels(\n          texture,\n          format,\n          topology,\n          k3rdDrawColor,\n          depthStencil as GPUDepthStencilState,\n          depthStencilAttachment as GPURenderPassDepthStencilAttachment,\n          kExpectedTopLeftColor,\n          kExpectedBottomRightColor\n        );\n      }\n    }\n  });\n"],"mappings":"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"}