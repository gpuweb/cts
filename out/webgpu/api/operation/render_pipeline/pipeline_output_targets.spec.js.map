{"version":3,"file":"pipeline_output_targets.spec.js","names":["description","makeTestGroup","range","computeBytesPerSampleFromFormats","kRenderableColorTextureFormats","kTextureFormatInfo","GPUTest","TextureTestMixin","getFragmentShaderCodeWithOutput","getPlainTypeInfo","kTexelRepresentationInfo","kVertexShader","g","attachmentsIntWriteValues","R","G","B","A","attachmentsFloatWriteValues","test","desc","params","u","combine","beginSubcases","expand","p","attachmentCount","i","beforeAllSubcases","t","info","format","skipIfTextureFormatNotSupported","selectDeviceForRenderableColorFormatOrSkipTestCase","selectDeviceOrSkipTestCase","feature","fn","emptyAttachmentId","componentCount","componentOrder","length","pixelByteCost","colorRender","byteCost","skipIf","undefined","device","limits","maxColorAttachmentBytesPerSample","writeValues","color","type","renderTargets","createTextureTracked","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","COPY_SRC","RENDER_ATTACHMENT","pipeline","createRenderPipeline","layout","vertex","module","createShaderModule","code","entryPoint","fragment","values","plainType","targets","primitive","topology","encoder","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","createView","clearValue","r","b","a","loadOp","storeOp","setPipeline","draw","end","queue","submit","finish","expectSinglePixelComparisonsAreOkInTexture","texture","coord","x","y","exp","filter","renderTarget","expectSingleColor","combineWithParams","_result","output","colorSrcFactor","colorDstFactor","alphaSrcFactor","alphaDstFactor","blend","srcFactor","dstFactor","operation","alpha"],"sources":["../../../../../src/webgpu/api/operation/render_pipeline/pipeline_output_targets.spec.ts"],"sourcesContent":["export const description = `\n- Test pipeline outputs with different color attachment number, formats, component counts, etc.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport {\n  computeBytesPerSampleFromFormats,\n  kRenderableColorTextureFormats,\n  kTextureFormatInfo,\n} from '../../../format_info.js';\nimport { GPUTest, TextureTestMixin } from '../../../gpu_test.js';\nimport { getFragmentShaderCodeWithOutput, getPlainTypeInfo } from '../../../util/shader.js';\nimport { kTexelRepresentationInfo } from '../../../util/texture/texel_data.js';\n\nconst kVertexShader = `\n@vertex fn main(\n@builtin(vertex_index) VertexIndex : u32\n) -> @builtin(position) vec4<f32> {\n  var pos : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n      vec2<f32>(-1.0, -3.0),\n      vec2<f32>(3.0, 1.0),\n      vec2<f32>(-1.0, 1.0));\n  return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n}\n`;\n\nexport const g = makeTestGroup(TextureTestMixin(GPUTest));\n\n// Values to write into each attachment\n// We make values different for each attachment index and each channel\n// to make sure they didn't get mixed up\n\n// Clamp alpha to 3 to avoid comparing a large expected value with a max 3 value for rgb10a2uint\n// MAINTENANCE_TODO: Make TexelRepresentation.numericRange per-component and use that.\nconst attachmentsIntWriteValues = [\n  { R: 1, G: 2, B: 3, A: 1 },\n  { R: 5, G: 6, B: 7, A: 2 },\n  { R: 9, G: 10, B: 11, A: 3 },\n  { R: 13, G: 14, B: 15, A: 0 },\n];\nconst attachmentsFloatWriteValues = [\n  { R: 0.12, G: 0.34, B: 0.56, A: 0 },\n  { R: 0.78, G: 0.9, B: 0.19, A: 1 },\n  { R: 0.28, G: 0.37, B: 0.46, A: 0.3 },\n  { R: 0.55, G: 0.64, B: 0.73, A: 1 },\n];\n\ng.test('color,attachments')\n  .desc(`Test that pipeline with sparse color attachments write values correctly.`)\n  .params(u =>\n    u\n      .combine('format', kRenderableColorTextureFormats)\n      .beginSubcases()\n      .combine('attachmentCount', [2, 3, 4])\n      .expand('emptyAttachmentId', p => range(p.attachmentCount, i => i))\n  )\n  .beforeAllSubcases(t => {\n    const info = kTextureFormatInfo[t.params.format];\n    t.skipIfTextureFormatNotSupported(t.params.format);\n    t.selectDeviceForRenderableColorFormatOrSkipTestCase(t.params.format);\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { format, attachmentCount, emptyAttachmentId } = t.params;\n    const componentCount = kTexelRepresentationInfo[format].componentOrder.length;\n    const info = kTextureFormatInfo[format];\n\n    // We only need to test formats that have a valid color attachment bytes per sample.\n    const pixelByteCost = kTextureFormatInfo[format].colorRender?.byteCost;\n    t.skipIf(\n      pixelByteCost === undefined ||\n        computeBytesPerSampleFromFormats(range(attachmentCount, () => format)) >\n          t.device.limits.maxColorAttachmentBytesPerSample\n    );\n\n    const writeValues =\n      info.color.type === 'sint' || info.color.type === 'uint'\n        ? attachmentsIntWriteValues\n        : attachmentsFloatWriteValues;\n\n    const renderTargets = range(attachmentCount, () =>\n      t.createTextureTracked({\n        format,\n        size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n        usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n      })\n    );\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kVertexShader,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: getFragmentShaderCodeWithOutput(\n            range(attachmentCount, i =>\n              i === emptyAttachmentId\n                ? null\n                : {\n                    values: [\n                      writeValues[i].R,\n                      writeValues[i].G,\n                      writeValues[i].B,\n                      writeValues[i].A,\n                    ],\n                    plainType: getPlainTypeInfo(info.color.type),\n                    componentCount,\n                  }\n            )\n          ),\n        }),\n        entryPoint: 'main',\n        targets: range(attachmentCount, i => (i === emptyAttachmentId ? null : { format })),\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: range(attachmentCount, i =>\n        i === emptyAttachmentId\n          ? null\n          : {\n              view: renderTargets[i].createView(),\n              clearValue: { r: 0.5, g: 0.5, b: 0.5, a: 0.5 },\n              loadOp: 'clear',\n              storeOp: 'store',\n            }\n      ),\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n    t.device.queue.submit([encoder.finish()]);\n\n    for (let i = 0; i < attachmentCount; i++) {\n      if (i === emptyAttachmentId) {\n        continue;\n      }\n      t.expectSinglePixelComparisonsAreOkInTexture({ texture: renderTargets[i] }, [\n        { coord: { x: 0, y: 0 }, exp: writeValues[i] },\n      ]);\n    }\n  });\n\ng.test('color,component_count')\n  .desc(\n    `Test that extra components of the output (e.g. f32, vec2<f32>, vec3<f32>, vec4<f32>) are discarded.`\n  )\n  .params(u =>\n    u\n      .combine('format', kRenderableColorTextureFormats)\n      .beginSubcases()\n      .combine('componentCount', [1, 2, 3, 4])\n      .filter(x => x.componentCount >= kTexelRepresentationInfo[x.format].componentOrder.length)\n  )\n  .beforeAllSubcases(t => {\n    const info = kTextureFormatInfo[t.params.format];\n    t.skipIfTextureFormatNotSupported(t.params.format);\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { format, componentCount } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    // expected RGBA values\n    // extra channels are discarded\n    const values = [0, 1, 0, 1];\n\n    const renderTarget = t.createTextureTracked({\n      format,\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kVertexShader,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: getFragmentShaderCodeWithOutput([\n            {\n              values,\n              plainType: getPlainTypeInfo(info.color.type),\n              componentCount,\n            },\n          ]),\n        }),\n        entryPoint: 'main',\n        targets: [{ format }],\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: renderTarget.createView(),\n          clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n    t.device.queue.submit([encoder.finish()]);\n\n    t.expectSingleColor(renderTarget, format, {\n      size: [1, 1, 1],\n      exp: { R: values[0], G: values[1], B: values[2], A: values[3] },\n    });\n  });\n\ng.test('color,component_count,blend')\n  .desc(\n    `Test that blending behaves correctly when:\n- fragment output has no alpha, but the src alpha is not used for the blend operation indicated by blend factors\n- attachment format has no alpha, and the dst alpha should be assumed as 1\n\nThe attachment has a load value of [1, 0, 0, 1]\n`\n  )\n  .params(u =>\n    u\n      .combine('format', ['r8unorm', 'rg8unorm', 'rgba8unorm', 'bgra8unorm'] as const)\n      .beginSubcases()\n      // _result is expected values in the color attachment (extra channels are discarded)\n      // output is the fragment shader output vector\n      // 0.498 -> 0x7f, 0.502 -> 0x80\n      .combineWithParams([\n        // fragment output has no alpha\n        {\n          _result: [0, 0, 0, 0],\n          output: [0],\n          colorSrcFactor: 'one',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 0, 0, 0],\n          output: [0],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [1, 0, 0, 0],\n          output: [0],\n          colorSrcFactor: 'one-minus-dst-alpha',\n          colorDstFactor: 'dst-alpha',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'one',\n        },\n        {\n          _result: [0.498, 0, 0, 0],\n          output: [0.498],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'one',\n        },\n        {\n          _result: [0, 1, 0, 0],\n          output: [0, 1],\n          colorSrcFactor: 'one',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 1, 0, 0],\n          output: [0, 1],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [1, 0, 0, 0],\n          output: [0, 1],\n          colorSrcFactor: 'one-minus-dst-alpha',\n          colorDstFactor: 'dst-alpha',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'one',\n        },\n        {\n          _result: [0, 1, 0, 0],\n          output: [0, 1, 0],\n          colorSrcFactor: 'one',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 1, 0, 0],\n          output: [0, 1, 0],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [1, 0, 0, 0],\n          output: [0, 1, 0],\n          colorSrcFactor: 'one-minus-dst-alpha',\n          colorDstFactor: 'dst-alpha',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'one',\n        },\n        // fragment output has alpha\n        {\n          _result: [0.502, 1, 0, 0.498],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'one',\n          colorDstFactor: 'one-minus-src-alpha',\n          alphaSrcFactor: 'one',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0.502, 0.498, 0, 0.498],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'src-alpha',\n          colorDstFactor: 'one-minus-src-alpha',\n          alphaSrcFactor: 'one',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 1, 0, 0.498],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'one',\n          alphaDstFactor: 'zero',\n        },\n        {\n          _result: [0, 1, 0, 0.498],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'dst-alpha',\n          colorDstFactor: 'zero',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'src',\n        },\n        {\n          _result: [1, 0, 0, 1],\n          output: [0, 1, 0, 0.498],\n          colorSrcFactor: 'one-minus-dst-alpha',\n          colorDstFactor: 'dst-alpha',\n          alphaSrcFactor: 'zero',\n          alphaDstFactor: 'dst-alpha',\n        },\n      ] as const)\n      .filter(x => x.output.length >= kTexelRepresentationInfo[x.format].componentOrder.length)\n  )\n  .beforeAllSubcases(t => {\n    const info = kTextureFormatInfo[t.params.format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const {\n      format,\n      _result,\n      output,\n      colorSrcFactor,\n      colorDstFactor,\n      alphaSrcFactor,\n      alphaDstFactor,\n    } = t.params;\n    const componentCount = output.length;\n    const info = kTextureFormatInfo[format];\n\n    const renderTarget = t.createTextureTracked({\n      format,\n      size: { width: 1, height: 1, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.COPY_SRC | GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({\n          code: kVertexShader,\n        }),\n        entryPoint: 'main',\n      },\n      fragment: {\n        module: t.device.createShaderModule({\n          code: getFragmentShaderCodeWithOutput([\n            {\n              values: output,\n              plainType: getPlainTypeInfo(info.color.type),\n              componentCount,\n            },\n          ]),\n        }),\n        entryPoint: 'main',\n        targets: [\n          {\n            format,\n            blend: {\n              color: {\n                srcFactor: colorSrcFactor,\n                dstFactor: colorDstFactor,\n                operation: 'add',\n              },\n              alpha: {\n                srcFactor: alphaSrcFactor,\n                dstFactor: alphaDstFactor,\n                operation: 'add',\n              },\n            },\n          },\n        ],\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: renderTarget.createView(),\n          clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n    t.device.queue.submit([encoder.finish()]);\n\n    t.expectSingleColor(renderTarget, format, {\n      size: [1, 1, 1],\n      exp: { R: _result[0], G: _result[1], B: _result[2], A: _result[3] },\n    });\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,KAAK,QAAQ,iCAAiC;AACvD;EACEC,gCAAgC;EAChCC,8BAA8B;EAC9BC,kBAAkB;AACb,yBAAyB;AAChC,SAASC,OAAO,EAAEC,gBAAgB,QAAQ,sBAAsB;AAChE,SAASC,+BAA+B,EAAEC,gBAAgB,QAAQ,yBAAyB;AAC3F,SAASC,wBAAwB,QAAQ,qCAAqC;;AAE9E,MAAMC,aAAa,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,OAAO,MAAMC,CAAC,GAAGX,aAAa,CAACM,gBAAgB,CAACD,OAAO,CAAC,CAAC;;AAEzD;AACA;AACA;;AAEA;AACA;AACA,MAAMO,yBAAyB,GAAG;AAChC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,EAAEH,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,EAAEH,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,EAAE,EAAEC,CAAC,EAAE,EAAE,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,EAAEH,CAAC,EAAE,EAAE,EAAEC,CAAC,EAAE,EAAE,EAAEC,CAAC,EAAE,EAAE,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,CAC9B;;AACD,MAAMC,2BAA2B,GAAG;AAClC,EAAEJ,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,EAAEH,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,EAAEH,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;AACrC,EAAEH,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,CACpC;;;AAEDL,CAAC,CAACO,IAAI,CAAC,mBAAmB,CAAC;AACxBC,IAAI,CAAE,0EAAyE,CAAC;AAChFC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,QAAQ,EAAEnB,8BAA8B,CAAC;AACjDoB,aAAa,CAAC,CAAC;AACfD,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACrCE,MAAM,CAAC,mBAAmB,EAAE,CAAAC,CAAC,KAAIxB,KAAK,CAACwB,CAAC,CAACC,eAAe,EAAE,CAAAC,CAAC,KAAIA,CAAC,CAAC;AACtE,CAAC;AACAC,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,MAAMC,IAAI,GAAG1B,kBAAkB,CAACyB,CAAC,CAACT,MAAM,CAACW,MAAM,CAAC;EAChDF,CAAC,CAACG,+BAA+B,CAACH,CAAC,CAACT,MAAM,CAACW,MAAM,CAAC;EAClDF,CAAC,CAACI,kDAAkD,CAACJ,CAAC,CAACT,MAAM,CAACW,MAAM,CAAC;EACrEF,CAAC,CAACK,0BAA0B,CAACJ,IAAI,CAACK,OAAO,CAAC;AAC5C,CAAC,CAAC;AACDC,EAAE,CAAC,CAAAP,CAAC,KAAI;EACP,MAAM,EAAEE,MAAM,EAAEL,eAAe,EAAEW,iBAAiB,CAAC,CAAC,GAAGR,CAAC,CAACT,MAAM;EAC/D,MAAMkB,cAAc,GAAG7B,wBAAwB,CAACsB,MAAM,CAAC,CAACQ,cAAc,CAACC,MAAM;EAC7E,MAAMV,IAAI,GAAG1B,kBAAkB,CAAC2B,MAAM,CAAC;;EAEvC;EACA,MAAMU,aAAa,GAAGrC,kBAAkB,CAAC2B,MAAM,CAAC,CAACW,WAAW,EAAEC,QAAQ;EACtEd,CAAC,CAACe,MAAM;IACNH,aAAa,KAAKI,SAAS;IACzB3C,gCAAgC,CAACD,KAAK,CAACyB,eAAe,EAAE,MAAMK,MAAM,CAAC,CAAC;IACpEF,CAAC,CAACiB,MAAM,CAACC,MAAM,CAACC;EACtB,CAAC;;EAED,MAAMC,WAAW;EACfnB,IAAI,CAACoB,KAAK,CAACC,IAAI,KAAK,MAAM,IAAIrB,IAAI,CAACoB,KAAK,CAACC,IAAI,KAAK,MAAM;EACpDvC,yBAAyB;EACzBK,2BAA2B;;EAEjC,MAAMmC,aAAa,GAAGnD,KAAK,CAACyB,eAAe,EAAE;EAC3CG,CAAC,CAACwB,oBAAoB,CAAC;IACrBtB,MAAM;IACNuB,IAAI,EAAE,EAAEC,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC,CAAC;IACpDC,KAAK,EAAEC,eAAe,CAACC,QAAQ,GAAGD,eAAe,CAACE;EACpD,CAAC;EACH,CAAC;EACD,MAAMC,QAAQ,GAAGjC,CAAC,CAACiB,MAAM,CAACiB,oBAAoB,CAAC;IAC7CC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACNC,MAAM,EAAErC,CAAC,CAACiB,MAAM,CAACqB,kBAAkB,CAAC;QAClCC,IAAI,EAAE1D;MACR,CAAC,CAAC;MACF2D,UAAU,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACRJ,MAAM,EAAErC,CAAC,CAACiB,MAAM,CAACqB,kBAAkB,CAAC;QAClCC,IAAI,EAAE7D,+BAA+B;UACnCN,KAAK,CAACyB,eAAe,EAAE,CAAAC,CAAC;UACtBA,CAAC,KAAKU,iBAAiB;UACnB,IAAI;UACJ;YACEkC,MAAM,EAAE;YACNtB,WAAW,CAACtB,CAAC,CAAC,CAACd,CAAC;YAChBoC,WAAW,CAACtB,CAAC,CAAC,CAACb,CAAC;YAChBmC,WAAW,CAACtB,CAAC,CAAC,CAACZ,CAAC;YAChBkC,WAAW,CAACtB,CAAC,CAAC,CAACX,CAAC,CACjB;;YACDwD,SAAS,EAAEhE,gBAAgB,CAACsB,IAAI,CAACoB,KAAK,CAACC,IAAI,CAAC;YAC5Cb;UACF;UACN;QACF;MACF,CAAC,CAAC;MACF+B,UAAU,EAAE,MAAM;MAClBI,OAAO,EAAExE,KAAK,CAACyB,eAAe,EAAE,CAAAC,CAAC,KAAKA,CAAC,KAAKU,iBAAiB,GAAG,IAAI,GAAG,EAAEN,MAAM,CAAC,CAAE;IACpF,CAAC;IACD2C,SAAS,EAAE,EAAEC,QAAQ,EAAE,eAAe,CAAC;EACzC,CAAC,CAAC;;EAEF,MAAMC,OAAO,GAAG/C,CAAC,CAACiB,MAAM,CAAC+B,oBAAoB,CAAC,CAAC;EAC/C,MAAMC,IAAI,GAAGF,OAAO,CAACG,eAAe,CAAC;IACnCC,gBAAgB,EAAE/E,KAAK,CAACyB,eAAe,EAAE,CAAAC,CAAC;IACxCA,CAAC,KAAKU,iBAAiB;IACnB,IAAI;IACJ;MACE4C,IAAI,EAAE7B,aAAa,CAACzB,CAAC,CAAC,CAACuD,UAAU,CAAC,CAAC;MACnCC,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAEzE,CAAC,EAAE,GAAG,EAAE0E,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC9CC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX;IACN;EACF,CAAC,CAAC;EACFV,IAAI,CAACW,WAAW,CAAC3B,QAAQ,CAAC;EAC1BgB,IAAI,CAACY,IAAI,CAAC,CAAC,CAAC;EACZZ,IAAI,CAACa,GAAG,CAAC,CAAC;EACV9D,CAAC,CAACiB,MAAM,CAAC8C,KAAK,CAACC,MAAM,CAAC,CAACjB,OAAO,CAACkB,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEzC,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,eAAe,EAAEC,CAAC,EAAE,EAAE;IACxC,IAAIA,CAAC,KAAKU,iBAAiB,EAAE;MAC3B;IACF;IACAR,CAAC,CAACkE,0CAA0C,CAAC,EAAEC,OAAO,EAAE5C,aAAa,CAACzB,CAAC,CAAC,CAAC,CAAC,EAAE;IAC1E,EAAEsE,KAAK,EAAE,EAAEC,CAAC,EAAE,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEC,GAAG,EAAEnD,WAAW,CAACtB,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;EACJ;AACF,CAAC,CAAC;;AAEJhB,CAAC,CAACO,IAAI,CAAC,uBAAuB,CAAC;AAC5BC,IAAI;EACF;AACH,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,QAAQ,EAAEnB,8BAA8B,CAAC;AACjDoB,aAAa,CAAC,CAAC;AACfD,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvC+E,MAAM,CAAC,CAAAH,CAAC,KAAIA,CAAC,CAAC5D,cAAc,IAAI7B,wBAAwB,CAACyF,CAAC,CAACnE,MAAM,CAAC,CAACQ,cAAc,CAACC,MAAM;AAC7F,CAAC;AACAZ,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,MAAMC,IAAI,GAAG1B,kBAAkB,CAACyB,CAAC,CAACT,MAAM,CAACW,MAAM,CAAC;EAChDF,CAAC,CAACG,+BAA+B,CAACH,CAAC,CAACT,MAAM,CAACW,MAAM,CAAC;EAClDF,CAAC,CAACK,0BAA0B,CAACJ,IAAI,CAACK,OAAO,CAAC;AAC5C,CAAC,CAAC;AACDC,EAAE,CAAC,CAAAP,CAAC,KAAI;EACP,MAAM,EAAEE,MAAM,EAAEO,cAAc,CAAC,CAAC,GAAGT,CAAC,CAACT,MAAM;EAC3C,MAAMU,IAAI,GAAG1B,kBAAkB,CAAC2B,MAAM,CAAC;;EAEvC;EACA;EACA,MAAMwC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;EAE3B,MAAM+B,YAAY,GAAGzE,CAAC,CAACwB,oBAAoB,CAAC;IAC1CtB,MAAM;IACNuB,IAAI,EAAE,EAAEC,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC,CAAC;IACpDC,KAAK,EAAEC,eAAe,CAACC,QAAQ,GAAGD,eAAe,CAACE;EACpD,CAAC,CAAC;;EAEF,MAAMC,QAAQ,GAAGjC,CAAC,CAACiB,MAAM,CAACiB,oBAAoB,CAAC;IAC7CC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACNC,MAAM,EAAErC,CAAC,CAACiB,MAAM,CAACqB,kBAAkB,CAAC;QAClCC,IAAI,EAAE1D;MACR,CAAC,CAAC;MACF2D,UAAU,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACRJ,MAAM,EAAErC,CAAC,CAACiB,MAAM,CAACqB,kBAAkB,CAAC;QAClCC,IAAI,EAAE7D,+BAA+B,CAAC;QACpC;UACEgE,MAAM;UACNC,SAAS,EAAEhE,gBAAgB,CAACsB,IAAI,CAACoB,KAAK,CAACC,IAAI,CAAC;UAC5Cb;QACF,CAAC;QACF;MACH,CAAC,CAAC;MACF+B,UAAU,EAAE,MAAM;MAClBI,OAAO,EAAE,CAAC,EAAE1C,MAAM,CAAC,CAAC;IACtB,CAAC;IACD2C,SAAS,EAAE,EAAEC,QAAQ,EAAE,eAAe,CAAC;EACzC,CAAC,CAAC;;EAEF,MAAMC,OAAO,GAAG/C,CAAC,CAACiB,MAAM,CAAC+B,oBAAoB,CAAC,CAAC;EAC/C,MAAMC,IAAI,GAAGF,OAAO,CAACG,eAAe,CAAC;IACnCC,gBAAgB,EAAE;IAChB;MACEC,IAAI,EAAEqB,YAAY,CAACpB,UAAU,CAAC,CAAC;MAC/BC,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAEzE,CAAC,EAAE,GAAG,EAAE0E,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC9CC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAC;;EAEL,CAAC,CAAC;EACFV,IAAI,CAACW,WAAW,CAAC3B,QAAQ,CAAC;EAC1BgB,IAAI,CAACY,IAAI,CAAC,CAAC,CAAC;EACZZ,IAAI,CAACa,GAAG,CAAC,CAAC;EACV9D,CAAC,CAACiB,MAAM,CAAC8C,KAAK,CAACC,MAAM,CAAC,CAACjB,OAAO,CAACkB,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEzCjE,CAAC,CAAC0E,iBAAiB,CAACD,YAAY,EAAEvE,MAAM,EAAE;IACxCuB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACf8C,GAAG,EAAE,EAAEvF,CAAC,EAAE0D,MAAM,CAAC,CAAC,CAAC,EAAEzD,CAAC,EAAEyD,MAAM,CAAC,CAAC,CAAC,EAAExD,CAAC,EAAEwD,MAAM,CAAC,CAAC,CAAC,EAAEvD,CAAC,EAAEuD,MAAM,CAAC,CAAC,CAAC,CAAC;EAChE,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEJ5D,CAAC,CAACO,IAAI,CAAC,6BAA6B,CAAC;AAClCC,IAAI;EACF;AACL;AACA;AACA;AACA;AACA;AACE,CAAC;AACAC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC;AACEC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,CAAU,CAAC;AAC/EC,aAAa,CAAC;AACf;AACA;AACA;AAAA,CACCiF,iBAAiB,CAAC;AACjB;AACA;EACEC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,CAAC;EACXC,cAAc,EAAE,KAAK;EACrBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,CAAC;EACXC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,CAAC;EACXC,cAAc,EAAE,qBAAqB;EACrCC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzBC,MAAM,EAAE,CAAC,KAAK,CAAC;EACfC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACdC,cAAc,EAAE,KAAK;EACrBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACdC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACdC,cAAc,EAAE,qBAAqB;EACrCC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjBC,cAAc,EAAE,KAAK;EACrBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjBC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjBC,cAAc,EAAE,qBAAqB;EACrCC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;AACA;EACEL,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC7BC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACxBC,cAAc,EAAE,KAAK;EACrBC,cAAc,EAAE,qBAAqB;EACrCC,cAAc,EAAE,KAAK;EACrBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC;EACjCC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACxBC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,qBAAqB;EACrCC,cAAc,EAAE,KAAK;EACrBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACzBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACxBC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,KAAK;EACrBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACzBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACxBC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACD;EACEL,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EACxBC,cAAc,EAAE,qBAAqB;EACrCC,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE,MAAM;EACtBC,cAAc,EAAE;AAClB,CAAC;AACO,CAAC;AACVT,MAAM,CAAC,CAAAH,CAAC,KAAIA,CAAC,CAACQ,MAAM,CAAClE,MAAM,IAAI/B,wBAAwB,CAACyF,CAAC,CAACnE,MAAM,CAAC,CAACQ,cAAc,CAACC,MAAM;AAC5F,CAAC;AACAZ,iBAAiB,CAAC,CAAAC,CAAC,KAAI;EACtB,MAAMC,IAAI,GAAG1B,kBAAkB,CAACyB,CAAC,CAACT,MAAM,CAACW,MAAM,CAAC;EAChDF,CAAC,CAACK,0BAA0B,CAACJ,IAAI,CAACK,OAAO,CAAC;AAC5C,CAAC,CAAC;AACDC,EAAE,CAAC,CAAAP,CAAC,KAAI;EACP,MAAM;IACJE,MAAM;IACN0E,OAAO;IACPC,MAAM;IACNC,cAAc;IACdC,cAAc;IACdC,cAAc;IACdC;EACF,CAAC,GAAGjF,CAAC,CAACT,MAAM;EACZ,MAAMkB,cAAc,GAAGoE,MAAM,CAAClE,MAAM;EACpC,MAAMV,IAAI,GAAG1B,kBAAkB,CAAC2B,MAAM,CAAC;;EAEvC,MAAMuE,YAAY,GAAGzE,CAAC,CAACwB,oBAAoB,CAAC;IAC1CtB,MAAM;IACNuB,IAAI,EAAE,EAAEC,KAAK,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAEC,kBAAkB,EAAE,CAAC,CAAC,CAAC;IACpDC,KAAK,EAAEC,eAAe,CAACC,QAAQ,GAAGD,eAAe,CAACE;EACpD,CAAC,CAAC;;EAEF,MAAMC,QAAQ,GAAGjC,CAAC,CAACiB,MAAM,CAACiB,oBAAoB,CAAC;IAC7CC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACNC,MAAM,EAAErC,CAAC,CAACiB,MAAM,CAACqB,kBAAkB,CAAC;QAClCC,IAAI,EAAE1D;MACR,CAAC,CAAC;MACF2D,UAAU,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACRJ,MAAM,EAAErC,CAAC,CAACiB,MAAM,CAACqB,kBAAkB,CAAC;QAClCC,IAAI,EAAE7D,+BAA+B,CAAC;QACpC;UACEgE,MAAM,EAAEmC,MAAM;UACdlC,SAAS,EAAEhE,gBAAgB,CAACsB,IAAI,CAACoB,KAAK,CAACC,IAAI,CAAC;UAC5Cb;QACF,CAAC;QACF;MACH,CAAC,CAAC;MACF+B,UAAU,EAAE,MAAM;MAClBI,OAAO,EAAE;MACP;QACE1C,MAAM;QACNgF,KAAK,EAAE;UACL7D,KAAK,EAAE;YACL8D,SAAS,EAAEL,cAAc;YACzBM,SAAS,EAAEL,cAAc;YACzBM,SAAS,EAAE;UACb,CAAC;UACDC,KAAK,EAAE;YACLH,SAAS,EAAEH,cAAc;YACzBI,SAAS,EAAEH,cAAc;YACzBI,SAAS,EAAE;UACb;QACF;MACF,CAAC;;IAEL,CAAC;IACDxC,SAAS,EAAE,EAAEC,QAAQ,EAAE,eAAe,CAAC;EACzC,CAAC,CAAC;;EAEF,MAAMC,OAAO,GAAG/C,CAAC,CAACiB,MAAM,CAAC+B,oBAAoB,CAAC,CAAC;EAC/C,MAAMC,IAAI,GAAGF,OAAO,CAACG,eAAe,CAAC;IACnCC,gBAAgB,EAAE;IAChB;MACEC,IAAI,EAAEqB,YAAY,CAACpB,UAAU,CAAC,CAAC;MAC/BC,UAAU,EAAE,EAAEC,CAAC,EAAE,GAAG,EAAEzE,CAAC,EAAE,GAAG,EAAE0E,CAAC,EAAE,GAAG,EAAEC,CAAC,EAAE,GAAG,CAAC,CAAC;MAC9CC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;IACX,CAAC;;EAEL,CAAC,CAAC;EACFV,IAAI,CAACW,WAAW,CAAC3B,QAAQ,CAAC;EAC1BgB,IAAI,CAACY,IAAI,CAAC,CAAC,CAAC;EACZZ,IAAI,CAACa,GAAG,CAAC,CAAC;EACV9D,CAAC,CAACiB,MAAM,CAAC8C,KAAK,CAACC,MAAM,CAAC,CAACjB,OAAO,CAACkB,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEzCjE,CAAC,CAAC0E,iBAAiB,CAACD,YAAY,EAAEvE,MAAM,EAAE;IACxCuB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACf8C,GAAG,EAAE,EAAEvF,CAAC,EAAE4F,OAAO,CAAC,CAAC,CAAC,EAAE3F,CAAC,EAAE2F,OAAO,CAAC,CAAC,CAAC,EAAE1F,CAAC,EAAE0F,OAAO,CAAC,CAAC,CAAC,EAAEzF,CAAC,EAAEyF,OAAO,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC,CAAC;AACJ,CAAC,CAAC"}