{"version":3,"file":"reflection.spec.js","names":["description","makeTestGroup","GPUConst","AllFeaturesMaxLimitsGPUTest","g","extractValuePropertyKeys","obj","key","kBufferSubcases","size","usage","BufferUsage","VERTEX","STORAGE","COPY_SRC","UNIFORM","MAP_READ","COPY_DST","INDEX","label","MAP_WRITE","invalid","test","desc","paramsSubcasesOnly","u","combine","fn","t","descriptor","params","expectValidationError","buffer","createBufferTracked","expect","filter","p","buffer2","bufferAsObject","buffer2AsObject","keys","includes","kTextureSubcases","width","height","format","TextureUsage","TEXTURE_BINDING","depthOrArrayLayers","RENDER_ATTACHMENT","mipLevelCount","dimension","sampleCount","Array","isArray","texture","createTextureTracked","textureWithSize","texture2","textureAsObject","texture2AsObject","k","kQuerySetSubcases","type","count","querySet","createQuerySetTracked","querySet2","querySetAsObject","querySet2AsObject"],"sources":["../../../../src/webgpu/api/operation/reflection.spec.ts"],"sourcesContent":["export const description = `\nTests that object attributes which reflect the object's creation properties are properly set.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { GPUConst } from '../../constants.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../gpu_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\nfunction* extractValuePropertyKeys(obj: { [k: string]: unknown }) {\n  for (const key in obj) {\n    if (typeof obj[key] !== 'function') {\n      yield key;\n    }\n  }\n}\n\nconst kBufferSubcases: readonly {\n  size: number;\n  usage: GPUBufferUsageFlags;\n  label?: string;\n  invalid?: boolean;\n}[] = [\n  { size: 4, usage: GPUConst.BufferUsage.VERTEX },\n  {\n    size: 16,\n    usage:\n      GPUConst.BufferUsage.STORAGE | GPUConst.BufferUsage.COPY_SRC | GPUConst.BufferUsage.UNIFORM,\n  },\n  { size: 32, usage: GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.COPY_DST },\n  { size: 40, usage: GPUConst.BufferUsage.INDEX, label: 'some label' },\n  {\n    size: 32,\n    usage: GPUConst.BufferUsage.MAP_READ | GPUConst.BufferUsage.MAP_WRITE,\n    invalid: true,\n  },\n] as const;\n\ng.test('buffer_reflection_attributes')\n  .desc(`For every buffer attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u => u.combine('descriptor', kBufferSubcases))\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    t.expectValidationError(() => {\n      const buffer = t.createBufferTracked(descriptor);\n\n      t.expect(buffer.size === descriptor.size);\n      t.expect(buffer.usage === descriptor.usage);\n    }, descriptor.invalid === true);\n  });\n\ng.test('buffer_creation_from_reflection')\n  .desc(\n    `\n    Check that you can create a buffer from a buffer's reflection.\n    This check is to insure that as WebGPU develops this path doesn't\n    suddenly break because of new reflection.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', kBufferSubcases).filter(p => !p.descriptor.invalid)\n  )\n\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    const buffer = t.createBufferTracked(descriptor);\n    const buffer2 = t.createBufferTracked(buffer);\n\n    const bufferAsObject = buffer as unknown as { [k: string]: unknown };\n    const buffer2AsObject = buffer2 as unknown as { [k: string]: unknown };\n    const keys = [...extractValuePropertyKeys(bufferAsObject)];\n\n    // Sanity check\n    t.expect(keys.includes('size'));\n    t.expect(keys.includes('usage'));\n    t.expect(keys.includes('label'));\n\n    for (const key of keys) {\n      t.expect(bufferAsObject[key] === buffer2AsObject[key], key);\n    }\n  });\n\nconst kTextureSubcases: readonly {\n  size: GPUExtent3D;\n  format: GPUTextureFormat;\n  usage: GPUTextureUsageFlags;\n  mipLevelCount?: number;\n  label?: string;\n  dimension?: GPUTextureDimension;\n  sampleCount?: number;\n  invalid?: boolean;\n}[] = [\n  {\n    size: { width: 4, height: 4 },\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n  },\n  {\n    size: { width: 4, height: 4 },\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    label: 'some label',\n  },\n  {\n    size: { width: 8, height: 8, depthOrArrayLayers: 8 },\n    format: 'bgra8unorm',\n    usage: GPUConst.TextureUsage.RENDER_ATTACHMENT | GPUConst.TextureUsage.COPY_SRC,\n  },\n  {\n    size: [4, 4],\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    mipLevelCount: 2,\n  },\n  {\n    size: [16, 16, 16],\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    dimension: '3d',\n  },\n  {\n    size: [32],\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    dimension: '1d',\n  },\n  {\n    size: { width: 4, height: 4 },\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.RENDER_ATTACHMENT,\n    sampleCount: 4,\n  },\n  {\n    size: { width: 4, height: 4 },\n    format: 'rgba8unorm',\n    usage: GPUConst.TextureUsage.TEXTURE_BINDING,\n    sampleCount: 4,\n    invalid: true,\n  },\n] as const;\n\ng.test('texture_reflection_attributes')\n  .desc(`For every texture attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u => u.combine('descriptor', kTextureSubcases))\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    let width: number;\n    let height: number;\n    let depthOrArrayLayers: number;\n    if (Array.isArray(descriptor.size)) {\n      width = descriptor.size[0];\n      height = descriptor.size[1] || 1;\n      depthOrArrayLayers = descriptor.size[2] || 1;\n    } else {\n      width = (descriptor.size as GPUExtent3DDict).width;\n      height = (descriptor.size as GPUExtent3DDict).height || 1;\n      depthOrArrayLayers = (descriptor.size as GPUExtent3DDict).depthOrArrayLayers || 1;\n    }\n\n    t.expectValidationError(() => {\n      const texture = t.createTextureTracked(descriptor);\n\n      t.expect(texture.width === width);\n      t.expect(texture.height === height);\n      t.expect(texture.depthOrArrayLayers === depthOrArrayLayers);\n      t.expect(texture.format === descriptor.format);\n      t.expect(texture.usage === descriptor.usage);\n      t.expect(texture.dimension === (descriptor.dimension || '2d'));\n      t.expect(texture.mipLevelCount === (descriptor.mipLevelCount || 1));\n      t.expect(texture.sampleCount === (descriptor.sampleCount || 1));\n    }, descriptor.invalid === true);\n  });\n\ninterface TextureWithSize extends GPUTexture {\n  size: GPUExtent3D;\n}\n\ng.test('texture_creation_from_reflection')\n  .desc(\n    `\n    Check that you can create a texture from a texture's reflection.\n    This check is to insure that as WebGPU develops this path doesn't\n    suddenly break because of new reflection.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', kTextureSubcases).filter(p => !p.descriptor.invalid)\n  )\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    const texture = t.createTextureTracked(descriptor);\n    const textureWithSize = texture as TextureWithSize;\n    textureWithSize.size = [texture.width, texture.height, texture.depthOrArrayLayers];\n    const texture2 = t.createTextureTracked(textureWithSize);\n\n    const textureAsObject = texture as unknown as { [k: string]: unknown };\n    const texture2AsObject = texture2 as unknown as { [k: string]: unknown };\n    const keys = [...extractValuePropertyKeys(textureAsObject)].filter(k => k !== 'size');\n\n    // Sanity check\n    t.expect(keys.includes('format'));\n    t.expect(keys.includes('usage'));\n    t.expect(keys.includes('label'));\n\n    for (const key of keys) {\n      t.expect(textureAsObject[key] === texture2AsObject[key], key);\n    }\n\n    // MAINTENANCE_TODO: Check this if it is made possible by a spec change.\n    //\n    //     texture3 = t.createTextureTracked({\n    //       ...texture,\n    //       size: [texture.width, texture.height, texture.depthOrArrayLayers],\n    //     });\n    //\n    // and this\n    //\n    //     texture3 = t.createTextureTracked({\n    //       size: [texture.width, texture.height, texture.depthOrArrayLayers],\n    //       ...texture,\n    //     });\n  });\n\nconst kQuerySetSubcases: readonly {\n  type: GPUQueryType;\n  count: number;\n  label?: string;\n  invalid?: boolean;\n}[] = [\n  { type: 'occlusion', count: 4 },\n  { type: 'occlusion', count: 16 },\n  { type: 'occlusion', count: 32, label: 'some label' },\n  { type: 'occlusion', count: 8193, invalid: true },\n] as const;\n\ng.test('query_set_reflection_attributes')\n  .desc(`For every queue attribute, the corresponding descriptor value is carried over.`)\n  .paramsSubcasesOnly(u => u.combine('descriptor', kQuerySetSubcases))\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    t.expectValidationError(() => {\n      const querySet = t.createQuerySetTracked(descriptor);\n\n      t.expect(querySet.type === descriptor.type);\n      t.expect(querySet.count === descriptor.count);\n    }, descriptor.invalid === true);\n  });\n\ng.test('query_set_creation_from_reflection')\n  .desc(\n    `\n    Check that you can create a queryset from a queryset's reflection.\n    This check is to insure that as WebGPU develops this path doesn't\n    suddenly break because of new reflection.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('descriptor', kQuerySetSubcases).filter(p => !p.descriptor.invalid)\n  )\n  .fn(t => {\n    const { descriptor } = t.params;\n\n    const querySet = t.createQuerySetTracked(descriptor);\n    const querySet2 = t.createQuerySetTracked(querySet);\n\n    const querySetAsObject = querySet as unknown as { [k: string]: unknown };\n    const querySet2AsObject = querySet2 as unknown as { [k: string]: unknown };\n    const keys = [...extractValuePropertyKeys(querySetAsObject)];\n\n    // Sanity check\n    t.expect(keys.includes('type'));\n    t.expect(keys.includes('count'));\n    t.expect(keys.includes('label'));\n\n    for (const key of keys) {\n      t.expect(querySetAsObject[key] === querySet2AsObject[key], key);\n    }\n  });\n"],"mappings":"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"}