{"version":3,"file":"texture_zero.spec.js","names":["description","makeTestGroup","unreachable","isMultisampledTextureFormat","kTextureFormatInfo","checkContentsByBufferCopy","checkContentsByTextureCopy","checkContentsByDepthTest","checkContentsByStencilTest","checkContentsBySampling","getRequiredTextureUsage","TextureZeroInitTest","kTestParams","UninitializeMethod","InitializedState","checkContentsImpl","Sample","CopyToBuffer","CopyToTexture","DepthTest","StencilTest","ColorBlending","t","skip","Storage","g","test","params","beforeAllSubcases","skipIfTextureFormatNotSupported","format","skipIfColorRenderableNotSupportedForFormat","selectDeviceOrSkipTestCase","feature","fn","skipIf","sampleCount","isCompatibility","usage","uninitializeMethod","readMethod","texture","createTextureTracked","size","textureWidth","textureHeight","textureDepthOrArrayLayers","dimension","mipLevelCount","canaryOnCreation","subresourceRange","iterateInitializedSubresources","initializeTexture","Canary","Creation","StoreOpClear","iterateUninitializedSubresources","discardTexture","Zero"],"sources":["../../../../../src/webgpu/api/operation/resource_init/texture_zero.spec.ts"],"sourcesContent":["export const description = `\nTest uninitialized textures are initialized to zero when read.\n\nTODO:\n- test by sampling depth/stencil [1]\n- test by copying out of stencil [2]\n- test compressed texture formats [3]\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../common/util/util.js';\nimport { isMultisampledTextureFormat, kTextureFormatInfo } from '../../../format_info.js';\n\nimport { checkContentsByBufferCopy, checkContentsByTextureCopy } from './check_texture/by_copy.js';\nimport {\n  checkContentsByDepthTest,\n  checkContentsByStencilTest,\n} from './check_texture/by_ds_test.js';\nimport { checkContentsBySampling } from './check_texture/by_sampling.js';\nimport {\n  getRequiredTextureUsage,\n  ReadMethod,\n  CheckContents,\n  TextureZeroInitTest,\n  kTestParams,\n  UninitializeMethod,\n  InitializedState,\n} from './check_texture/texture_zero_init_test.js';\n\nconst checkContentsImpl: { [k in ReadMethod]: CheckContents } = {\n  Sample: checkContentsBySampling,\n  CopyToBuffer: checkContentsByBufferCopy,\n  CopyToTexture: checkContentsByTextureCopy,\n  DepthTest: checkContentsByDepthTest,\n  StencilTest: checkContentsByStencilTest,\n  ColorBlending: t => t.skip('Not implemented'),\n  Storage: t => t.skip('Not implemented'),\n};\n\nexport const g = makeTestGroup(TextureZeroInitTest);\n\ng.test('uninitialized_texture_is_zero')\n  .params(kTestParams)\n  .beforeAllSubcases(t => {\n    t.skipIfTextureFormatNotSupported(t.params.format);\n    t.skipIfColorRenderableNotSupportedForFormat(t.params.format);\n    t.selectDeviceOrSkipTestCase(kTextureFormatInfo[t.params.format].feature);\n  })\n  .fn(t => {\n    t.skipIf(\n      t.params.sampleCount > 1 && !isMultisampledTextureFormat(t.params.format, t.isCompatibility)\n    );\n\n    const usage = getRequiredTextureUsage(\n      t.params.format,\n      t.params.sampleCount,\n      t.params.uninitializeMethod,\n      t.params.readMethod\n    );\n\n    const texture = t.createTextureTracked({\n      size: [t.textureWidth, t.textureHeight, t.textureDepthOrArrayLayers],\n      format: t.params.format,\n      dimension: t.params.dimension,\n      usage,\n      mipLevelCount: t.params.mipLevelCount,\n      sampleCount: t.params.sampleCount,\n    });\n\n    if (t.params.canaryOnCreation) {\n      // Initialize some subresources with canary values\n      for (const subresourceRange of t.iterateInitializedSubresources()) {\n        t.initializeTexture(texture, InitializedState.Canary, subresourceRange);\n      }\n    }\n\n    switch (t.params.uninitializeMethod) {\n      case UninitializeMethod.Creation:\n        break;\n      case UninitializeMethod.StoreOpClear:\n        // Initialize the rest of the resources.\n        for (const subresourceRange of t.iterateUninitializedSubresources()) {\n          t.initializeTexture(texture, InitializedState.Canary, subresourceRange);\n        }\n        // Then use a store op to discard their contents.\n        for (const subresourceRange of t.iterateUninitializedSubresources()) {\n          t.discardTexture(texture, subresourceRange);\n        }\n        break;\n      default:\n        unreachable();\n    }\n\n    // Check that all uninitialized resources are zero.\n    for (const subresourceRange of t.iterateUninitializedSubresources()) {\n      checkContentsImpl[t.params.readMethod](\n        t,\n        t.params,\n        texture,\n        InitializedState.Zero,\n        subresourceRange\n      );\n    }\n\n    if (t.params.canaryOnCreation) {\n      // Check the all other resources are unchanged.\n      for (const subresourceRange of t.iterateInitializedSubresources()) {\n        checkContentsImpl[t.params.readMethod](\n          t,\n          t.params,\n          texture,\n          InitializedState.Canary,\n          subresourceRange\n        );\n      }\n    }\n  });\n"],"mappings":"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"}