{"version":3,"file":"texture_zero.spec.js","names":["description","makeTestGroup","unreachable","checkContentsByBufferCopy","checkContentsByTextureCopy","checkContentsByDepthTest","checkContentsByStencilTest","checkContentsBySampling","getRequiredTextureUsage","TextureZeroInitTest","kTestParams","UninitializeMethod","InitializedState","checkContentsImpl","Sample","CopyToBuffer","CopyToTexture","DepthTest","StencilTest","ColorBlending","t","skip","Storage","g","test","params","fn","skipIfTextureFormatNotSupportedForTest","usage","format","sampleCount","uninitializeMethod","readMethod","texture","createTextureTracked","size","textureWidth","textureHeight","textureDepthOrArrayLayers","dimension","mipLevelCount","canaryOnCreation","subresourceRange","iterateInitializedSubresources","initializeTexture","Canary","Creation","StoreOpClear","iterateUninitializedSubresources","discardTexture","Zero"],"sources":["../../../../../src/webgpu/api/operation/resource_init/texture_zero.spec.ts"],"sourcesContent":["export const description = `\nTest uninitialized textures are initialized to zero when read.\n\nTODO:\n- test by sampling depth/stencil [1]\n- test by copying out of stencil [2]\n- test compressed texture formats [3]\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../common/util/util.js';\n\nimport { checkContentsByBufferCopy, checkContentsByTextureCopy } from './check_texture/by_copy.js';\nimport {\n  checkContentsByDepthTest,\n  checkContentsByStencilTest,\n} from './check_texture/by_ds_test.js';\nimport { checkContentsBySampling } from './check_texture/by_sampling.js';\nimport {\n  getRequiredTextureUsage,\n  ReadMethod,\n  CheckContents,\n  TextureZeroInitTest,\n  kTestParams,\n  UninitializeMethod,\n  InitializedState,\n} from './check_texture/texture_zero_init_test.js';\n\nconst checkContentsImpl: { [k in ReadMethod]: CheckContents } = {\n  Sample: checkContentsBySampling,\n  CopyToBuffer: checkContentsByBufferCopy,\n  CopyToTexture: checkContentsByTextureCopy,\n  DepthTest: checkContentsByDepthTest,\n  StencilTest: checkContentsByStencilTest,\n  ColorBlending: t => t.skip('Not implemented'),\n  Storage: t => t.skip('Not implemented'),\n};\n\nexport const g = makeTestGroup(TextureZeroInitTest);\n\ng.test('uninitialized_texture_is_zero')\n  .params(kTestParams)\n  .fn(t => {\n    t.skipIfTextureFormatNotSupportedForTest(t.params);\n\n    const usage = getRequiredTextureUsage(\n      t.params.format,\n      t.params.sampleCount,\n      t.params.uninitializeMethod,\n      t.params.readMethod\n    );\n\n    const texture = t.createTextureTracked({\n      size: [t.textureWidth, t.textureHeight, t.textureDepthOrArrayLayers],\n      format: t.params.format,\n      dimension: t.params.dimension,\n      usage,\n      mipLevelCount: t.params.mipLevelCount,\n      sampleCount: t.params.sampleCount,\n    });\n\n    if (t.params.canaryOnCreation) {\n      // Initialize some subresources with canary values\n      for (const subresourceRange of t.iterateInitializedSubresources()) {\n        t.initializeTexture(texture, InitializedState.Canary, subresourceRange);\n      }\n    }\n\n    switch (t.params.uninitializeMethod) {\n      case UninitializeMethod.Creation:\n        break;\n      case UninitializeMethod.StoreOpClear:\n        // Initialize the rest of the resources.\n        for (const subresourceRange of t.iterateUninitializedSubresources()) {\n          t.initializeTexture(texture, InitializedState.Canary, subresourceRange);\n        }\n        // Then use a store op to discard their contents.\n        for (const subresourceRange of t.iterateUninitializedSubresources()) {\n          t.discardTexture(texture, subresourceRange);\n        }\n        break;\n      default:\n        unreachable();\n    }\n\n    // Check that all uninitialized resources are zero.\n    for (const subresourceRange of t.iterateUninitializedSubresources()) {\n      checkContentsImpl[t.params.readMethod](\n        t,\n        t.params,\n        texture,\n        InitializedState.Zero,\n        subresourceRange\n      );\n    }\n\n    if (t.params.canaryOnCreation) {\n      // Check the all other resources are unchanged.\n      for (const subresourceRange of t.iterateInitializedSubresources()) {\n        checkContentsImpl[t.params.readMethod](\n          t,\n          t.params,\n          texture,\n          InitializedState.Canary,\n          subresourceRange\n        );\n      }\n    }\n  });\n"],"mappings":"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"}