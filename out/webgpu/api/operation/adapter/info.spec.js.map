{"version":3,"file":"info.spec.js","names":["description","Fixture","makeTestGroup","keysOf","getGPU","assert","objectEquals","isPowerOfTwo","g","normalizedIdentifierRegex","test","desc","fn","t","gpu","rec","adapter","requestAdapter","adapterInfo","info","GPUAdapterInfo","expect","vendor","architecture","device","adapterInfo1","adapterInfo2","requestDeviceTracked","deviceAdapterInfo1","deviceAdapterInfo2","paramsSubcasesOnly","u","combine","testDeviceFirst","testMembersFirst","params","deviceInfo","kGPUAdapterInfoKeys","prototype","k","push","kSubgroupMinSizeBound","kSubgroupMaxSizeBound","subgroupMinSize","subgroupMaxSize","features","has","undefined"],"sources":["../../../../../src/webgpu/api/operation/adapter/info.spec.ts"],"sourcesContent":["export const description = `\nTests for GPUAdapterInfo.\n`;\n\nimport { Fixture } from '../../../../common/framework/fixture.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { getGPU } from '../../../../common/util/navigator_gpu.js';\nimport { assert, objectEquals } from '../../../../common/util/util.js';\nimport { isPowerOfTwo } from '../../../util/math.js';\n\nexport const g = makeTestGroup(Fixture);\n\nconst normalizedIdentifierRegex = /^$|^[a-z0-9]+(-[a-z0-9]+)*$/;\n\ng.test('adapter_info')\n  .desc(\n    `\n  Test that every member in the GPUAdapter.info except description is properly formatted`\n  )\n  .fn(async t => {\n    const gpu = getGPU(t.rec);\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    const adapterInfo = adapter.info;\n    assert(adapterInfo instanceof GPUAdapterInfo);\n\n    t.expect(\n      normalizedIdentifierRegex.test(adapterInfo.vendor),\n      `adapterInfo.vendor should be a normalized identifier. But it's '${adapterInfo.vendor}'`\n    );\n\n    t.expect(\n      normalizedIdentifierRegex.test(adapterInfo.architecture),\n      `adapterInfo.architecture should be a normalized identifier. But it's '${adapterInfo.architecture}'`\n    );\n\n    t.expect(\n      normalizedIdentifierRegex.test(adapterInfo.device),\n      `adapterInfo.device should be a normalized identifier. But it's '${adapterInfo.device}'`\n    );\n  });\n\ng.test('same_object')\n  .desc(\n    `\nGPUAdapter.info and GPUDevice.adapterInfo provide the same object each time they're accessed,\nbut different objects from one another.`\n  )\n  .fn(async t => {\n    const gpu = getGPU(t.rec);\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n    assert(adapter.info instanceof GPUAdapterInfo);\n\n    const adapterInfo1 = adapter.info;\n    const adapterInfo2 = adapter.info;\n    t.expect(adapterInfo1 === adapterInfo2, 'adapter.info should obey [SameObject]');\n\n    const device = await t.requestDeviceTracked(adapter);\n    assert(device !== null);\n    assert(device.adapterInfo instanceof GPUAdapterInfo);\n\n    const deviceAdapterInfo1 = device.adapterInfo;\n    const deviceAdapterInfo2 = device.adapterInfo;\n    t.expect(\n      deviceAdapterInfo1 === deviceAdapterInfo2,\n      'device.adapterInfo should obey [SameObject]'\n    );\n\n    t.expect(\n      adapter.info !== device.adapterInfo,\n      'adapter.info and device.adapterInfo should NOT return the same object'\n    );\n  });\n\ng.test('device_matches_adapter')\n  .desc(\n    `\nTest that GPUDevice.adapterInfo matches GPUAdapter.info. Cases access the members in\ndifferent orders to make sure that they are consistent regardless of the access order.`\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('testDeviceFirst', [true, false]).combine('testMembersFirst', [true, false])\n  )\n  .fn(async t => {\n    const { testDeviceFirst, testMembersFirst } = t.params;\n\n    const gpu = getGPU(t.rec);\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    const device = await t.requestDeviceTracked(adapter);\n    assert(device !== null);\n\n    const deviceInfo: unknown[] = [];\n    const adapterInfo: unknown[] = [];\n\n    const kGPUAdapterInfoKeys = keysOf(GPUAdapterInfo.prototype);\n    if (testMembersFirst) {\n      if (testDeviceFirst) {\n        assert(device.adapterInfo instanceof GPUAdapterInfo);\n        for (const k of kGPUAdapterInfoKeys) {\n          deviceInfo.push(device.adapterInfo[k]);\n        }\n        assert(adapter.info instanceof GPUAdapterInfo);\n        for (const k of kGPUAdapterInfoKeys) {\n          adapterInfo.push(adapter.info[k]);\n        }\n      } else {\n        assert(adapter.info instanceof GPUAdapterInfo);\n        for (const k of kGPUAdapterInfoKeys) {\n          adapterInfo.push(adapter.info[k]);\n        }\n        assert(device.adapterInfo instanceof GPUAdapterInfo);\n        for (const k of kGPUAdapterInfoKeys) {\n          deviceInfo.push(device.adapterInfo[k]);\n        }\n      }\n    } else {\n      if (testDeviceFirst) {\n        assert(device.adapterInfo instanceof GPUAdapterInfo);\n        assert(adapter.info instanceof GPUAdapterInfo);\n        for (const k of kGPUAdapterInfoKeys) {\n          deviceInfo.push(device.adapterInfo[k]);\n          adapterInfo.push(adapter.info[k]);\n        }\n      } else {\n        assert(adapter.info instanceof GPUAdapterInfo);\n        assert(device.adapterInfo instanceof GPUAdapterInfo);\n        for (const k of kGPUAdapterInfoKeys) {\n          adapterInfo.push(adapter.info[k]);\n          deviceInfo.push(device.adapterInfo[k]);\n        }\n      }\n      t.expect(objectEquals(deviceInfo, adapterInfo));\n    }\n  });\n\nconst kSubgroupMinSizeBound = 4;\nconst kSubgroupMaxSizeBound = 128;\n\ng.test('subgroup_sizes')\n  .desc(\n    `\nVerify GPUAdapterInfo.subgroupMinSize, GPUAdapterInfo.subgroupMaxSize.\nIf the subgroups feature is supported, they must both exist.\nIf they exist, they must both exist and be powers of two, and\n4 <= subgroupMinSize <= subgroupMaxSize <= 128.\n`\n  )\n  .fn(async t => {\n    const gpu = getGPU(t.rec);\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n    const { subgroupMinSize, subgroupMaxSize } = adapter.info;\n    // Once 'subgroups' lands, the properties should be defined with default values 4 and 128\n    // when adapter does not support the feature.\n    // https://github.com/gpuweb/gpuweb/pull/4963\n    if (adapter.features.has('subgroups')) {\n      t.expect(\n        subgroupMinSize !== undefined,\n        'GPUAdapterInfo.subgroupMinSize must exist when subgroups supported'\n      );\n      t.expect(\n        subgroupMaxSize !== undefined,\n        'GPUAdapterInfo.subgroupMaxSize must exist when subgroups supported'\n      );\n    }\n    t.expect(\n      (subgroupMinSize === undefined) === (subgroupMinSize === undefined),\n      'GPUAdapterInfo.subgropuMinSize and GPUAdapterInfo.subgroupMaxSize must both be defined, or neither should be'\n    );\n    if (subgroupMinSize !== undefined && subgroupMaxSize !== undefined) {\n      t.expect(isPowerOfTwo(subgroupMinSize));\n      t.expect(isPowerOfTwo(subgroupMaxSize));\n      t.expect(kSubgroupMinSizeBound <= subgroupMinSize);\n      t.expect(subgroupMinSize <= subgroupMaxSize);\n      t.expect(subgroupMaxSize <= kSubgroupMaxSizeBound);\n    }\n  });\n"],"mappings":"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"}