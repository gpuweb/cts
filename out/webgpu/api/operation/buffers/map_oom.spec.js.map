{"version":3,"file":"map_oom.spec.js","names":["description","kUnitCaseParamsBuilder","makeTestGroup","kBufferUsages","AllFeaturesMaxLimitsGPUTest","kMaxSafeMultipleOf8","oomAndSizeParams","combine","expand","oom","g","test","desc","params","beginSubcases","fn","t","usage","size","f","createBufferTracked","mappedAtCreation","shouldThrow","buffer","mapping","getMappedRange","expect","byteLength","unmap"],"sources":["../../../../../src/webgpu/api/operation/buffers/map_oom.spec.ts"],"sourcesContent":["export const description =\n  'Test out-of-memory conditions creating large mappable/mappedAtCreation buffers.';\n\nimport { kUnitCaseParamsBuilder } from '../../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kBufferUsages } from '../../../capability_info.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../gpu_test.js';\nimport { kMaxSafeMultipleOf8 } from '../../../util/math.js';\n\nconst oomAndSizeParams = kUnitCaseParamsBuilder\n  .combine('oom', [false, true])\n  .expand('size', ({ oom }) => {\n    return oom\n      ? [\n          kMaxSafeMultipleOf8,\n          0x20_0000_0000, // 128 GB\n        ]\n      : [16];\n  });\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\ng.test('mappedAtCreation')\n  .desc(\n    `Test creating a very large buffer mappedAtCreation buffer should throw a RangeError only\n     because such a large allocation cannot be created when we initialize an active buffer mapping.\n`\n  )\n  .params(\n    oomAndSizeParams //\n      .beginSubcases()\n      .combine('usage', kBufferUsages)\n  )\n  .fn(t => {\n    const { oom, usage, size } = t.params;\n\n    const f = () => t.createBufferTracked({ mappedAtCreation: true, size, usage });\n\n    if (oom) {\n      // getMappedRange is normally valid on OOM buffers, but this one fails because the\n      // (default) range is too large to create the returned ArrayBuffer.\n      t.shouldThrow('RangeError', f);\n    } else {\n      const buffer = f();\n      const mapping = buffer.getMappedRange();\n      t.expect(mapping.byteLength === size, 'Mapping should be successful');\n      buffer.unmap();\n      t.expect(mapping.byteLength === 0, 'Mapping should be detached');\n    }\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GACtB,iFAAiF;AAEnF,SAASC,sBAAsB,QAAQ,gDAAgD;AACvF,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,2BAA2B,QAAQ,sBAAsB;AAClE,SAASC,mBAAmB,QAAQ,uBAAuB;;AAE3D,MAAMC,gBAAgB,GAAGL,sBAAsB;AAC5CM,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7BC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAEC,GAAG,CAAC,CAAC,KAAK;EAC3B,OAAOA,GAAG;EACN;EACEJ,mBAAmB;EACnB,cAAc,CAAE;EAAA,CACjB;EACD,CAAC,EAAE,CAAC;AACV,CAAC,CAAC;;AAEJ,OAAO,MAAMK,CAAC,GAAGR,aAAa,CAACE,2BAA2B,CAAC;;AAE3DM,CAAC,CAACC,IAAI,CAAC,kBAAkB,CAAC;AACvBC,IAAI;EACF;AACL;AACA;AACE,CAAC;AACAC,MAAM;EACLP,gBAAgB,CAAC;EAAA,CACdQ,aAAa,CAAC,CAAC;EACfP,OAAO,CAAC,OAAO,EAAEJ,aAAa;AACnC,CAAC;AACAY,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAM,EAAEP,GAAG,EAAEQ,KAAK,EAAEC,IAAI,CAAC,CAAC,GAAGF,CAAC,CAACH,MAAM;;EAErC,MAAMM,CAAC,GAAGA,CAAA,KAAMH,CAAC,CAACI,mBAAmB,CAAC,EAAEC,gBAAgB,EAAE,IAAI,EAAEH,IAAI,EAAED,KAAK,CAAC,CAAC,CAAC;;EAE9E,IAAIR,GAAG,EAAE;IACP;IACA;IACAO,CAAC,CAACM,WAAW,CAAC,YAAY,EAAEH,CAAC,CAAC;EAChC,CAAC,MAAM;IACL,MAAMI,MAAM,GAAGJ,CAAC,CAAC,CAAC;IAClB,MAAMK,OAAO,GAAGD,MAAM,CAACE,cAAc,CAAC,CAAC;IACvCT,CAAC,CAACU,MAAM,CAACF,OAAO,CAACG,UAAU,KAAKT,IAAI,EAAE,8BAA8B,CAAC;IACrEK,MAAM,CAACK,KAAK,CAAC,CAAC;IACdZ,CAAC,CAACU,MAAM,CAACF,OAAO,CAACG,UAAU,KAAK,CAAC,EAAE,4BAA4B,CAAC;EAClE;AACF,CAAC,CAAC"}