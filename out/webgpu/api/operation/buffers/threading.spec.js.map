{"version":3,"file":"threading.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","g","test","desc","unimplemented"],"sources":["../../../../../src/webgpu/api/operation/buffers/threading.spec.ts"],"sourcesContent":["export const description = `\nTests for valid operations with various client-side thread-shared state of GPUBuffers.\n\nStates to test:\n- mapping pending\n- mapped\n- mapped at creation\n- mapped at creation, then unmapped\n- mapped at creation, then unmapped, then re-mapped\n- destroyed\n\nTODO: Look for more things to test.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\ng.test('serialize')\n  .desc(\n    `Copy a GPUBuffer to another thread while it is in various states on\n{the sending thread, yet another thread}.`\n  )\n  .unimplemented();\n\ng.test('destroyed')\n  .desc(`Destroy on one thread while in various states in another thread.`)\n  .unimplemented();\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,2BAA2B,QAAQ,sBAAsB;;AAElE,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,2BAA2B,CAAC;;AAE3DC,CAAC,CAACC,IAAI,CAAC,WAAW,CAAC;AAChBC,IAAI;EACF;AACL;AACE,CAAC;AACAC,aAAa,CAAC,CAAC;;AAElBH,CAAC,CAACC,IAAI,CAAC,WAAW,CAAC;AAChBC,IAAI,CAAE,kEAAiE,CAAC;AACxEC,aAAa,CAAC,CAAC"}