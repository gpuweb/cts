{"version":3,"file":"discard.spec.js","names":["description","makeTestGroup","iterRange","AllFeaturesMaxLimitsGPUTest","checkElementsPassPredicate","g","kWidth","kHeight","kSharedCode","drawFullScreen","t","code","useStorageBuffers","dataChecker","framebufferChecker","skipIf","isCompatibility","device","limits","maxStorageBuffersInFragmentStage","pipeline","createRenderPipeline","layout","vertex","module","createShaderModule","entryPoint","fragment","targets","format","primitive","topology","bytesPerWord","framebuffer","createTextureTracked","size","usage","GPUTextureUsage","COPY_SRC","COPY_DST","RENDER_ATTACHMENT","TEXTURE_BINDING","fbBuffer","makeBufferWithContents","Uint32Array","x","GPUBufferUsage","dataSize","dataBufferSize","dataBuffer","createBufferTracked","STORAGE","uniformSize","uniformBuffer","UNIFORM","bg","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","offset","encoder","createCommandEncoder","copyBufferToTexture","bytesPerRow","rowsPerImage","texture","width","height","pass","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","setPipeline","setBindGroup","draw","end","copyTextureToBuffer","queue","submit","finish","expectGPUBufferValuesPassCheck","type","Float32Array","typedLength","test","desc","params","u","combine","fn","a","idx","value","predicatePrinter","leftHeader","getValueForCell","fbChecker","is_x","Math","floor","y","discarded","fragId","expect","asF32","asU32","v"],"sources":["../../../../../src/webgpu/shader/execution/statement/discard.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for discard.\n\nThe discard statement converts invocations into helpers.\nThis results in the following conditions:\n  * No outputs are written\n  * No resources are written\n  * Atomics are undefined\n\nConditions that still occur:\n  * Derivative calculations are correct\n  * Reads\n  * Writes to non-external memory\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { iterRange } from '../../../../common/util/util.js';\nimport { AllFeaturesMaxLimitsGPUTest, GPUTestBase } from '../../../gpu_test.js';\nimport { checkElementsPassPredicate } from '../../../util/check_contents.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\n// Framebuffer dimensions\nconst kWidth = 64;\nconst kHeight = 64;\n\nconst kSharedCode = `\n@group(0) @binding(0) var<storage, read_write> output: array<vec2f>;\n@group(0) @binding(1) var<storage, read_write> atomicIndex : atomic<u32>;\n@group(0) @binding(2) var<uniform> uniformValues : array<vec4u, 5>;\n\n@vertex\nfn vsMain(@builtin(vertex_index) index : u32) -> @builtin(position) vec4f {\n  const vertices = array(\n    vec2(-1, -1), vec2(-1,  0), vec2( 0, -1),\n    vec2(-1,  0), vec2( 0,  0), vec2( 0, -1),\n\n    vec2( 0, -1), vec2( 0,  0), vec2( 1, -1),\n    vec2( 0,  0), vec2( 1,  0), vec2( 1, -1),\n\n    vec2(-1,  0), vec2(-1,  1), vec2( 0,  0),\n    vec2(-1,  1), vec2( 0,  1), vec2( 0,  0),\n\n    vec2( 0,  0), vec2( 0,  1), vec2( 1,  0),\n    vec2( 0,  1), vec2( 1,  1), vec2( 1,  0),\n  );\n  return vec4f(vec2f(vertices[index]), 0, 1);\n}\n`;\n\nfunction drawFullScreen(\n  t: GPUTestBase,\n  code: string,\n  useStorageBuffers: boolean,\n  dataChecker: (a: Float32Array) => Error | undefined,\n  framebufferChecker: (a: Uint32Array) => Error | undefined\n) {\n  t.skipIf(\n    useStorageBuffers &&\n      t.isCompatibility &&\n      !(t.device.limits.maxStorageBuffersInFragmentStage! >= 2),\n    `maxStorageBuffersInFragmentStage${t.device.limits.maxStorageBuffersInFragmentStage} is less than 2`\n  );\n\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module: t.device.createShaderModule({ code }),\n      entryPoint: 'vsMain',\n    },\n    fragment: {\n      module: t.device.createShaderModule({ code }),\n      entryPoint: 'fsMain',\n      targets: [{ format: 'rg32uint' }],\n    },\n    primitive: {\n      topology: 'triangle-list',\n    },\n  });\n\n  const bytesPerWord = 4;\n  const framebuffer = t.createTextureTracked({\n    size: [kWidth, kHeight],\n    usage:\n      GPUTextureUsage.COPY_SRC |\n      GPUTextureUsage.COPY_DST |\n      GPUTextureUsage.RENDER_ATTACHMENT |\n      GPUTextureUsage.TEXTURE_BINDING,\n    format: 'rg32uint',\n  });\n\n  // Create a buffer to copy the framebuffer contents into.\n  // Initialize with a sentinel value and load this buffer to detect unintended writes.\n  const fbBuffer = t.makeBufferWithContents(\n    new Uint32Array([...iterRange(kWidth * kHeight * 2, x => kWidth * kHeight)]),\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n  );\n\n  // Create a buffer to hold the storage shader resources.\n  // (0,0) = vec2u width * height\n  // (0,1) = u32\n  const dataSize = 2 * kWidth * kHeight * bytesPerWord;\n  const dataBufferSize = dataSize + bytesPerWord;\n  const dataBuffer = t.createBufferTracked({\n    size: dataBufferSize,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE,\n  });\n\n  const uniformSize = bytesPerWord * 5 * 4;\n  const uniformBuffer = t.makeBufferWithContents(\n    // Loop bound, [derivative constants].\n    // prettier-ignore\n    new Uint32Array([\n      4, 0, 0, 0,\n      1, 0, 0, 0,\n      4, 0, 0, 0,\n      4, 0, 0, 0,\n      7, 0, 0, 0,\n    ]),\n    GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM\n  );\n\n  // 'atomicIndex' packed at the end of the buffer.\n  const bg = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n      ...(useStorageBuffers\n        ? [\n            {\n              binding: 0,\n              resource: {\n                buffer: dataBuffer,\n                offset: 0,\n                size: dataSize,\n              },\n            },\n            {\n              binding: 1,\n              resource: {\n                buffer: dataBuffer,\n                offset: dataSize,\n                size: bytesPerWord,\n              },\n            },\n          ]\n        : []),\n      {\n        binding: 2,\n        resource: {\n          buffer: uniformBuffer,\n          offset: 0,\n          size: uniformSize,\n        },\n      },\n    ],\n  });\n\n  const encoder = t.device.createCommandEncoder();\n  encoder.copyBufferToTexture(\n    {\n      buffer: fbBuffer,\n      offset: 0,\n      bytesPerRow: kWidth * bytesPerWord * 2,\n      rowsPerImage: kHeight,\n    },\n    { texture: framebuffer },\n    { width: kWidth, height: kHeight }\n  );\n  const pass = encoder.beginRenderPass({\n    colorAttachments: [\n      {\n        view: framebuffer.createView(),\n        loadOp: 'load',\n        storeOp: 'store',\n      },\n    ],\n  });\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bg);\n  pass.draw(24);\n  pass.end();\n  encoder.copyTextureToBuffer(\n    { texture: framebuffer },\n    {\n      buffer: fbBuffer,\n      offset: 0,\n      bytesPerRow: kWidth * bytesPerWord * 2,\n      rowsPerImage: kHeight,\n    },\n    { width: kWidth, height: kHeight }\n  );\n  t.queue.submit([encoder.finish()]);\n\n  if (useStorageBuffers) {\n    t.expectGPUBufferValuesPassCheck(dataBuffer, dataChecker, {\n      type: Float32Array,\n      typedLength: dataSize / bytesPerWord,\n    });\n  }\n\n  t.expectGPUBufferValuesPassCheck(fbBuffer, framebufferChecker, {\n    type: Uint32Array,\n    typedLength: kWidth * kHeight * 2,\n  });\n}\n\ng.test('all')\n  .desc('Test a shader that discards all fragments')\n  .params(u => u.combine('useStorageBuffers', [false, true]))\n  .fn(t => {\n    const { useStorageBuffers } = t.params;\n    const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) vec2u {\n  _ = uniformValues[0];\n  discard;\n  ${\n    useStorageBuffers\n      ? `\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  `\n      : ''\n  }\n  return vec2u(1);\n}\n`;\n\n    // No storage writes occur.\n    const dataChecker = (a: Float32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          return value === 0;\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'data exp ==',\n              getValueForCell: (idx: number) => {\n                return 0;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    // No fragment outputs occur.\n    const fbChecker = (a: Uint32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          return value === kWidth * kHeight;\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'fb exp ==',\n              getValueForCell: (idx: number) => {\n                return 0;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    drawFullScreen(t, code, useStorageBuffers, dataChecker, fbChecker);\n  });\n\ng.test('three_quarters')\n  .desc('Test a shader that discards all but the upper-left quadrant fragments')\n  .params(u => u.combine('useStorageBuffers', [false, true]))\n  .fn(t => {\n    const { useStorageBuffers } = t.params;\n    const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) vec2u {\n  _ = uniformValues[0];\n  if (pos.x >= 0.5 * ${kWidth} || pos.y >= 0.5 * ${kHeight}) {\n    discard;\n  }\n  ${\n    useStorageBuffers\n      ? `\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  return vec2u(idx);\n  `\n      : `\n  return vec2(u32(pos.x), u32(pos.y));\n\n  `\n  }\n}\n`;\n\n    // Only the the upper left quadrant is kept.\n    const dataChecker = (a: Float32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          const is_x = idx % 2 === 0;\n          if (is_x) {\n            return value < 0.5 * kWidth;\n          } else {\n            return value < 0.5 * kHeight;\n          }\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'data exp ==',\n              getValueForCell: (idx: number): number | string => {\n                const is_x = idx % 2 === 0;\n                if (is_x) {\n                  const x = Math.floor(idx / 2) % kWidth;\n                  if (x >= kWidth / 2) {\n                    return 0;\n                  }\n                } else {\n                  const y = Math.floor((idx - 1) / kWidth);\n                  if (y >= kHeight / 2) {\n                    return 0;\n                  }\n                }\n                if (is_x) {\n                  return `< ${0.5 * kWidth}`;\n                } else {\n                  return `< ${0.5 * kHeight}`;\n                }\n              },\n            },\n          ],\n        }\n      );\n    };\n    const fbChecker = (a: Uint32Array) => {\n      const discarded = (x: number, y: number) => x >= kWidth / 2 || y >= kHeight / 2;\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          const fragId = (idx / 2) | 0;\n          const x = fragId % kWidth;\n          const y = (fragId / kWidth) | 0;\n          if (discarded(x, y)) {\n            return value === kWidth * kHeight;\n          } else {\n            if (useStorageBuffers) {\n              return value < (kWidth * kHeight) / 4;\n            } else {\n              return value === (idx % 2 ? y : x);\n            }\n          }\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'fb exp ==',\n              getValueForCell: (idx: number) => {\n                const x = idx % kWidth;\n                const y = Math.floor(idx / kWidth);\n                if (discarded(x, y)) {\n                  return 0;\n                } else {\n                  return useStorageBuffers ? 'any' : idx % 2 ? y : x;\n                }\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    drawFullScreen(t, code, useStorageBuffers, dataChecker, fbChecker);\n  });\n\ng.test('function_call')\n  .desc('Test discards happening in a function call')\n  .params(u => u.combine('useStorageBuffers', [false, true]))\n  .fn(t => {\n    const { useStorageBuffers } = t.params;\n    const code = `\n${kSharedCode}\n\nfn foo(pos : vec2f) {\n  let p = vec2i(pos);\n  if p.x <= ${kWidth} / 2 && p.y <= ${kHeight} / 2 {\n    discard;\n  }\n  if p.x >= ${kWidth} / 2 && p.y >= ${kHeight} / 2 {\n    discard;\n  }\n}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) vec2u {\n  _ = uniformValues[0];\n  foo(pos.xy);\n  ${\n    useStorageBuffers\n      ? `\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  return vec2u(idx);\n  `\n      : `\n  return vec2u(u32(pos.x), u32(pos.y));\n  `\n  }\n}\n`;\n\n    // Only the upper right and bottom left quadrants are kept.\n    const dataChecker = (a: Float32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          const is_x = idx % 2 === 0;\n          if (value === 0.0) {\n            return is_x ? a[idx + 1] === 0 : a[idx - 1] === 0;\n          }\n\n          let expect = is_x ? kWidth : kHeight;\n          expect = 0.5 * expect;\n          if (value < expect) {\n            return is_x ? a[idx + 1] > 0.5 * kWidth : a[idx - 1] > 0.5 * kHeight;\n          } else {\n            return is_x ? a[idx + 1] < 0.5 * kWidth : a[idx - 1] < 0.5 * kHeight;\n          }\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'data exp ==',\n              getValueForCell: (idx: number): number | string => {\n                if (idx < (kWidth * kHeight) / 2) {\n                  return 'any';\n                } else {\n                  return 0;\n                }\n              },\n            },\n          ],\n        }\n      );\n    };\n    const fbChecker = (a: Uint32Array) => {\n      const discarded = (x: number, y: number) =>\n        (x >= kWidth / 2 && y >= kHeight / 2) || (x <= kWidth / 2 && y <= kHeight / 2);\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          const fragId = (idx / 2) | 0;\n          const x = fragId % kWidth;\n          const y = (fragId / kWidth) | 0;\n          if (discarded(x, y)) {\n            return value === kWidth * kHeight;\n          } else {\n            if (useStorageBuffers) {\n              return value < (kWidth * kHeight) / 2;\n            } else {\n              return value === (idx % 2 ? y : x);\n            }\n          }\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'fb exp ==',\n              getValueForCell: (idx: number) => {\n                const x = idx % kWidth;\n                const y = Math.floor(idx / kWidth);\n                if (discarded(x, y)) {\n                  return kWidth * kHeight;\n                }\n                return useStorageBuffers ? 'any' : idx % 2 ? y : x;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    drawFullScreen(t, code, useStorageBuffers, dataChecker, fbChecker);\n  });\n\ng.test('loop')\n  .desc('Test discards in a loop')\n  .params(u => u.combine('useStorageBuffers', [false, true]))\n  .fn(t => {\n    const { useStorageBuffers } = t.params;\n    const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) vec2u {\n  _ = uniformValues[0];\n  for (var i = 0; i < 2; i++) {\n    if i > 0 {\n      discard;\n    }\n  }\n  ${\n    useStorageBuffers\n      ? `\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  `\n      : ''\n  }\n  return vec2u(1);\n}\n`;\n\n    // No storage writes occur.\n    const dataChecker = (a: Float32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          return value === 0;\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'data exp ==',\n              getValueForCell: (idx: number) => {\n                return 0;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    // No fragment outputs occur.\n    const fbChecker = (a: Uint32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          return value === kWidth * kHeight;\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'fb exp ==',\n              getValueForCell: (idx: number) => {\n                return kWidth * kHeight;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    drawFullScreen(t, code, useStorageBuffers, dataChecker, fbChecker);\n  });\n\ng.test('continuing')\n  .desc('Test discards in a loop')\n  .params(u => u.combine('useStorageBuffers', [false, true]))\n  .fn(t => {\n    const { useStorageBuffers } = t.params;\n    const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) vec2u {\n  _ = uniformValues[0];\n  var i = 0;\n  loop {\n    continuing {\n      if i > 0 {\n        discard;\n      }\n      i++;\n      break if i >= 2;\n    }\n  }\n  ${\n    useStorageBuffers\n      ? `\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  `\n      : ''\n  }\n  return vec2u(1);\n}\n`;\n\n    // No storage writes occur.\n    const dataChecker = (a: Float32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          return value === 0;\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'data exp ==',\n              getValueForCell: (idx: number) => {\n                return 0;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    // No fragment outputs occur.\n    const fbChecker = (a: Uint32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          return value === kWidth * kHeight;\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'fb exp ==',\n              getValueForCell: (idx: number) => {\n                return kWidth * kHeight;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    drawFullScreen(t, code, useStorageBuffers, dataChecker, fbChecker);\n  });\n\ng.test('uniform_read_loop')\n  .desc('Test that helpers read a uniform value in a loop')\n  .params(u => u.combine('useStorageBuffers', [false, true]))\n  .fn(t => {\n    const { useStorageBuffers } = t.params;\n    const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) vec2u {\n  discard;\n  for (var i = 0u; i < uniformValues[0].x; i++) {\n  }\n  ${\n    useStorageBuffers\n      ? `\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = pos.xy;\n  `\n      : ''\n  }\n  return vec2u(1);\n}\n`;\n\n    // No storage writes occur.\n    const dataChecker = (a: Float32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          return value === 0;\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'data exp ==',\n              getValueForCell: (idx: number) => {\n                return 0;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    // No fragment outputs occur.\n    const fbChecker = (a: Uint32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          return value === kWidth * kHeight;\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'fb exp ==',\n              getValueForCell: (idx: number) => {\n                return kWidth * kHeight;\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    drawFullScreen(t, code, useStorageBuffers, dataChecker, fbChecker);\n  });\n\ng.test('derivatives')\n  .desc('Test that derivatives are correct in the presence of discard')\n  .params(u => u.combine('useStorageBuffers', [false, true]))\n  .fn(t => {\n    const { useStorageBuffers } = t.params;\n    const code = `\n${kSharedCode}\n\n@fragment\nfn fsMain(@builtin(position) pos : vec4f) -> @location(0) vec2u {\n  let ipos = vec2i(pos.xy);\n  let lsb = ipos & vec2(0x1);\n  let left_sel = select(2, 4, lsb.y == 1);\n  let right_sel = select(1, 3, lsb.y == 1);\n  let uidx = select(left_sel, right_sel, lsb.x == 1);\n  if ((lsb.x | lsb.y) & 0x1) == 0 {\n    discard;\n  }\n\n  let v = uniformValues[uidx].x;\n  let dx = dpdx(f32(v));\n  let dy = dpdy(f32(v));\n  ${\n    useStorageBuffers\n      ? `\n  let idx = atomicAdd(&atomicIndex, 1);\n  output[idx] = vec2(dx, dy);\n  return vec2u(idx);\n    `\n      : `\n  return bitcast<vec2u>(vec2f(dx, dy));\n    `\n  }\n}\n`;\n\n    // One pixel per quad is discarded. The derivatives values are always the same +/- 3.\n    const dataChecker = (a: Float32Array) => {\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          if (idx < (3 * (2 * kWidth * kHeight)) / 4) {\n            return value === -3 || value === 3;\n          } else {\n            return value === 0;\n          }\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'data exp ==',\n              getValueForCell: (idx: number) => {\n                if (idx < (3 * (2 * kWidth * kHeight)) / 4) {\n                  return '+/- 3';\n                } else {\n                  return 0;\n                }\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    // 3/4 of the fragments are written.\n    const fbChecker = (a: Uint32Array) => {\n      const discarded = (x: number, y: number) => ((x | y) & 0x1) === 0;\n      const asF32 = new Float32Array(1);\n      const asU32 = new Uint32Array(asF32.buffer);\n      return checkElementsPassPredicate(\n        a,\n        (idx: number, value: number | bigint) => {\n          const fragId = (idx / 2) | 0;\n          const x = fragId % kWidth;\n          const y = (fragId / kWidth) | 0;\n          if (discarded(x, y)) {\n            return value === kWidth * kHeight;\n          } else {\n            if (useStorageBuffers) {\n              return value < (3 * (kWidth * kHeight)) / 4;\n            } else {\n              asU32[0] = value as number;\n              const v = asF32[0];\n              return v === -3 || v === 3;\n            }\n          }\n        },\n        {\n          predicatePrinter: [\n            {\n              leftHeader: 'fb exp ==',\n              getValueForCell: (idx: number) => {\n                const x = idx % kWidth;\n                const y = Math.floor(idx / kWidth);\n                if (((x | y) & 0x1) === 0) {\n                  return kWidth * kHeight;\n                } else {\n                  return useStorageBuffers ? 'any' : '+/- 3';\n                }\n              },\n            },\n          ],\n        }\n      );\n    };\n\n    drawFullScreen(t, code, useStorageBuffers, dataChecker, fbChecker);\n  });\n"],"mappings":"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"}