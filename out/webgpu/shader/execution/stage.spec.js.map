{"version":3,"file":"stage.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","checkElementsEqual","g","test","desc","fn","t","code","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","entryPoint","buffer","makeBufferWithContents","Uint32Array","GPUBufferUsage","STORAGE","COPY_SRC","COPY_DST","bg","createBindGroup","getBindGroupLayout","entries","binding","resource","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","bufferReadback","readGPUBufferRangeTyped","srcByteOffset","type","typedLength","method","got","data","expected","expectOK","width","height","format","texture","createTextureTracked","size","usage","GPUTextureUsage","RENDER_ATTACHMENT","TEXTURE_BINDING","dst","createBufferTracked","createRenderPipeline","vertex","fragment","targets","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","draw","copyTextureToBuffer","mipLevel","origin","x","y","z","bytesPerRow","depthOrArrayLayers","expectGPUBufferValuesEqual","Uint8Array"],"sources":["../../../../src/webgpu/shader/execution/stage.spec.ts"],"sourcesContent":["export const description = `Test trivial shaders for each shader stage kind`;\n\n// There are many many more shaders executed in other tests.\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../gpu_test.js';\nimport { checkElementsEqual } from '../../util/check_contents.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\ng.test('basic_compute')\n  .desc(`Test a trivial compute shader`)\n  .fn(async t => {\n    const code = `\n\n@group(0) @binding(0)\nvar<storage, read_write> v : vec4u;\n\n@compute @workgroup_size(1)\nfn main() {\n  v = vec4u(1,2,3,42);\n}`;\n\n    const pipeline = t.device.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: t.device.createShaderModule({\n          code,\n        }),\n        entryPoint: 'main',\n      },\n    });\n\n    const buffer = t.makeBufferWithContents(\n      new Uint32Array([0, 0, 0, 0]),\n      GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST\n    );\n\n    const bg = t.device.createBindGroup({\n      layout: pipeline.getBindGroupLayout(0),\n      entries: [\n        {\n          binding: 0,\n          resource: {\n            buffer,\n          },\n        },\n      ],\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginComputePass();\n    pass.setPipeline(pipeline);\n    pass.setBindGroup(0, bg);\n    pass.dispatchWorkgroups(1, 1, 1);\n    pass.end();\n    t.queue.submit([encoder.finish()]);\n\n    const bufferReadback = await t.readGPUBufferRangeTyped(buffer, {\n      srcByteOffset: 0,\n      type: Uint32Array,\n      typedLength: 4,\n      method: 'copy',\n    });\n    const got: Uint32Array = bufferReadback.data;\n    const expected = new Uint32Array([1, 2, 3, 42]);\n\n    t.expectOK(checkElementsEqual(got, expected));\n  });\n\ng.test('basic_render')\n  .desc(`Test trivial vertex and fragment shaders`)\n  .fn(t => {\n    const code = `\n@vertex\nfn vert_main(@builtin(vertex_index) idx: u32) -> @builtin(position) vec4f {\n  // A right triangle covering the whole framebuffer.\n  const pos = array(\n    vec2f(-1,-3),\n    vec2f(3,1),\n    vec2f(-1,1));\n  return vec4f(pos[idx], 0, 1);\n}\n\n@fragment\nfn frag_main() -> @location(0) vec4f {\n  return vec4(0, 1, 0, 1); // green\n}\n`;\n    const module = t.device.createShaderModule({ code });\n\n    const [width, height] = [8, 8] as const;\n    const format = 'rgba8unorm' as const;\n    const texture = t.createTextureTracked({\n      size: { width, height },\n      usage:\n        GPUTextureUsage.RENDER_ATTACHMENT |\n        GPUTextureUsage.TEXTURE_BINDING |\n        GPUTextureUsage.COPY_SRC,\n      format,\n    });\n\n    // We'll copy one pixel only.\n    const dst = t.createBufferTracked({\n      size: 4,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST,\n    });\n\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: { module, entryPoint: 'vert_main' },\n      fragment: { module, entryPoint: 'frag_main', targets: [{ format }] },\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [{ view: texture.createView(), loadOp: 'clear', storeOp: 'store' }],\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n\n    encoder.copyTextureToBuffer(\n      { texture, mipLevel: 0, origin: { x: 0, y: 0, z: 0 } },\n      { buffer: dst, bytesPerRow: 256 },\n      { width: 1, height: 1, depthOrArrayLayers: 1 }\n    );\n    t.queue.submit([encoder.finish()]);\n\n    // Expect one green pixel.\n    t.expectGPUBufferValuesEqual(dst, new Uint8Array([0x00, 0xff, 0x00, 0xff]));\n  });\n"],"mappings":"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"}