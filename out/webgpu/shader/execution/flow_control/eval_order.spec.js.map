{"version":3,"file":"eval_order.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","runFlowControlTest","g","test","desc","fn","t","f","entrypoint","expect_order","extra","expect_not_reached"],"sources":["../../../../../src/webgpu/shader/execution/flow_control/eval_order.spec.ts"],"sourcesContent":["export const description = `\nFlow control tests for expression evaluation order.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../gpu_test.js';\n\nimport { runFlowControlTest } from './harness.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\ng.test('binary_op')\n  .desc('Test that a binary operator evaluates the LHS then the RHS')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = lhs() + rhs();\n  ${f.expect_order(3)}\n`,\n      extra: `\nfn lhs() -> i32 {\n  ${f.expect_order(1)}\n  return 0;\n}\nfn rhs() -> i32 {\n  ${f.expect_order(2)}\n  return 0;\n}`,\n    }));\n  });\n\ng.test('binary_op_rhs_const')\n  .desc('Test that a binary operator evaluates the LHS, when the RHS is a constant expression')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = lhs() + rhs();\n  ${f.expect_order(2)}\n`,\n      extra: `\nfn lhs() -> i32 {\n  ${f.expect_order(1)}\n  return 0;\n}\nfn rhs() -> i32 {\n  return 0;\n}`,\n    }));\n  });\n\ng.test('binary_op_lhs_const')\n  .desc('Test that a binary operator evaluates the RHS, when the LHS is a constant expression')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = lhs() + rhs();\n  ${f.expect_order(2)}\n`,\n      extra: `\nfn lhs() -> i32 {\n  return 0;\n}\nfn rhs() -> i32 {\n  ${f.expect_order(1)}\n  return 0;\n}`,\n    }));\n  });\n\ng.test('binary_op_chain')\n  .desc('Test that a binary operator chain evaluates left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = a() + b() - c() * d();\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('binary_op_chain_R_C_C_C')\n  .desc(\n    'Test evaluation order of a binary operator chain with a runtime-expression for the left-most expression'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = f() + 1 + 2 + 3;\n  ${f.expect_order(2)}\n`,\n      extra: `\nfn f() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\n`,\n    }));\n  });\n\ng.test('binary_op_chain_C_R_C_C')\n  .desc(\n    'Test evaluation order of a binary operator chain with a runtime-expression for the second-left-most-const'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = 1 + f() + 2 + 3;\n  ${f.expect_order(2)}\n  `,\n      extra: `\nfn f() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\n  `,\n    }));\n  });\n\ng.test('binary_op_chain_C_C_R_C')\n  .desc(\n    'Test evaluation order of a binary operator chain with a runtime-expression for the second-right-most-const'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = 1 + 2 + f() + 3;\n  ${f.expect_order(2)}\n`,\n      extra: `\nfn f() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\n  `,\n    }));\n  });\n\ng.test('binary_op_chain_C_C_C_R')\n  .desc(\n    'Test evaluation order of a binary operator chain with a runtime-expression for the right-most expression'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n    ${f.expect_order(0)}\n    let l = 1 + 2 + 3 + f();\n    ${f.expect_order(2)}\n  `,\n      extra: `\nfn f() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\n  `,\n    }));\n  });\n\ng.test('binary_op_parenthesized_expr')\n  .desc('Test that a parenthesized binary operator expression evaluates left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let x = (a() + b()) - (c() * d());\n  ${f.expect_order(5)}\n  let y = a() + (b() - c()) * d();\n  ${f.expect_order(10)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1, 6)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2, 7)}\n  return 1;\n}\nfn c() -> i32 {\n  ${f.expect_order(3, 8)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4, 9)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('array_index')\n  .desc('Test that array indices are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<array<array<i32, 8>, 8>, 8>;\n  ${f.expect_order(0)}\n  let x = arr[a()][b()][c()];\n  ${f.expect_order(4)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('array_index_lhs_assignment')\n  .desc(\n    'Test that array indices are evaluated left-to-right, when indexing the LHS of an assignment'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<array<array<i32, 8>, 8>, 8>;\n  ${f.expect_order(0)}\n  arr[a()][b()][c()] = ~d();\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('array_index_lhs_member_assignment')\n  .desc(\n    'Test that array indices are evaluated left-to-right, when indexing with member-accessors in the LHS of an assignment'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<array<S, 8>, 8>;\n  ${f.expect_order(0)}\n  arr[a()][b()].member[c()] = d();\n  ${f.expect_order(5)}\n`,\n      extra: `\nstruct S {\n  member : array<i32, 8>,\n}\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('array_index_via_ptrs')\n  .desc('Test that array indices are evaluated in order, when used via pointers')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<array<array<i32, 8>, 8>, 8>;\n  ${f.expect_order(0)}\n  let p0 = &arr;\n  ${f.expect_order(1)}\n  let p1 = &(*p0)[a()];\n  ${f.expect_order(3)}\n  let p2 = &(*p1)[b()];\n  ${f.expect_order(5)}\n  let p3 = &(*p2)[c()];\n  ${f.expect_order(7)}\n  let p4 = *p3;\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(4)}\n  return 1;\n}\nfn c() -> i32 {\n  ${f.expect_order(6)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('array_index_via_struct_members')\n  .desc('Test that array indices are evaluated in order, when accessed via structure members')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var x : X;\n  ${f.expect_order(0)}\n  let r = x.y[a()].z[b()].a[c()];\n  ${f.expect_order(4)}\n`,\n      extra: `\nstruct X {\n  y : array<Y, 3>,\n};\nstruct Y {\n  z : array<Z, 3>,\n};\nstruct Z {\n  a : array<i32, 3>,\n};\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('matrix_index')\n  .desc('Test that matrix indices are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var mat : mat4x4<f32>;\n  ${f.expect_order(0)}\n  let x = mat[a()][b()];\n  ${f.expect_order(3)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('matrix_index_via_ptr')\n  .desc('Test that matrix indices are evaluated in order, when used via pointers')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var mat : mat4x4<f32>;\n  ${f.expect_order(0)}\n  let p0 = &mat;\n  ${f.expect_order(1)}\n  let p1 = &(*p0)[a()];\n  ${f.expect_order(3)}\n  let v = (*p1)[b()];\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(4)}\n  return 1;\n}`,\n    }));\n  });\n\ng.test('logical_and')\n  .desc(\n    'Test that a chain of logical-AND expressions are evaluated left-to-right, stopping at the first false'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = a() && b() && c();\n  ${f.expect_order(3)}\n`,\n      extra: `\nfn a() -> bool {\n  ${f.expect_order(1)}\n  return true;\n}\nfn b() -> bool {\n  ${f.expect_order(2)}\n  return false;\n}\nfn c() -> bool {\n  ${f.expect_not_reached()}\n  return true;\n}\n`,\n    }));\n  });\n\ng.test('logical_or')\n  .desc(\n    'Test that a chain of logical-OR expressions are evaluated left-to-right, stopping at the first true'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = a() || b() || c();\n  ${f.expect_order(3)}\n`,\n      extra: `\nfn a() -> bool {\n  ${f.expect_order(1)}\n  return false;\n}\nfn b() -> bool {\n  ${f.expect_order(2)}\n  return true;\n}\nfn c() -> bool {\n  ${f.expect_not_reached()}\n  return true;\n}\n`,\n    }));\n  });\n\ng.test('bitwise_and')\n  .desc(\n    'Test that a chain of bitwise-AND expressions are evaluated left-to-right, with no short-circuiting'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = a() & b() & c();\n  ${f.expect_order(4)}\n`,\n      extra: `\nfn a() -> bool {\n  ${f.expect_order(1)}\n  return true;\n}\nfn b() -> bool {\n  ${f.expect_order(2)}\n  return false;\n}\nfn c() -> bool {\n  ${f.expect_order(3)}\n  return true;\n}\n`,\n    }));\n  });\n\ng.test('bitwise_or')\n  .desc(\n    'Test that a chain of bitwise-OR expressions are evaluated left-to-right, with no short-circuiting'\n  )\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = a() | b() | c();\n  ${f.expect_order(4)}\n`,\n      extra: `\nfn a() -> bool {\n  ${f.expect_order(1)}\n  return false;\n}\nfn b() -> bool {\n  ${f.expect_order(2)}\n  return true;\n}\nfn c() -> bool {\n  ${f.expect_order(3)}\n  return true;\n}\n`,\n    }));\n  });\n\ng.test('user_fn_args')\n  .desc('Test user function call arguments are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = f(a(), b(), c());\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 3;\n}\nfn f(x : i32, y : i32, z : i32) -> i32 {\n  ${f.expect_order(4)}\n  return x + y + z;\n}`,\n    }));\n  });\n\ng.test('nested_fn_args')\n  .desc('Test user nested call arguments are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = g(c(a(), b()), f(d(), e()));\n  ${f.expect_order(8)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 0;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 0;\n}\nfn c(x : i32, y : i32) -> i32 {\n  ${f.expect_order(3)}\n  return x + y;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 0;\n}\nfn e() -> i32 {\n  ${f.expect_order(5)}\n  return 0;\n}\nfn f(x : i32, y : i32) -> i32 {\n  ${f.expect_order(6)}\n  return x + y;\n}\nfn g(x : i32, y : i32) -> i32 {\n  ${f.expect_order(7)}\n  return x + y;\n}`,\n    }));\n  });\n\ng.test('builtin_fn_args')\n  .desc('Test builtin function call arguments are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = mix(a(), b(), c());\n  ${f.expect_order(4)}\n`,\n      extra: `\nfn a() -> f32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> f32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> f32 {\n  ${f.expect_order(3)}\n  return 3;\n}\n`,\n    }));\n  });\n\ng.test('nested_builtin_fn_args')\n  .desc('Test nested builtin function call arguments are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let l = mix(a(), mix(b(), c(), d()), e());\n  ${f.expect_order(6)}\n`,\n      extra: `\nfn a() -> f32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> f32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> f32 {\n  ${f.expect_order(3)}\n  return 3;\n}\nfn d() -> f32 {\n  ${f.expect_order(4)}\n  return 3;\n}\nfn e() -> f32 {\n  ${f.expect_order(5)}\n  return 3;\n}\n`,\n    }));\n  });\n\ng.test('1d_array_constructor')\n  .desc('Test arguments of an array constructor are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let v = array(a(), b(), c(), d());\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('2d_array_constructor')\n  .desc('Test arguments of a 2D array constructor are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let v = array(array(a(), b()), array(c(), d()));\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('vec4_constructor')\n  .desc('Test arguments of a vector constructor are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let v = vec4(a(), b(), c(), d());\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('nested_vec4_constructor')\n  .desc('Test arguments of a nested vector constructor are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let v = vec4(a(), vec2(b(), c()), d());\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('struct_constructor')\n  .desc('Test arguments of a structure constructor are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let v = S(a(), b(), c(), d());\n  ${f.expect_order(5)}\n`,\n      extra: `\nstruct S {\n  a : i32,\n  b : i32,\n  c : i32,\n  d : i32,\n}\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('nested_struct_constructor')\n  .desc('Test arguments of a nested structure constructor are evaluated left-to-right')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  ${f.expect_order(0)}\n  let v = Y(a(), X(b(), c()), d());\n  ${f.expect_order(5)}\n`,\n      extra: `\nstruct Y {\n  a : i32,\n  x : X,\n  c : i32,\n}\nstruct X {\n  b : i32,\n  c : i32,\n}\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('1d_array_assignment')\n  .desc('Test LHS of an array element assignment is evaluated before RHS')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<i32, 8>;\n  ${f.expect_order(0)}\n  arr[a()] = arr[b()];\n  ${f.expect_order(3)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('2d_array_assignment')\n  .desc('Test LHS of 2D-array element assignment is evaluated before RHS')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<array<i32, 8>, 8>;\n  ${f.expect_order(0)}\n  arr[a()][b()] = arr[c()][d()];\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('1d_array_compound_assignment')\n  .desc('Test LHS of an array element compound assignment is evaluated before RHS')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<i32, 8>;\n  ${f.expect_order(0)}\n  arr[a()] += arr[b()];\n  ${f.expect_order(3)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('2d_array_compound_assignment')\n  .desc('Test LHS of a 2D-array element compound assignment is evaluated before RHS')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<array<i32, 8>, 8>;\n  ${f.expect_order(0)}\n  arr[a()][b()] += arr[c()][d()];\n  ${f.expect_order(5)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 2;\n}\nfn c() -> i32 {\n  ${f.expect_order(3)}\n  return 1;\n}\nfn d() -> i32 {\n  ${f.expect_order(4)}\n  return 2;\n}\n`,\n    }));\n  });\n\ng.test('1d_array_increment')\n  .desc('Test index of an array element increment is evaluated only once')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<i32, 8>;\n  ${f.expect_order(0)}\n  arr[a()]++;\n  ${f.expect_order(2)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\n`,\n    }));\n  });\n\ng.test('2d_array_increment')\n  .desc('Test index of a 2D-array element increment is evaluated only once')\n  .fn(t => {\n    runFlowControlTest(t, f => ({\n      entrypoint: `\n  var arr : array<array<i32, 8>, 8>;\n  ${f.expect_order(0)}\n  arr[a()][b()]++;\n  ${f.expect_order(3)}\n`,\n      extra: `\nfn a() -> i32 {\n  ${f.expect_order(1)}\n  return 1;\n}\nfn b() -> i32 {\n  ${f.expect_order(2)}\n  return 1;\n}\n`,\n    }));\n  });\n"],"mappings":"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"}