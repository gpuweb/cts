{"version":3,"file":"index.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","Type","VectorValue","f32","allInputSources","basicExpressionBuilder","run","g","test","specURL","desc","params","u","combine","fn","t","elementType","skipIfDeviceDoesNotHaveFeature","indexType","vectorType","vec","width","elements","i","push","create","vector","cases","input","expected","ops","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/access/vector/index.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for vector indexing expressions\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../../../gpu_test.js';\nimport { ScalarValue, Type, VectorValue, f32 } from '../../../../../util/conversion.js';\nimport { Case } from '../../case.js';\nimport { allInputSources, basicExpressionBuilder, run } from '../../expression.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\ng.test('concrete_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-access-expr')\n  .desc(`Test indexing of concrete vectors`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('elementType', ['i32', 'u32', 'f32', 'f16', 'bool'] as const)\n      .combine('indexType', ['i32', 'u32'] as const)\n      .combine('width', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    if (t.params.elementType === 'f16') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const elementType = Type[t.params.elementType];\n    const indexType = Type[t.params.indexType];\n    const vectorType = Type.vec(t.params.width, elementType);\n    const elements: ScalarValue[] = [];\n    for (let i = 0; i < t.params.width; i++) {\n      if (t.params.elementType === 'bool') {\n        elements.push(elementType.create(i & 1));\n      } else {\n        elements.push(elementType.create((i + 1) * 10));\n      }\n    }\n    const vector = new VectorValue(elements);\n    const cases: Case[] = [];\n    for (let i = 0; i < t.params.width; i++) {\n      cases.push({ input: [vector, indexType.create(i)], expected: elements[i] });\n    }\n\n    await run(\n      t,\n      basicExpressionBuilder(ops => `${ops[0]}[${ops[1]}]`),\n      [vectorType, indexType],\n      elementType,\n      t.params,\n      cases\n    );\n  });\n\ng.test('abstract_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-access-expr')\n  .desc(`Test indexing of abstract numeric vectors`)\n  .params(u =>\n    u\n      .combine('elementType', ['abstract-int', 'abstract-float'] as const)\n      .combine('indexType', ['i32', 'u32'] as const)\n      .combine('width', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const elementType = Type[t.params.elementType];\n    const indexType = Type[t.params.indexType];\n    const vectorType = Type.vec(t.params.width, elementType);\n    const elements: ScalarValue[] = [];\n    for (let i = 0; i < t.params.width; i++) {\n      elements.push(elementType.create((i + 1) * 0x100000000));\n    }\n    const vector = new VectorValue(elements);\n    const cases: Case[] = [];\n    for (let i = 0; i < t.params.width; i++) {\n      cases.push({ input: [vector, indexType.create(i)], expected: f32(i + 1) });\n    }\n\n    await run(\n      t,\n      basicExpressionBuilder(ops => `${ops[0]}[${ops[1]}] / 0x100000000`),\n      [vectorType, indexType],\n      Type.f32,\n      { inputSource: 'const' },\n      cases\n    );\n  });\n"],"mappings":"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"}