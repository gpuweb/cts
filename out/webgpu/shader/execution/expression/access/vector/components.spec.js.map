{"version":3,"file":"components.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","Type","VectorValue","f32","allInputSources","basicExpressionBuilder","run","g","indices","n","out","width","generate","swizzle","push","i","next","j","test","specURL","desc","params","u","combine","beginSubcases","expand","fn","t","elementType","skipIfDeviceDoesNotHaveFeature","vectorType","vec","elementValues","elements","create","result","length","type","value","map","components","join","ops","input","expected","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/access/vector/components.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for vector component selection expressions\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../../../gpu_test.js';\nimport { ScalarValue, Type, VectorValue, f32 } from '../../../../../util/conversion.js';\nimport { allInputSources, basicExpressionBuilder, run } from '../../expression.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\n/** @returns the full permutation of component indices used to component select a vector of width 'n' */\nfunction indices(n: number) {\n  const out: number[][] = [];\n  for (let width = 1; width < n; width++) {\n    let generate = (swizzle: number[]) => {\n      out.push(swizzle);\n    };\n    for (let i = 0; i < width; i++) {\n      const next = generate;\n      generate = (swizzle: number[]) => {\n        for (let j = 0; j < width; j++) {\n          next([...swizzle, j]);\n        }\n      };\n    }\n    generate([]);\n  }\n  return out;\n}\n\ng.test('concrete_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-access-expr')\n  .desc(`Test vector component selection of concrete vectors`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('elementType', ['i32', 'u32', 'f32', 'f16', 'bool'] as const)\n      .combine('width', [2, 3, 4] as const)\n      .combine('components', ['rgba', 'xyzw'] as const)\n      .beginSubcases()\n      .expand('indices', u => indices(u.width))\n  )\n  .fn(async t => {\n    if (t.params.elementType === 'f16') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const elementType = Type[t.params.elementType];\n    const vectorType = Type.vec(t.params.width, elementType);\n    const elementValues =\n      t.params.elementType === 'bool' ? (i: number) => i & 1 : (i: number) => (i + 1) * 10;\n    const elements: ScalarValue[] = [];\n    for (let i = 0; i < t.params.width; i++) {\n      elements.push(elementType.create(elementValues(i)));\n    }\n    const result = (() => {\n      if (t.params.indices.length === 1) {\n        return { type: elementType, value: elementType.create(elementValues(0)) };\n      } else {\n        const vec = Type.vec(t.params.indices.length, elementType);\n        return { type: vec, value: vec.create(t.params.indices.map(i => elementValues(i))) };\n      }\n    })();\n\n    const components = t.params.indices.map(i => t.params.components[i]).join('');\n    await run(\n      t,\n      basicExpressionBuilder(ops => `${ops[0]}.${components}`),\n      [vectorType],\n      result.type,\n      t.params,\n      [{ input: [new VectorValue(elements)], expected: result.value }]\n    );\n  });\n\ng.test('abstract_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-access-expr')\n  .desc(`Test vector component selection of abstract numeric vectors`)\n  .params(u =>\n    u\n      .combine('elementType', ['abstract-int', 'abstract-float'] as const)\n      .combine('width', [2, 3, 4] as const)\n      .combine('components', ['rgba', 'xyzw'] as const)\n      .beginSubcases()\n      .expand('indices', u => indices(u.width))\n  )\n  .fn(async t => {\n    const elementType = Type[t.params.elementType];\n    const vectorType = Type.vec(t.params.width, elementType);\n    const elementValues = (i: number) => (i + 1) * 0x100000000;\n    const elements: ScalarValue[] = [];\n    for (let i = 0; i < t.params.width; i++) {\n      elements.push(elementType.create(elementValues(i)));\n    }\n    const result = (() => {\n      if (t.params.indices.length === 1) {\n        return { type: Type.f32, value: f32(elementValues(0) / 0x100000000) };\n      } else {\n        const vec = Type.vec(t.params.indices.length, Type.f32);\n        return {\n          type: vec,\n          value: vec.create(t.params.indices.map(i => elementValues(i) / 0x100000000)),\n        };\n      }\n    })();\n\n    const components = t.params.indices.map(i => t.params.components[i]).join('');\n    await run(\n      t,\n      basicExpressionBuilder(ops => `${ops[0]}.${components} / 0x100000000`),\n      [vectorType],\n      result.type,\n      { inputSource: 'const' },\n      [{ input: [new VectorValue(elements)], expected: result.value }]\n    );\n  });\n"],"mappings":"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"}