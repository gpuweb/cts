{"version":3,"file":"extractBits.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","i32Bits","Type","u32","u32Bits","vec2","vec3","vec4","allInputSources","run","builtin","g","test","specURL","desc","params","u","combine","fn","t","cfg","T","width","vec","V","x","y","z","w","undefined","all_1","all_0","low_1","high_1","pattern","cases","input","expected","inputSource","push","i32"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/extractBits.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'extractBits' builtin function\n\nT is u32 or vecN<u32>\n@const fn extractBits(e: T, offset: u32, count: u32) -> T\nReads bits from an integer, without sign extension.\n\nWhen T is a scalar type, then:\n  w is the bit width of T\n  o = min(offset,w)\n  c = min(count, w - o)\n\nThe result is 0 if c is 0.\nOtherwise, bits 0..c-1 of the result are copied from bits o..o+c-1 of e.\nOther bits of the result are 0.\nComponent-wise when T is a vector.\n\n\nT is i32 or vecN<i32>\n@const fn extractBits(e: T, offset: u32, count: u32) -> T\nReads bits from an integer, with sign extension.\n\nWhen T is a scalar type, then:\n  w is the bit width of T\n  o = min(offset,w)\n  c = min(count, w - o)\n\nThe result is 0 if c is 0.\nOtherwise, bits 0..c-1 of the result are copied from bits o..o+c-1 of e.\nOther bits of the result are the same as bit c-1 of the result.\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../../../gpu_test.js';\nimport { i32Bits, Type, u32, u32Bits, vec2, vec3, vec4 } from '../../../../../util/conversion.js';\nimport { allInputSources, Config, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('width', [1, 2, 3, 4]))\n  .fn(async t => {\n    const cfg: Config = t.params;\n\n    const T = t.params.width === 1 ? Type.u32 : Type.vec(t.params.width, Type.u32);\n\n    const V = (x: number, y?: number, z?: number, w?: number) => {\n      y = y === undefined ? x : y;\n      z = z === undefined ? x : z;\n      w = w === undefined ? x : w;\n\n      switch (t.params.width) {\n        case 1:\n          return u32Bits(x);\n        case 2:\n          return vec2(u32Bits(x), u32Bits(y));\n        case 3:\n          return vec3(u32Bits(x), u32Bits(y), u32Bits(z));\n        default:\n          return vec4(u32Bits(x), u32Bits(y), u32Bits(z), u32Bits(w));\n      }\n    };\n\n    const all_1 = V(0b11111111111111111111111111111111);\n    const all_0 = V(0b00000000000000000000000000000000);\n    const low_1 = V(0b00000000000000000000000000000001);\n    const high_1 = V(0b10000000000000000000000000000000);\n    const pattern = V(\n      0b00000000000111011100000000000000,\n      0b11111111111000000011111111111111,\n      0b00000000010101010101000000000000,\n      0b00000000001010101010100000000000\n    );\n\n    const cases = [\n      { input: [all_0, u32(0), u32(32)], expected: all_0 },\n      { input: [all_0, u32(1), u32(10)], expected: all_0 },\n      { input: [all_0, u32(2), u32(5)], expected: all_0 },\n      { input: [all_0, u32(0), u32(1)], expected: all_0 },\n      { input: [all_0, u32(31), u32(1)], expected: all_0 },\n\n      { input: [all_1, u32(0), u32(32)], expected: all_1 },\n      {\n        input: [all_1, u32(1), u32(10)],\n        expected: V(0b00000000000000000000001111111111),\n      },\n      {\n        input: [all_1, u32(2), u32(5)],\n        expected: V(0b00000000000000000000000000011111),\n      },\n      { input: [all_1, u32(0), u32(1)], expected: low_1 },\n      { input: [all_1, u32(31), u32(1)], expected: low_1 },\n\n      // Patterns\n      { input: [pattern, u32(0), u32(32)], expected: pattern },\n      {\n        input: [pattern, u32(1), u32(31)],\n        expected: V(\n          0b00000000000011101110000000000000,\n          0b01111111111100000001111111111111,\n          0b00000000001010101010100000000000,\n          0b00000000000101010101010000000000\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(18)],\n        expected: V(\n          0b00000000000000000000000001110111,\n          0b00000000000000111111111110000000,\n          0b00000000000000000000000101010101,\n          0b00000000000000000000000010101010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(7)],\n        expected: V(\n          0b00000000000000000000000001110111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000001010101,\n          0b00000000000000000000000000101010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(4)],\n        expected: V(\n          0b00000000000000000000000000000111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000000000101,\n          0b00000000000000000000000000001010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(3)],\n        expected: V(\n          0b00000000000000000000000000000111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000000000101,\n          0b00000000000000000000000000000010\n        ),\n      },\n      {\n        input: [pattern, u32(18), u32(3)],\n        expected: V(\n          0b00000000000000000000000000000111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000000000101,\n          0b00000000000000000000000000000010\n        ),\n      },\n      { input: [low_1, u32(0), u32(1)], expected: low_1 },\n      { input: [high_1, u32(31), u32(1)], expected: low_1 },\n\n      // Zero count\n      { input: [all_1, u32(0), u32(0)], expected: all_0 },\n      { input: [all_0, u32(0), u32(0)], expected: all_0 },\n      { input: [low_1, u32(0), u32(0)], expected: all_0 },\n      { input: [high_1, u32(31), u32(0)], expected: all_0 },\n      { input: [pattern, u32(0), u32(0)], expected: all_0 },\n    ];\n\n    if (t.params.inputSource !== 'const') {\n      cases.push(\n        ...[\n          // End overflow\n          { input: [low_1, u32(0), u32(99)], expected: low_1 },\n          { input: [high_1, u32(31), u32(99)], expected: low_1 },\n          { input: [pattern, u32(0), u32(99)], expected: pattern },\n          {\n            input: [pattern, u32(14), u32(99)],\n            expected: V(\n              0b00000000000000000000000001110111,\n              0b00000000000000111111111110000000,\n              0b00000000000000000000000101010101,\n              0b00000000000000000000000010101010\n            ),\n          },\n        ]\n      );\n    }\n\n    await run(t, builtin('extractBits'), [T, Type.u32, Type.u32], T, cfg, cases);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('width', [1, 2, 3, 4]))\n  .fn(async t => {\n    const cfg: Config = t.params;\n\n    const T = t.params.width === 1 ? Type.i32 : Type.vec(t.params.width, Type.i32);\n\n    const V = (x: number, y?: number, z?: number, w?: number) => {\n      y = y === undefined ? x : y;\n      z = z === undefined ? x : z;\n      w = w === undefined ? x : w;\n\n      switch (t.params.width) {\n        case 1:\n          return i32Bits(x);\n        case 2:\n          return vec2(i32Bits(x), i32Bits(y));\n        case 3:\n          return vec3(i32Bits(x), i32Bits(y), i32Bits(z));\n        default:\n          return vec4(i32Bits(x), i32Bits(y), i32Bits(z), i32Bits(w));\n      }\n    };\n\n    const all_1 = V(0b11111111111111111111111111111111);\n    const all_0 = V(0b00000000000000000000000000000000);\n    const low_1 = V(0b00000000000000000000000000000001);\n    const high_1 = V(0b10000000000000000000000000000000);\n    const pattern = V(\n      0b00000000000111011100000000000000,\n      0b11111111111000000011111111111111,\n      0b00000000010101010101000000000000,\n      0b00000000001010101010100000000000\n    );\n\n    const cases = [\n      { input: [all_0, u32(0), u32(32)], expected: all_0 },\n      { input: [all_0, u32(1), u32(10)], expected: all_0 },\n      { input: [all_0, u32(2), u32(5)], expected: all_0 },\n      { input: [all_0, u32(0), u32(1)], expected: all_0 },\n      { input: [all_0, u32(31), u32(1)], expected: all_0 },\n\n      { input: [all_1, u32(0), u32(32)], expected: all_1 },\n      { input: [all_1, u32(1), u32(10)], expected: all_1 },\n      { input: [all_1, u32(2), u32(5)], expected: all_1 },\n      { input: [all_1, u32(0), u32(1)], expected: all_1 },\n      { input: [all_1, u32(31), u32(1)], expected: all_1 },\n\n      // Patterns\n      { input: [pattern, u32(0), u32(32)], expected: pattern },\n      {\n        input: [pattern, u32(1), u32(31)],\n        expected: V(\n          0b00000000000011101110000000000000,\n          0b11111111111100000001111111111111,\n          0b00000000001010101010100000000000,\n          0b00000000000101010101010000000000\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(18)],\n        expected: V(\n          0b00000000000000000000000001110111,\n          0b11111111111111111111111110000000,\n          0b00000000000000000000000101010101,\n          0b00000000000000000000000010101010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(7)],\n        expected: V(\n          0b11111111111111111111111111110111,\n          0b00000000000000000000000000000000,\n          0b11111111111111111111111111010101,\n          0b00000000000000000000000000101010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(4)],\n        expected: V(\n          0b00000000000000000000000000000111,\n          0b00000000000000000000000000000000,\n          0b00000000000000000000000000000101,\n          0b11111111111111111111111111111010\n        ),\n      },\n      {\n        input: [pattern, u32(14), u32(3)],\n        expected: V(\n          0b11111111111111111111111111111111,\n          0b00000000000000000000000000000000,\n          0b11111111111111111111111111111101,\n          0b00000000000000000000000000000010\n        ),\n      },\n      {\n        input: [pattern, u32(18), u32(3)],\n        expected: V(\n          0b11111111111111111111111111111111,\n          0b00000000000000000000000000000000,\n          0b11111111111111111111111111111101,\n          0b00000000000000000000000000000010\n        ),\n      },\n      { input: [low_1, u32(0), u32(1)], expected: all_1 },\n      { input: [high_1, u32(31), u32(1)], expected: all_1 },\n\n      // Zero count\n      { input: [all_1, u32(0), u32(0)], expected: all_0 },\n      { input: [all_0, u32(0), u32(0)], expected: all_0 },\n      { input: [low_1, u32(0), u32(0)], expected: all_0 },\n      { input: [high_1, u32(31), u32(0)], expected: all_0 },\n      { input: [pattern, u32(0), u32(0)], expected: all_0 },\n    ];\n\n    if (t.params.inputSource !== 'const') {\n      cases.push(\n        ...[\n          // End overflow\n          { input: [low_1, u32(0), u32(99)], expected: low_1 },\n          { input: [high_1, u32(31), u32(99)], expected: all_1 },\n          { input: [pattern, u32(0), u32(99)], expected: pattern },\n          {\n            input: [pattern, u32(14), u32(99)],\n            expected: V(\n              0b00000000000000000000000001110111,\n              0b11111111111111111111111110000000,\n              0b00000000000000000000000101010101,\n              0b00000000000000000000000010101010\n            ),\n          },\n        ]\n      );\n    }\n\n    await run(t, builtin('extractBits'), [T, Type.u32, Type.u32], T, cfg, cases);\n  });\n"],"mappings":"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"}