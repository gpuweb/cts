{"version":3,"file":"select.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","f32","f16","i32","u32","False","True","bool","vec2","vec3","vec4","abstractFloat","abstractInt","Type","run","allInputSources","abstractFloatBuiltin","abstractIntBuiltin","builtin","g","makeBool","n","dataType","b","type","scalar_builder","shader_builder","af","f","h","ai","v","BigInt","i","u","test","specURL","desc","params","combine","beforeAllSubcases","t","skipIf","component","inputSource","fn","skipIfDeviceDoesNotHaveFeature","componentType","scalars","map","v2a","v2b","v3a","v3b","v4a","v4b","overloads","scalar","cases","input","expected","vec","overload","T","F","tests","a","boolType","x","y","z","w"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/select.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'select' builtin function\n\nT is scalar, abstract numeric type, or vector\n@const fn select(f: T, t: T, cond: bool) -> T\nReturns t when cond is true, and f otherwise.\n\nT is scalar or abstract numeric type\n@const fn select(f: vecN<T>, t: vecN<T>, cond: vecN<bool>) -> vecN<T>\nComponent-wise selection. Result component i is evaluated as select(f[i],t[i],cond[i]).\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../../../gpu_test.js';\nimport {\n  VectorType,\n  f32,\n  f16,\n  i32,\n  u32,\n  False,\n  True,\n  bool,\n  vec2,\n  vec3,\n  vec4,\n  abstractFloat,\n  abstractInt,\n  ScalarValue,\n  Type,\n} from '../../../../../util/conversion.js';\nimport { Case } from '../../case.js';\nimport { run, allInputSources } from '../../expression.js';\n\nimport { abstractFloatBuiltin, abstractIntBuiltin, builtin } from './builtin.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\nfunction makeBool(n: number) {\n  return bool((n & 1) === 1);\n}\n\ntype scalarKind = 'b' | 'af' | 'f' | 'h' | 'ai' | 'i' | 'u';\n\nconst dataType = {\n  b: {\n    type: Type.bool,\n    scalar_builder: makeBool,\n    shader_builder: builtin('select'),\n  },\n  af: {\n    type: Type.abstractFloat,\n    scalar_builder: abstractFloat,\n    shader_builder: abstractFloatBuiltin('select'),\n  },\n  f: {\n    type: Type.f32,\n    scalar_builder: f32,\n    shader_builder: builtin('select'),\n  },\n  h: {\n    type: Type.f16,\n    scalar_builder: f16,\n    shader_builder: builtin('select'),\n  },\n  ai: {\n    type: Type.abstractInt,\n    // Only ints are used in the tests below, so the conversion to bigint will\n    // be safe. If a non-int is passed in this will Error.\n    scalar_builder: (v: number): ScalarValue => {\n      return abstractInt(BigInt(v));\n    },\n    shader_builder: abstractIntBuiltin('select'),\n  },\n  i: {\n    type: Type.i32,\n    scalar_builder: i32,\n    shader_builder: builtin('select'),\n  },\n  u: {\n    type: Type.u32,\n    scalar_builder: u32,\n    shader_builder: builtin('select'),\n  },\n};\n\ng.test('scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-builtin-functions')\n  .desc(`scalar tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('component', ['b', 'af', 'f', 'h', 'ai', 'i', 'u'] as const)\n      .combine('overload', ['scalar', 'vec2', 'vec3', 'vec4'] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.skipIf(t.params.component === 'af' && t.params.inputSource !== 'const');\n    t.skipIf(t.params.component === 'ai' && t.params.inputSource !== 'const');\n  })\n  .fn(async t => {\n    if (t.params.component === 'h') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const componentType = dataType[t.params.component].type;\n    const scalar_builder = dataType[t.params.component].scalar_builder;\n\n    // Create the scalar values that will be selected from, either as scalars\n    // or vectors.\n    //\n    // Each boolean will select between c[k] and c[k+4].  Those values must\n    // always compare as different.  The tricky case is boolean, where the parity\n    // has to be different, i.e. c[k]-c[k+4] must be odd.\n    const scalars = [0, 1, 2, 3, 5, 6, 7, 8].map(i => scalar_builder(i));\n\n    // Now form vectors that will have different components from each other.\n    const v2a = vec2(scalars[0], scalars[1]);\n    const v2b = vec2(scalars[4], scalars[5]);\n    const v3a = vec3(scalars[0], scalars[1], scalars[2]);\n    const v3b = vec3(scalars[4], scalars[5], scalars[6]);\n    const v4a = vec4(scalars[0], scalars[1], scalars[2], scalars[3]);\n    const v4b = vec4(scalars[4], scalars[5], scalars[6], scalars[7]);\n\n    const overloads = {\n      scalar: {\n        type: componentType,\n        cases: [\n          { input: [scalars[0], scalars[1], False], expected: scalars[0] },\n          { input: [scalars[0], scalars[1], True], expected: scalars[1] },\n        ],\n      },\n      vec2: {\n        type: Type.vec(2, componentType),\n        cases: [\n          { input: [v2a, v2b, False], expected: v2a },\n          { input: [v2a, v2b, True], expected: v2b },\n        ],\n      },\n      vec3: {\n        type: Type.vec(3, componentType),\n        cases: [\n          { input: [v3a, v3b, False], expected: v3a },\n          { input: [v3a, v3b, True], expected: v3b },\n        ],\n      },\n      vec4: {\n        type: Type.vec(4, componentType),\n        cases: [\n          { input: [v4a, v4b, False], expected: v4a },\n          { input: [v4a, v4b, True], expected: v4b },\n        ],\n      },\n    };\n    const overload = overloads[t.params.overload];\n\n    await run(\n      t,\n      dataType[t.params.component as scalarKind].shader_builder,\n      [overload.type, overload.type, Type.bool],\n      overload.type,\n      t.params,\n      overload.cases\n    );\n  });\n\ng.test('vector')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-builtin-functions')\n  .desc(`vector tests`)\n  .params(u =>\n    u\n      .combine('inputSource', allInputSources)\n      .combine('component', ['b', 'af', 'f', 'h', 'ai', 'i', 'u'] as const)\n      .combine('overload', ['vec2', 'vec3', 'vec4'] as const)\n  )\n  .beforeAllSubcases(t => {\n    t.skipIf(t.params.component === 'af' && t.params.inputSource !== 'const');\n    t.skipIf(t.params.component === 'ai' && t.params.inputSource !== 'const');\n  })\n  .fn(async t => {\n    if (t.params.component === 'h') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const componentType = dataType[t.params.component].type;\n    const scalar_builder = dataType[t.params.component].scalar_builder;\n\n    // Create the scalar values that will be selected from.\n    //\n    // Each boolean will select between c[k] and c[k+4].  Those values must\n    // always compare as different.  The tricky case is boolean, where the parity\n    // has to be different, i.e. c[k]-c[k+4] must be odd.\n    const scalars = [0, 1, 2, 3, 5, 6, 7, 8].map(i => scalar_builder(i));\n    const T = True;\n    const F = False;\n\n    let tests: { dataType: VectorType; boolType: VectorType; cases: Case[] };\n\n    switch (t.params.overload) {\n      case 'vec2': {\n        const a = vec2(scalars[0], scalars[1]);\n        const b = vec2(scalars[4], scalars[5]);\n        tests = {\n          dataType: Type.vec(2, componentType),\n          boolType: Type.vec(2, Type.bool),\n          cases: [\n            { input: [a, b, vec2(F, F)], expected: vec2(a.x, a.y) },\n            { input: [a, b, vec2(F, T)], expected: vec2(a.x, b.y) },\n            { input: [a, b, vec2(T, F)], expected: vec2(b.x, a.y) },\n            { input: [a, b, vec2(T, T)], expected: vec2(b.x, b.y) },\n          ],\n        };\n        break;\n      }\n      case 'vec3': {\n        const a = vec3(scalars[0], scalars[1], scalars[2]);\n        const b = vec3(scalars[4], scalars[5], scalars[6]);\n        tests = {\n          dataType: Type.vec(3, componentType),\n          boolType: Type.vec(3, Type.bool),\n          cases: [\n            { input: [a, b, vec3(F, F, F)], expected: vec3(a.x, a.y, a.z) },\n            { input: [a, b, vec3(F, F, T)], expected: vec3(a.x, a.y, b.z) },\n            { input: [a, b, vec3(F, T, F)], expected: vec3(a.x, b.y, a.z) },\n            { input: [a, b, vec3(F, T, T)], expected: vec3(a.x, b.y, b.z) },\n            { input: [a, b, vec3(T, F, F)], expected: vec3(b.x, a.y, a.z) },\n            { input: [a, b, vec3(T, F, T)], expected: vec3(b.x, a.y, b.z) },\n            { input: [a, b, vec3(T, T, F)], expected: vec3(b.x, b.y, a.z) },\n            { input: [a, b, vec3(T, T, T)], expected: vec3(b.x, b.y, b.z) },\n          ],\n        };\n        break;\n      }\n      case 'vec4': {\n        const a = vec4(scalars[0], scalars[1], scalars[2], scalars[3]);\n        const b = vec4(scalars[4], scalars[5], scalars[6], scalars[7]);\n        tests = {\n          dataType: Type.vec(4, componentType),\n          boolType: Type.vec(4, Type.bool),\n          cases: [\n            { input: [a, b, vec4(F, F, F, F)], expected: vec4(a.x, a.y, a.z, a.w) },\n            { input: [a, b, vec4(F, F, F, T)], expected: vec4(a.x, a.y, a.z, b.w) },\n            { input: [a, b, vec4(F, F, T, F)], expected: vec4(a.x, a.y, b.z, a.w) },\n            { input: [a, b, vec4(F, F, T, T)], expected: vec4(a.x, a.y, b.z, b.w) },\n            { input: [a, b, vec4(F, T, F, F)], expected: vec4(a.x, b.y, a.z, a.w) },\n            { input: [a, b, vec4(F, T, F, T)], expected: vec4(a.x, b.y, a.z, b.w) },\n            { input: [a, b, vec4(F, T, T, F)], expected: vec4(a.x, b.y, b.z, a.w) },\n            { input: [a, b, vec4(F, T, T, T)], expected: vec4(a.x, b.y, b.z, b.w) },\n            { input: [a, b, vec4(T, F, F, F)], expected: vec4(b.x, a.y, a.z, a.w) },\n            { input: [a, b, vec4(T, F, F, T)], expected: vec4(b.x, a.y, a.z, b.w) },\n            { input: [a, b, vec4(T, F, T, F)], expected: vec4(b.x, a.y, b.z, a.w) },\n            { input: [a, b, vec4(T, F, T, T)], expected: vec4(b.x, a.y, b.z, b.w) },\n            { input: [a, b, vec4(T, T, F, F)], expected: vec4(b.x, b.y, a.z, a.w) },\n            { input: [a, b, vec4(T, T, F, T)], expected: vec4(b.x, b.y, a.z, b.w) },\n            { input: [a, b, vec4(T, T, T, F)], expected: vec4(b.x, b.y, b.z, a.w) },\n            { input: [a, b, vec4(T, T, T, T)], expected: vec4(b.x, b.y, b.z, b.w) },\n          ],\n        };\n        break;\n      }\n    }\n\n    await run(\n      t,\n      dataType[t.params.component].shader_builder,\n      [tests.dataType, tests.dataType, tests.boolType],\n      tests.dataType,\n      t.params,\n      tests.cases\n    );\n  });\n"],"mappings":"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"}