{"version":3,"file":"atomicAdd.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","dispatchSizes","workgroupSizes","runStorageVariableTest","runWorkgroupVariableTest","typedArrayCtor","g","test","specURL","desc","params","u","combine","fn","t","numInvocations","workgroupSize","dispatchSize","bufferNumElements","initValue","op","expected","scalarType","wgNumElements","d","wg","subarray"],"sources":["../../../../../../../../src/webgpu/shader/execution/expression/call/builtin/atomics/atomicAdd.spec.ts"],"sourcesContent":["export const description = `\nAtomically read, add and store value.\n\n * Load the original value pointed to by atomic_ptr.\n * Obtains a new value by adding with the value v.\n * Store the new value using atomic_ptr.\n\nReturns the original value stored in the atomic object.\n`;\n\nimport { makeTestGroup } from '../../../../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../../../../../gpu_test.js';\n\nimport {\n  dispatchSizes,\n  workgroupSizes,\n  runStorageVariableTest,\n  runWorkgroupVariableTest,\n  typedArrayCtor,\n} from './harness.js';\n\nexport const g = makeTestGroup(AllFeaturesMaxLimitsGPUTest);\n\ng.test('add_storage')\n  .specURL('https://www.w3.org/TR/WGSL/#atomic-rmw')\n  .desc(\n    `\nAS is storage or workgroup\nT is i32 or u32\n\nfn atomicAdd(atomic_ptr: ptr<AS, atomic<T>, read_write>, v: T) -> T\n`\n  )\n  .params(u =>\n    u\n      .combine('workgroupSize', workgroupSizes)\n      .combine('dispatchSize', dispatchSizes)\n      .combine('scalarType', ['u32', 'i32'] as const)\n  )\n  .fn(t => {\n    const numInvocations = t.params.workgroupSize * t.params.dispatchSize;\n    // Allocate one extra element to ensure it doesn't get modified\n    const bufferNumElements = 2;\n\n    const initValue = 0;\n    const op = `atomicAdd(&output[0], 1)`;\n    const expected = new (typedArrayCtor(t.params.scalarType))(bufferNumElements);\n    expected[0] = numInvocations;\n\n    runStorageVariableTest({\n      t,\n      workgroupSize: t.params.workgroupSize,\n      dispatchSize: t.params.dispatchSize,\n      bufferNumElements,\n      initValue,\n      op,\n      expected,\n    });\n  });\n\ng.test('add_workgroup')\n  .specURL('https://www.w3.org/TR/WGSL/#atomic-rmw')\n  .desc(\n    `\nAS is storage or workgroup\nT is i32 or u32\n\nfn atomicAdd(atomic_ptr: ptr<AS, atomic<T>, read_write>, v: T) -> T\n`\n  )\n  .params(u =>\n    u\n      .combine('workgroupSize', workgroupSizes)\n      .combine('dispatchSize', dispatchSizes)\n      .combine('scalarType', ['u32', 'i32'] as const)\n  )\n  .fn(t => {\n    // Allocate one extra element to ensure it doesn't get modified\n    const wgNumElements = 2;\n\n    const initValue = 0;\n    const op = `atomicAdd(&wg[0], 1)`;\n\n    const expected = new (typedArrayCtor(t.params.scalarType))(\n      wgNumElements * t.params.dispatchSize\n    );\n    for (let d = 0; d < t.params.dispatchSize; ++d) {\n      const wg = expected.subarray(d * wgNumElements);\n      wg[0] = t.params.workgroupSize;\n    }\n\n    runWorkgroupVariableTest({\n      t,\n      workgroupSize: t.params.workgroupSize,\n      dispatchSize: t.params.dispatchSize,\n      wgNumElements,\n      initValue,\n      op,\n      expected,\n    });\n  });\n"],"mappings":"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"}