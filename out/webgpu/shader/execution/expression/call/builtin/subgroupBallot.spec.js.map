{"version":3,"file":"subgroupBallot.spec.js","names":["description","makeTestGroup","keysOf","iterRange","assert","getBlockInfoForTextureFormat","align","SubgroupTest","kFramebufferSizes","getUintsPerFramebuffer","g","kInvocations","getMask","size","BigInt","checkBallots","data","subgroupSize","filter","expect","allActive","i","idx","actual","j","expectedResult","subgroupId","Error","toString","undefined","runTest","t","wgsl","sizeBuffer","makeBufferWithContents","Uint32Array","GPUBufferUsage","COPY_SRC","COPY_DST","STORAGE","trackForCleanup","outputNumInts","outputBuffer","x","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","bg","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","sizeReadback","readGPUBufferRangeTyped","srcByteOffset","type","typedLength","method","outputReadback","output","expectOK","kCases","every_even","cond","id","base","mask","every_odd","lower_half","Math","floor","upper_half","first_two","test","desc","params","u","combine","fn","skipIfDeviceDoesNotHaveFeature","testcase","case","unimplemented","kBothCases","empty","pred","full","one_in_four","middle_half","middle_half_every_other","kFragmentPredicates","odd_row","row","col","width","height","even_row","odd_col","even_col","odd_id","even_id","first_two_or_diagonal","checkFragmentBallots","ballots","metadata","format","uintsPerRow","uintsPerTexel","coordToIndex","mapping","Map","offset","ballot","expectBit","gotBit","expected","get","set","beginSubcases","combineWithParams","predicate","fsShader","vsShader","createRenderPipeline","vertex","fragment","targets","primitive","topology","blockWidth","blockHeight","bytesPerBlock","blocksPerRow","blocksPerColumn","bytesPerRow","byteLength","uintLength","ballotFB","createTextureTracked","usage","GPUTextureUsage","RENDER_ATTACHMENT","TEXTURE_BINDING","metadataFB","beginRenderPass","colorAttachments","view","createView","loadOp","storeOp","draw","ballotBuffer","copyWholeTextureToNewBufferSimple","ballotReadback","metadataBuffer","metadataReadback"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/subgroupBallot.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for subgroupBallot\n\nNote: There is a lack of portability for non-uniform execution so these tests\nrestrict themselves to uniform control flow or returning early.\nNote: There is no guaranteed mapping between subgroup_invocation_id and\nlocal_invocation_index. Tests should avoid assuming there is.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { iterRange, assert } from '../../../../../../common/util/util.js';\nimport { getBlockInfoForTextureFormat } from '../../../../../format_info.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { align } from '../../../../../util/math.js';\n\nimport { SubgroupTest, kFramebufferSizes, getUintsPerFramebuffer } from './subgroup_util.js';\n\nexport const g = makeTestGroup(SubgroupTest);\n\n// 128 is the maximum possible subgroup size.\nconst kInvocations = 128;\n\nfunction getMask(size: number): bigint {\n  return (1n << BigInt(size)) - 1n;\n}\n\nfunction checkBallots(\n  data: Uint32Array,\n  subgroupSize: number,\n  filter: (id: number, s: number) => boolean,\n  expect: (s: number) => bigint,\n  allActive: boolean\n): Error | undefined {\n  for (let i = 0; i < kInvocations; i++) {\n    const idx = i * 4;\n    let actual = 0n;\n    for (let j = 0; j < 4; j++) {\n      actual |= BigInt(data[idx + j]) << BigInt(32 * j);\n    }\n    let expectedResult = expect(subgroupSize);\n    const subgroupId = i % subgroupSize;\n    if (!allActive && !filter(subgroupId, subgroupSize)) {\n      expectedResult = 0n;\n    }\n    if (expectedResult !== actual) {\n      return new Error(\n        `Invocation ${i}, subgroup inv id ${i % subgroupSize}, size ${subgroupSize}\n- expected: ${expectedResult.toString(16)}\n-      got: ${actual.toString(16)}`\n      );\n    }\n  }\n\n  return undefined;\n}\n\nasync function runTest(\n  t: GPUTest,\n  wgsl: string,\n  filter: (id: number, s: number) => boolean,\n  expect: (s: number) => bigint,\n  allActive: boolean\n) {\n  const sizeBuffer = t.makeBufferWithContents(\n    new Uint32Array([0]),\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n  );\n  t.trackForCleanup(sizeBuffer);\n\n  const outputNumInts = kInvocations * 4;\n  const outputBuffer = t.makeBufferWithContents(\n    new Uint32Array([...iterRange(outputNumInts, x => 0)]),\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE\n  );\n  t.trackForCleanup(outputBuffer);\n\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module: t.device.createShaderModule({\n        code: wgsl,\n      }),\n      entryPoint: 'main',\n    },\n  });\n  const bg = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n      {\n        binding: 0,\n        resource: {\n          buffer: sizeBuffer,\n        },\n      },\n      {\n        binding: 1,\n        resource: {\n          buffer: outputBuffer,\n        },\n      },\n    ],\n  });\n\n  const encoder = t.device.createCommandEncoder();\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, bg);\n  pass.dispatchWorkgroups(1, 1, 1);\n  pass.end();\n  t.queue.submit([encoder.finish()]);\n\n  const sizeReadback = await t.readGPUBufferRangeTyped(sizeBuffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: 1,\n    method: 'copy',\n  });\n  const subgroupSize = sizeReadback.data[0];\n\n  const outputReadback = await t.readGPUBufferRangeTyped(outputBuffer, {\n    srcByteOffset: 0,\n    type: Uint32Array,\n    typedLength: outputNumInts,\n    method: 'copy',\n  });\n  const output = outputReadback.data;\n\n  t.expectOK(checkBallots(output, subgroupSize, filter, expect, allActive));\n}\n\nconst kCases = {\n  every_even: {\n    cond: `id % 2 == 0`,\n    filter: (id: number, size: number) => {\n      return id % 2 === 0;\n    },\n    expect: (subgroupSize: number) => {\n      const base = BigInt('0x55555555555555555555555555555555');\n      const mask = getMask(subgroupSize);\n      return base & mask;\n    },\n  },\n  every_odd: {\n    cond: `id % 2 == 1`,\n    filter: (id: number, size: number) => {\n      return id % 2 === 1;\n    },\n    expect: (subgroupSize: number) => {\n      const base = BigInt('0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA');\n      const mask = getMask(subgroupSize);\n      return base & mask;\n    },\n  },\n  lower_half: {\n    cond: `id < subgroupSize / 2`,\n    filter: (id: number, size: number) => {\n      return id < Math.floor(size / 2);\n    },\n    expect: (size: number) => {\n      return getMask(Math.floor(size / 2));\n    },\n  },\n  upper_half: {\n    cond: `id >= subgroupSize / 2`,\n    filter: (id: number, size: number) => {\n      return id >= Math.floor(size / 2);\n    },\n    expect: (size: number) => {\n      return getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 2));\n    },\n  },\n  first_two: {\n    cond: `id == 0 || id == 1`,\n    filter: (id: number) => {\n      return id === 0 || id === 1;\n    },\n    expect: (size: number) => {\n      return getMask(2);\n    },\n  },\n};\n\ng.test('compute,split')\n  .desc('Tests ballot in a split subgroup')\n  .params(u => u.combine('case', keysOf(kCases)))\n  .fn(async t => {\n    t.skipIfDeviceDoesNotHaveFeature('subgroups' as GPUFeatureName);\n    const testcase = kCases[t.params.case];\n    const wgsl = `\nenable subgroups;\n\ndiagnostic(off, subgroup_uniformity);\ndiagnostic(off, subgroup_branching);\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  if ${testcase.cond} {\n    output[lid] = subgroupBallot(true);\n  } else {\n    return;\n  }\n}`;\n\n    await runTest(t, wgsl, testcase.filter, testcase.expect, false);\n  });\n\ng.test('fragment,split').unimplemented();\n\ng.test('predicate')\n  .desc('Tests the predicate parameter')\n  .params(u => u.combine('case', keysOf(kCases)))\n  .fn(async t => {\n    t.skipIfDeviceDoesNotHaveFeature('subgroups' as GPUFeatureName);\n    const testcase = kCases[t.params.case];\n    const wgsl = `\nenable subgroups;\n\ndiagnostic(off, subgroup_branching);\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  let cond = ${testcase.cond};\n  let b = subgroupBallot(cond);\n  output[lid] = b;\n}`;\n\n    await runTest(t, wgsl, testcase.filter, testcase.expect, true);\n  });\n\nconst kBothCases = {\n  empty: {\n    cond: `id < subgroupSize / 2`,\n    pred: `id >= subgroupSize / 2`,\n    filter: (id: number, size: number) => {\n      return id < Math.floor(size / 2);\n    },\n    expect: (size: number) => {\n      return 0n;\n    },\n  },\n  full: {\n    cond: `id < 128`,\n    pred: `lid < 128`,\n    filter: (id: number, size: number) => {\n      return true;\n    },\n    expect: (size: number) => {\n      return getMask(size);\n    },\n  },\n  one_in_four: {\n    cond: `id % 2 == 0`,\n    pred: `id % 4 == 0`,\n    filter: (id: number, size: number) => {\n      return id % 2 === 0;\n    },\n    expect: (size: number) => {\n      const base = BigInt('0x11111111111111111111111111111111');\n      const mask = getMask(size);\n      return base & mask;\n    },\n  },\n  middle_half: {\n    cond: `id >= subgroupSize / 4`,\n    pred: `id < 3 * (subgroupSize / 4)`,\n    filter: (id: number, size: number) => {\n      return id >= Math.floor(size / 4);\n    },\n    expect: (size: number) => {\n      return getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 4));\n    },\n  },\n  middle_half_every_other: {\n    cond: `(id >= subgroupSize / 4) && (id < 3 * (subgroupSize / 4))`,\n    pred: `id % 2 == 0`,\n    filter: (id: number, size: number) => {\n      return id >= Math.floor(size / 4) && id < 3 * Math.floor(size / 4);\n    },\n    expect: (size: number) => {\n      const base = BigInt('0x55555555555555555555555555555555');\n      const mask = getMask(Math.floor(size / 2)) << BigInt(Math.floor(size / 4));\n      return base & mask;\n    },\n  },\n};\n\ng.test('predicate_and_control_flow')\n  .desc('Test dynamic predicate and control flow together')\n  .params(u => u.combine('case', keysOf(kBothCases)))\n  .fn(async t => {\n    t.skipIfDeviceDoesNotHaveFeature('subgroups' as GPUFeatureName);\n    const testcase = kBothCases[t.params.case];\n    const wgsl = `\nenable subgroups;\n\ndiagnostic(off, subgroup_branching);\ndiagnostic(off, subgroup_uniformity);\n\n@group(0) @binding(0)\nvar<storage, read_write> size : u32;\n\n@group(0) @binding(1)\nvar<storage, read_write> output : array<vec4u>;\n\n@compute @workgroup_size(${kInvocations})\nfn main(@builtin(subgroup_size) subgroupSize : u32,\n        @builtin(subgroup_invocation_id) id : u32,\n        @builtin(local_invocation_index) lid : u32) {\n  if (lid == 0) {\n    size = subgroupSize;\n  }\n  if ${testcase.cond} {\n    output[lid] = subgroupBallot(${testcase.pred});\n  } else {\n    return;\n  }\n}`;\n\n    await runTest(t, wgsl, testcase.filter, testcase.expect, false);\n  });\n\n// Filters should always skip the last row and column.\nconst kFragmentPredicates = {\n  odd_row: {\n    cond: `u32(pos.y) % 2 == 1`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return row % 2 === 1;\n    },\n  },\n  even_row: {\n    cond: `u32(pos.y) % 2 == 0`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return row % 2 === 0;\n    },\n  },\n  odd_col: {\n    cond: `u32(pos.x) % 2 == 1`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return col % 2 === 1;\n    },\n  },\n  even_col: {\n    cond: `u32(pos.x) % 2 == 0`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return col % 2 === 0;\n    },\n  },\n  odd_id: {\n    cond: `id % 2 == 1`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id % 2 === 1;\n    },\n  },\n  even_id: {\n    cond: `id % 2 == 0`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id % 2 === 0;\n    },\n  },\n  upper_half: {\n    cond: `id > subgroupSize / 2`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id > Math.floor(size / 2);\n    },\n  },\n  lower_half: {\n    cond: `id < subgroupSize / 2`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id < Math.floor(size / 2);\n    },\n  },\n  first_two_or_diagonal: {\n    cond: `id == 0 || id == 1 || u32(pos.x) == u32(pos.y)`,\n    filter: (row: number, col: number, width: number, height: number, id: number, size: number) => {\n      if (row === height - 1 || col === width - 1) {\n        return false;\n      }\n      return id === 0 || id === 1 || row === col;\n    },\n  },\n};\n\n/**\n * Checks the result of subgroupBallot in fragment shaders.\n *\n * Extra bits are allowed in ballots due to helpers, but results must be consistent\n * among invocations known to be good.\n * @param ballots Framebuffer of ballot results\n * @param metadata Framebuffer of metadata\n *                 * component 0 is subgroup_invocation_id\n *                 * component 1 is subgroup_size\n *                 * component 2 is a unique, generated subgroup id\n * @param format The framebuffer format\n * @param width The framebuffer width\n * @param height The framebuffer height\n * @param filter A functor that returns true if the invocation should be included in the ballot\n */\nfunction checkFragmentBallots(\n  ballots: Uint32Array,\n  metadata: Uint32Array,\n  format: GPUTextureFormat,\n  width: number,\n  height: number,\n  filter: (\n    row: number,\n    col: number,\n    width: number,\n    height: number,\n    id: number,\n    size: number\n  ) => boolean\n): Error | undefined {\n  if (width < 3 || height < 3) {\n    return new Error(\n      `Insufficient framebuffer size [${width}w x ${height}h]. Minimum is [3w x 3h].`\n    );\n  }\n\n  const { uintsPerRow, uintsPerTexel } = getUintsPerFramebuffer(format, width, height);\n\n  const coordToIndex = (row: number, col: number) => {\n    return uintsPerRow * row + col * uintsPerTexel;\n  };\n\n  const mapping = new Map<number, bigint>();\n\n  // Iteration skips last row and column to avoid helper invocations because it is not\n  // guaranteed whether or not they participate in the subgroup operation.\n  for (let row = 0; row < height - 1; row++) {\n    for (let col = 0; col < width - 1; col++) {\n      const offset = coordToIndex(row, col);\n\n      const id = metadata[offset];\n      const subgroupSize = metadata[offset + 1];\n      const subgroupId = metadata[offset + 2];\n\n      let ballot = BigInt(ballots[offset]);\n      ballot |= BigInt(ballots[offset + 1]) << 32n;\n      ballot |= BigInt(ballots[offset + 2]) << 64n;\n      ballot |= BigInt(ballots[offset + 3]) << 96n;\n\n      const expectBit = filter(row, col, width, height, id, subgroupSize) ? 1n : 0n;\n      const gotBit = (ballot >> BigInt(id)) & 1n;\n\n      if (expectBit !== gotBit) {\n        return new Error(`Row ${row}, col ${col}: incorrect ballot bit ${id}:\n- expected: ${expectBit.toString(10)}\n-      got: ${gotBit.toString(10)}`);\n      }\n\n      const expected = mapping.get(subgroupId);\n      if (expected === undefined) {\n        mapping.set(subgroupId, ballot);\n      } else {\n        if (expected !== ballot) {\n          return new Error(`Row ${row} col ${col}: ballot mismatch:\n- expected: ${expected.toString(16)}\n-      got: ${ballot.toString(16)}`);\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\ng.test('fragment')\n  .desc('Tests subgroupBallot in fragment shaders')\n  .params(u =>\n    u\n      .combine('predicate', keysOf(kFragmentPredicates))\n      .beginSubcases()\n      .combine('size', kFramebufferSizes)\n      .combineWithParams([{ format: 'rgba32uint' }] as const)\n  )\n  .fn(async t => {\n    t.skipIfDeviceDoesNotHaveFeature('subgroups' as GPUFeatureName);\n    const width = t.params.size[0];\n    const height = t.params.size[1];\n    const testcase = kFragmentPredicates[t.params.predicate];\n\n    const fsShader = `\nenable subgroups;\n\nstruct FSOutput {\n  @location(0) ballot : vec4u,\n  @location(1) metadata : vec4u,\n}\n\n@fragment\nfn main(\n  @builtin(position) pos : vec4f,\n  @builtin(subgroup_size) subgroupSize : u32,\n  @builtin(subgroup_invocation_id) id : u32,\n) -> FSOutput {\n  let linear = u32(pos.x) + u32(pos.y) * ${width};\n  let subgroup_id = subgroupBroadcastFirst(linear + 1);\n\n  // Filter out possible helper invocations.\n  let x_in_range = u32(pos.x) < (${width} - 1);\n  let y_in_range = u32(pos.y) < (${height} - 1);\n  let in_range = x_in_range && y_in_range;\n\n  let cond = ${testcase.cond};\n  let ballot = subgroupBallot(in_range && cond);\n\n  var out : FSOutput;\n  out.ballot = ballot;\n  out.metadata = vec4u(id, subgroupSize, subgroup_id, 0);\n  return out;\n}`;\n\n    const vsShader = `\n@vertex\nfn vsMain(@builtin(vertex_index) index : u32) -> @builtin(position) vec4f {\n  const vertices = array(\n    vec2(-2, 4), vec2(-2, -4), vec2(2, 0),\n  );\n  return vec4f(vec2f(vertices[index]), 0, 1);\n}`;\n\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module: t.device.createShaderModule({ code: vsShader }),\n      },\n      fragment: {\n        module: t.device.createShaderModule({ code: fsShader }),\n        targets: [{ format: t.params.format }, { format: t.params.format }],\n      },\n      primitive: {\n        topology: 'triangle-list',\n      },\n    });\n\n    const { blockWidth, blockHeight, bytesPerBlock } = getBlockInfoForTextureFormat(\n      t.params.format\n    );\n    assert(bytesPerBlock !== undefined);\n\n    const blocksPerRow = width / blockWidth;\n    const blocksPerColumn = height / blockHeight;\n    // 256 minimum arises from image copy requirements.\n    const bytesPerRow = align(blocksPerRow * (bytesPerBlock ?? 1), 256);\n    const byteLength = bytesPerRow * blocksPerColumn;\n    const uintLength = byteLength / 4;\n\n    const ballotFB = t.createTextureTracked({\n      size: [width, height],\n      usage:\n        GPUTextureUsage.COPY_SRC |\n        GPUTextureUsage.COPY_DST |\n        GPUTextureUsage.RENDER_ATTACHMENT |\n        GPUTextureUsage.TEXTURE_BINDING,\n      format: t.params.format,\n    });\n\n    const metadataFB = t.createTextureTracked({\n      size: [width, height],\n      usage:\n        GPUTextureUsage.COPY_SRC |\n        GPUTextureUsage.COPY_DST |\n        GPUTextureUsage.RENDER_ATTACHMENT |\n        GPUTextureUsage.TEXTURE_BINDING,\n      format: t.params.format,\n    });\n\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: ballotFB.createView(),\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n        {\n          view: metadataFB.createView(),\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n    t.queue.submit([encoder.finish()]);\n\n    const ballotBuffer = t.copyWholeTextureToNewBufferSimple(ballotFB, 0);\n    const ballotReadback = await t.readGPUBufferRangeTyped(ballotBuffer, {\n      srcByteOffset: 0,\n      type: Uint32Array,\n      typedLength: uintLength,\n      method: 'copy',\n    });\n    const ballots: Uint32Array = ballotReadback.data;\n\n    const metadataBuffer = t.copyWholeTextureToNewBufferSimple(metadataFB, 0);\n    const metadataReadback = await t.readGPUBufferRangeTyped(metadataBuffer, {\n      srcByteOffset: 0,\n      type: Uint32Array,\n      typedLength: uintLength,\n      method: 'copy',\n    });\n    const metadata: Uint32Array = metadataReadback.data;\n\n    t.expectOK(\n      checkFragmentBallots(ballots, metadata, t.params.format, width, height, testcase.filter)\n    );\n  });\n"],"mappings":"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"}