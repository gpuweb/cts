{"version":3,"file":"shared_structs.spec.js","names":["description","makeTestGroup","AllFeaturesMaxLimitsGPUTest","TextureTestMixin","checkElementsEqual","g","test","desc","fn","t","wgsize","Uint32Array","numGroups","targetLocalIndex","targetGroup","wgsl","pipeline","device","createComputePipeline","layout","compute","module","createShaderModule","code","entryPoint","bufferNumElements","outputBuffer","createBufferTracked","size","BYTES_PER_ELEMENT","usage","GPUBufferUsage","STORAGE","COPY_SRC","bindGroup","createBindGroup","getBindGroupLayout","entries","binding","resource","buffer","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatchWorkgroups","end","queue","submit","finish","checkOutput","outputs","slice","Error","undefined","expectGPUBufferValuesPassCheck","outputData","type","typedLength","createRenderPipeline","vertex","fragment","targets","format","renderTarget","createTextureTracked","GPUTextureUsage","RENDER_ATTACHMENT","beginRenderPass","colorAttachments","view","createView","clearValue","loadOp","storeOp","draw","redPixel","Uint8Array","greenPixel","blackPixel","expectSinglePixelComparisonsAreOkInTexture","texture","coord","x","y","exp","buffers","attributes","shaderLocation","offset","arrayStride","Float32Array","vertexBuffer","makeBufferWithContents","VERTEX","setVertexBuffer"],"sources":["../../../../../src/webgpu/shader/execution/shader_io/shared_structs.spec.ts"],"sourcesContent":["export const description = `Test the shared use of structures containing entry point IO attributes`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { AllFeaturesMaxLimitsGPUTest, TextureTestMixin } from '../../../gpu_test.js';\nimport { checkElementsEqual } from '../../../util/check_contents.js';\n\nexport const g = makeTestGroup(TextureTestMixin(AllFeaturesMaxLimitsGPUTest));\n\ng.test('shared_with_buffer')\n  .desc(\n    `Test sharing an entry point IO struct with a buffer.\n\n     This test defines a structure that contains both builtin attributes and layout attributes,\n     and uses that structure as both an entry point input and the store type of a storage buffer.\n     The builtin attributes should be ignored when used for the storage buffer, and the layout\n     attributes should be ignored when used as an entry point IO parameter.\n    `\n  )\n  .fn(t => {\n    // Set the dispatch parameters such that we get some interesting (non-zero) built-in variables.\n    const wgsize = new Uint32Array([8, 4, 2]);\n    const numGroups = new Uint32Array([4, 2, 8]);\n\n    // Pick a single invocation to copy the input structure to the output buffer.\n    const targetLocalIndex = 13;\n    const targetGroup = new Uint32Array([2, 1, 5]);\n\n    // The test shader defines a structure that contains members decorated with built-in variable\n    // attributes, and also layout attributes for the storage buffer.\n    const wgsl = `\n      struct S {\n        /* byte offset:  0 */ @size(32)  @builtin(workgroup_id) group_id : vec3<u32>,\n        /* byte offset: 32 */            @builtin(local_invocation_index) local_index : u32,\n        /* byte offset: 64 */ @align(64) @builtin(num_workgroups) numGroups : vec3<u32>,\n      };\n\n      @group(0) @binding(0)\n      var<storage, read_write> outputs : S;\n\n      @compute @workgroup_size(${wgsize[0]}, ${wgsize[1]}, ${wgsize[2]})\n      fn main(inputs : S) {\n        if (inputs.group_id.x == ${targetGroup[0]}u &&\n            inputs.group_id.y == ${targetGroup[1]}u &&\n            inputs.group_id.z == ${targetGroup[2]}u &&\n            inputs.local_index == ${targetLocalIndex}u) {\n          outputs = inputs;\n        }\n      }\n    `;\n\n    const pipeline = t.device.createComputePipeline({\n      layout: 'auto',\n      compute: {\n        module: t.device.createShaderModule({ code: wgsl }),\n        entryPoint: 'main',\n      },\n    });\n\n    // Allocate a buffer to hold the output structure.\n    const bufferNumElements = 32;\n    const outputBuffer = t.createBufferTracked({\n      size: bufferNumElements * Uint32Array.BYTES_PER_ELEMENT,\n      usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC,\n    });\n    const bindGroup = t.device.createBindGroup({\n      layout: pipeline.getBindGroupLayout(0),\n      entries: [{ binding: 0, resource: { buffer: outputBuffer } }],\n    });\n\n    // Run the shader.\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginComputePass();\n    pass.setPipeline(pipeline);\n    pass.setBindGroup(0, bindGroup);\n    pass.dispatchWorkgroups(numGroups[0], numGroups[1], numGroups[2]);\n    pass.end();\n    t.queue.submit([encoder.finish()]);\n\n    // Check the output values.\n    const checkOutput = (outputs: Uint32Array) => {\n      if (checkElementsEqual(outputs.slice(0, 3), targetGroup)) {\n        return new Error(\n          `group_id comparison failed\\n` +\n            `    expected: ${targetGroup}\\n` +\n            `    got:      ${outputs.slice(0, 3)}`\n        );\n      }\n      if (outputs[8] !== targetLocalIndex) {\n        return new Error(\n          `local_index comparison failed\\n` +\n            `    expected: ${targetLocalIndex}\\n` +\n            `    got:      ${outputs[8]}`\n        );\n      }\n      if (checkElementsEqual(outputs.slice(16, 19), numGroups)) {\n        return new Error(\n          `numGroups comparison failed\\n` +\n            `    expected: ${numGroups}\\n` +\n            `    got:      ${outputs.slice(16, 19)}`\n        );\n      }\n      return undefined;\n    };\n    t.expectGPUBufferValuesPassCheck(outputBuffer, outputData => checkOutput(outputData), {\n      type: Uint32Array,\n      typedLength: bufferNumElements,\n    });\n  });\n\ng.test('shared_between_stages')\n  .desc(\n    `Test sharing an entry point IO struct between different pipeline stages.\n\n     This test defines an entry point IO structure, and uses it as both the output of a vertex\n     shader and the input to a fragment shader.\n    `\n  )\n  .fn(t => {\n    const size = [31, 31];\n    const wgsl = `\n      struct Interface {\n        @builtin(position) position : vec4<f32>,\n        @location(0) color : f32,\n      };\n\n      var<private> vertices : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n        vec2<f32>(-0.7, -0.7),\n        vec2<f32>( 0.0,  0.7),\n        vec2<f32>( 0.7, -0.7),\n      );\n\n      @vertex\n      fn vert_main(@builtin(vertex_index) index : u32) -> Interface {\n        return Interface(vec4<f32>(vertices[index], 0.0, 1.0), 1.0);\n      }\n\n      @fragment\n      fn frag_main(inputs : Interface) -> @location(0) vec4<f32> {\n        // Toggle red vs green based on the x position.\n        var color = vec4<f32>(0.0, 0.0, 0.0, 1.0);\n        if (inputs.position.x > f32(${size[0] / 2})) {\n          color.r = inputs.color;\n        } else {\n          color.g = inputs.color;\n        }\n        return color;\n      }\n    `;\n\n    // Set up the render pipeline.\n    const module = t.device.createShaderModule({ code: wgsl });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'vert_main',\n      },\n      fragment: {\n        module,\n        entryPoint: 'frag_main',\n        targets: [\n          {\n            format: 'rgba8unorm',\n          },\n        ],\n      },\n    });\n\n    // Draw a red triangle.\n    const renderTarget = t.createTextureTracked({\n      size,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,\n      format: 'rgba8unorm',\n    });\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: renderTarget.createView(),\n          clearValue: [0, 0, 0, 0],\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n    pass.setPipeline(pipeline);\n    pass.draw(3);\n    pass.end();\n    t.queue.submit([encoder.finish()]);\n\n    // Test a few points to make sure we rendered a half-red/half-green triangle.\n    const redPixel = new Uint8Array([255, 0, 0, 255]);\n    const greenPixel = new Uint8Array([0, 255, 0, 255]);\n    const blackPixel = new Uint8Array([0, 0, 0, 0]);\n    t.expectSinglePixelComparisonsAreOkInTexture({ texture: renderTarget }, [\n      // Red pixels\n      { coord: { x: 16, y: 15 }, exp: redPixel },\n      { coord: { x: 16, y: 8 }, exp: redPixel },\n      { coord: { x: 22, y: 20 }, exp: redPixel },\n      // Green pixels\n      { coord: { x: 14, y: 15 }, exp: greenPixel },\n      { coord: { x: 14, y: 8 }, exp: greenPixel },\n      { coord: { x: 8, y: 20 }, exp: greenPixel },\n      // Black pixels\n      { coord: { x: 2, y: 2 }, exp: blackPixel },\n      { coord: { x: 2, y: 28 }, exp: blackPixel },\n      { coord: { x: 28, y: 2 }, exp: blackPixel },\n      { coord: { x: 28, y: 28 }, exp: blackPixel },\n    ]);\n  });\n\ng.test('shared_with_non_entry_point_function')\n  .desc(\n    `Test sharing an entry point IO struct with a non entry point function.\n\n     This test defines structures that contain builtin and location attributes, and uses those\n     structures as parameter and return types for entry point functions and regular functions.\n    `\n  )\n  .fn(t => {\n    // The test shader defines structures that contain members decorated with built-in variable\n    // attributes and user-defined IO. These structures are passed to and returned from regular\n    // functions.\n    const wgsl = `\n      struct Inputs {\n        @builtin(vertex_index) index : u32,\n        @location(0) color : vec4<f32>,\n      };\n      struct Outputs {\n        @builtin(position) position : vec4<f32>,\n        @location(0) color : vec4<f32>,\n      };\n\n      var<private> vertices : array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n        vec2<f32>(-0.7, -0.7),\n        vec2<f32>( 0.0,  0.7),\n        vec2<f32>( 0.7, -0.7),\n      );\n\n      fn process(in : Inputs) -> Outputs {\n        var out : Outputs;\n        out.position = vec4<f32>(vertices[in.index], 0.0, 1.0);\n        out.color = in.color;\n        return out;\n      }\n\n      @vertex\n      fn vert_main(inputs : Inputs) -> Outputs {\n        return process(inputs);\n      }\n\n      @fragment\n      fn frag_main(@location(0) color : vec4<f32>) -> @location(0) vec4<f32> {\n        return color;\n      }\n    `;\n\n    // Set up the render pipeline.\n    const module = t.device.createShaderModule({ code: wgsl });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'vert_main',\n        buffers: [\n          {\n            attributes: [\n              {\n                shaderLocation: 0,\n                format: 'float32x4',\n                offset: 0,\n              },\n            ],\n            arrayStride: 4 * Float32Array.BYTES_PER_ELEMENT,\n          },\n        ],\n      },\n      fragment: {\n        module,\n        entryPoint: 'frag_main',\n        targets: [\n          {\n            format: 'rgba8unorm',\n          },\n        ],\n      },\n    });\n\n    // Draw a triangle.\n    // The vertex buffer contains the vertex colors (all red).\n    const vertexBuffer = t.makeBufferWithContents(\n      new Float32Array([1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0]),\n      GPUBufferUsage.VERTEX\n    );\n    const renderTarget = t.createTextureTracked({\n      size: [31, 31],\n      usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC,\n      format: 'rgba8unorm',\n    });\n    const encoder = t.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: renderTarget.createView(),\n          clearValue: [0, 0, 0, 0],\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n    pass.setPipeline(pipeline);\n    pass.setVertexBuffer(0, vertexBuffer);\n    pass.draw(3);\n    pass.end();\n    t.queue.submit([encoder.finish()]);\n\n    // Test a few points to make sure we rendered a red triangle.\n    const redPixel = new Uint8Array([255, 0, 0, 255]);\n    const blackPixel = new Uint8Array([0, 0, 0, 0]);\n    t.expectSinglePixelComparisonsAreOkInTexture({ texture: renderTarget }, [\n      // Red pixels\n      { coord: { x: 15, y: 15 }, exp: redPixel },\n      { coord: { x: 15, y: 8 }, exp: redPixel },\n      { coord: { x: 8, y: 20 }, exp: redPixel },\n      { coord: { x: 22, y: 20 }, exp: redPixel },\n      // Black pixels\n      { coord: { x: 2, y: 2 }, exp: blackPixel },\n      { coord: { x: 2, y: 28 }, exp: blackPixel },\n      { coord: { x: 28, y: 2 }, exp: blackPixel },\n      { coord: { x: 28, y: 28 }, exp: blackPixel },\n    ]);\n  });\n"],"mappings":"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"}