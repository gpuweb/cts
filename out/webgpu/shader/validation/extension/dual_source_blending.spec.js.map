{"version":3,"file":"dual_source_blending.spec.js","names":["description","makeTestGroup","keysOf","UniqueFeaturesAndLimitsShaderValidationTest","g","test","desc","params","u","combine","beforeAllSubcases","t","requireExtension","selectDeviceOrSkipTestCase","requiredFeatures","fn","enableExtension","expectCompileResult","kSyntaxValidationTests","zero","src","add_blend_src_0","add_blend_src_1","pass","one","invalid","extra_comma","i32","u32","hex","valid_const_expr","invalid_const_expr","max","newline","comment","misspelling","no_parens","no_parens_no_blend_src_0","empty_params","empty_params_no_blend_src_0","missing_left_paren","missing_right_paren","extra_params","f32","f32_literal","negative","override_expr","vec","duplicate","code","attr","kStageIOValidationTests","vertex_input","shader","vertex_output","fragment_input","fragment_output","kUsageValidationTests","const","use_default_main_function","override","let","var_private","var_function","function_declaration","non_entrypoint_function_input_non_struct","non_entrypoint_function_output_non_struct","entrypoint_input_non_struct","entrypoint_output_non_struct","struct_member_only_blend_src_0","struct_member_only_blend_src_1","struct_member_no_location_blend_src_0","struct_member_no_location_blend_src_1","struct_member_duplicate_blend_src_0","struct_member_duplicate_blend_src_1","struct_member_has_non_zero_location_blend_src_0","struct_member_has_non_zero_location_blend_src_1","struct_member_non_zero_location_blend_src_0_blend_src_1","struct_member_has_non_zero_location_no_blend_src","struct_member_no_location_no_blend_src","struct_member_blend_src_and_builtin","struct_member_location_0_blend_src_0_blend_src_1","kValidLocationTypes","kF16TypesSet","Set","needF16Extension","has","blendSrc0Type","blendSrc1Type","push","success"],"sources":["../../../../../src/webgpu/shader/validation/extension/dual_source_blending.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for the dual_source_blending extension\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { UniqueFeaturesAndLimitsShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(UniqueFeaturesAndLimitsShaderValidationTest);\n\ng.test('use_blend_src_requires_extension_enabled')\n  .desc(\n    `Checks that the blend_src attribute is only allowed with the WGSL extension\n     dual_source_blending enabled in shader and the WebGPU extension dual-source-blending supported\n     on the device.`\n  )\n  .params(u =>\n    u.combine('requireExtension', [true, false]).combine('enableExtension', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.requireExtension) {\n      t.selectDeviceOrSkipTestCase({ requiredFeatures: ['dual-source-blending'] });\n    }\n  })\n  .fn(t => {\n    const { requireExtension, enableExtension } = t.params;\n\n    t.expectCompileResult(\n      requireExtension && enableExtension,\n      `\n        ${enableExtension ? 'enable dual_source_blending;' : ''}\n        struct FragOut {\n          @location(0) @blend_src(0) color : vec4f,\n          @location(0) @blend_src(1) blend : vec4f,\n        }\n        @fragment fn main() -> FragOut {\n          var output : FragOut;\n          output.color = vec4f(1.0, 0.0, 0.0, 1.0);\n          output.blend = vec4f(0.0, 1.0, 0.0, 1.0);\n          return output;\n        }\n    `\n    );\n  });\n\nconst kSyntaxValidationTests = {\n  zero: {\n    src: `@blend_src(0)`,\n    add_blend_src_0: false,\n    add_blend_src_1: true,\n    pass: true,\n  },\n  one: {\n    src: `@blend_src(1)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: true,\n  },\n  invalid: {\n    src: `@blend_src(2)`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  extra_comma: {\n    src: `@blend_src(1,)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: true,\n  },\n  i32: {\n    src: `@blend_src(1i)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: true,\n  },\n  u32: {\n    src: `@blend_src(1u)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: true,\n  },\n  hex: {\n    src: `@blend_src(0x1)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: true,\n  },\n  valid_const_expr: {\n    src: `@blend_src(a + b)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: true,\n  },\n  invalid_const_expr: {\n    src: `@blend_src(b + c)`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  max: {\n    src: `@blend_src(2147483647)`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  newline: {\n    src: '@\\nblend_src(1)',\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: true,\n  },\n  comment: {\n    src: `@/* comment */blend_src(1)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: true,\n  },\n  misspelling: {\n    src: `@mblend_src(1)`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  no_parens: {\n    src: `@blend_src`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  no_parens_no_blend_src_0: {\n    src: `@blend_src`,\n    add_blend_src_0: false,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  empty_params: {\n    src: `@blend_src()`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  empty_params_no_blend_src_0: {\n    src: `@blend_src()`,\n    add_blend_src_0: false,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  missing_left_paren: {\n    src: `@blend_src 1)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: false,\n  },\n  missing_right_paren: {\n    src: `@blend_src(1`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: false,\n  },\n  extra_params: {\n    src: `@blend_src(1, 2)`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  f32: {\n    src: `@blend_src(1f)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: false,\n  },\n  f32_literal: {\n    src: `@blend_src(1.0)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: false,\n  },\n  negative: {\n    src: `@blend_src(-1)`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  override_expr: {\n    src: `@blend_src(z + y)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: false,\n  },\n  vec: {\n    src: `@blend_src(vec2(1,1))`,\n    add_blend_src_0: true,\n    add_blend_src_1: true,\n    pass: false,\n  },\n  duplicate: {\n    src: `@blend_src(1) @blend_src(1)`,\n    add_blend_src_0: true,\n    add_blend_src_1: false,\n    pass: false,\n  },\n};\n\ng.test('blend_src_syntax_validation')\n  .desc(`Syntax validation tests of blend_src.`)\n  .params(u => u.combine('attr', keysOf(kSyntaxValidationTests)))\n  .beforeAllSubcases(t =>\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['dual-source-blending'] })\n  )\n  .fn(t => {\n    const code = `\nenable dual_source_blending;\n\nconst a = 0;\nconst b = 1;\nconst c = 1;\noverride z = 0;\noverride y = 1;\n\nstruct FragOut {\n  @location(0) ${kSyntaxValidationTests[t.params.attr].src} blend : vec4f,\n  ${\n    kSyntaxValidationTests[t.params.attr].add_blend_src_0\n      ? '@location(0) @blend_src(0) color0 : vec4f,'\n      : ''\n  }\n  ${\n    kSyntaxValidationTests[t.params.attr].add_blend_src_1\n      ? '@location(0) @blend_src(1) color1 : vec4f,'\n      : ''\n  }\n}\n\n@fragment fn main() -> FragOut {\n  var output : FragOut;\n  output.blend = vec4f(1.0, 0.0, 0.0, 1.0);\n  ${kSyntaxValidationTests[t.params.attr].add_blend_src_0 ? 'output.color0 = output.blend;' : ''}\n  ${kSyntaxValidationTests[t.params.attr].add_blend_src_1 ? 'output.color1 = output.blend;' : ''}\n  return output;\n}`;\n    t.expectCompileResult(kSyntaxValidationTests[t.params.attr].pass, code);\n  });\n\nconst kStageIOValidationTests = {\n  vertex_input: {\n    shader: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n    }\n    @vertex fn main(vertexInput : BlendSrcStruct) -> @builtin(position) vec4f {\n      return vertexInput.color + vertexInput.blend;\n    }\n    `,\n    pass: false,\n  },\n  vertex_output: {\n    shader: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n      @builtin(position) myPosition: vec4f,\n    }\n    @vertex fn main() -> BlendSrcStruct {\n      var vertexOutput : BlendSrcStruct;\n      vertexOutput.myPosition = vec4f(0.0, 0.0, 0.0, 1.0);\n      return vertexOutput;\n    }\n    `,\n    pass: false,\n  },\n  fragment_input: {\n    shader: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n    }\n    @fragment fn main(fragmentInput : BlendSrcStruct) -> @location(0) vec4f {\n      return fragmentInput.color + fragmentInput.blend;\n    }\n    `,\n    pass: false,\n  },\n  fragment_output: {\n    shader: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n    }\n    @fragment fn main() -> BlendSrcStruct {\n      var fragmentOutput : BlendSrcStruct;\n      fragmentOutput.color = vec4f(0.0, 1.0, 0.0, 1.0);\n      fragmentOutput.blend = fragmentOutput.color;\n      return fragmentOutput;\n    }\n    `,\n    pass: true,\n  },\n};\n\ng.test('blend_src_stage_input_output')\n  .desc(\n    `Test that the struct with blend_src cannot be used in the input of the fragment stage, the\n  input of the vertex stage, or the output of the vertex stage. blend_src can be used as a part of\n  the output of the fragment stage.`\n  )\n  .params(u => u.combine('attr', keysOf(kStageIOValidationTests)))\n  .beforeAllSubcases(t =>\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['dual-source-blending'] })\n  )\n  .fn(t => {\n    const code = `\nenable dual_source_blending;\n\n${kStageIOValidationTests[t.params.attr].shader}\n`;\n    t.expectCompileResult(kStageIOValidationTests[t.params.attr].pass, code);\n  });\n\nconst kUsageValidationTests = {\n  const: {\n    code: `@blend_src(0) const color = 1.2;`,\n    pass: false,\n    use_default_main_function: true,\n  },\n  override: {\n    code: `@blend_src(0) @id(0) override color : f32;`,\n    pass: false,\n    use_default_main_function: true,\n  },\n  let: {\n    code: `\n    @fragment fn main() -> vec4f {\n      let @blend_src(0) color = vec4f();\n      return color;\n    }\n    `,\n    pass: false,\n    use_default_main_function: false,\n  },\n  var_private: {\n    code: `@blend_src(0) var<private> color : vec4f;`,\n    pass: false,\n    use_default_main_function: true,\n  },\n  var_function: {\n    code: `\n    @fragment fn main() -> vec4f {\n      var @blend_src(0) color : vec4f;\n      color = vec4f();\n      return color;\n    }\n    `,\n    pass: false,\n    use_default_main_function: false,\n  },\n  function_declaration: {\n    code: `\n    @blend_src(0) fn fun() {}\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  non_entrypoint_function_input_non_struct: {\n    code: `\n    fn fun(@blend_src(0) color : vec4f) -> vec4f {\n      return color;\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  non_entrypoint_function_output_non_struct: {\n    code: `\n    fn fun() -> @blend_src(0) vec4f {\n      return vec4f();\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  entrypoint_input_non_struct: {\n    code: `\n    @fragment fn main(@location(0) @blend_src(0) color : vec4f) -> @location(0) vec4f {\n      return color;\n    }\n    `,\n    pass: false,\n    use_default_main_function: false,\n  },\n  entrypoint_output_non_struct: {\n    code: `\n    @fragment fn main() -> @location(0) @blend_src(0) vec4f {\n      return vec4f();\n    }\n    `,\n    pass: false,\n    use_default_main_function: false,\n  },\n  struct_member_only_blend_src_0: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_only_blend_src_1: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(1) blend : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_no_location_blend_src_0: {\n    code: `\n    struct BlendSrcStruct {\n      @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_no_location_blend_src_1: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @blend_src(1) blend : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_duplicate_blend_src_0: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(0) blend : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_duplicate_blend_src_1: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(1) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_has_non_zero_location_blend_src_0: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color1 : vec4f,\n      @location(1) @blend_src(0) color2 : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_has_non_zero_location_blend_src_1: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend1 : vec4f,\n      @location(1) @blend_src(1) blend2 : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_non_zero_location_blend_src_0_blend_src_1: {\n    code: `\n    struct BlendSrcStruct {\n      @location(1) @blend_src(0) color : vec4f,\n      @location(1) @blend_src(1) blend : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_has_non_zero_location_no_blend_src: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n      @location(1) color2 : vec4f,\n    }\n    `,\n    pass: false,\n    use_default_main_function: true,\n  },\n  struct_member_no_location_no_blend_src: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n      depth : f32,\n    }\n    `,\n    pass: true,\n    use_default_main_function: true,\n  },\n  struct_member_blend_src_and_builtin: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n      @builtin(frag_depth) depth : f32,\n    }\n    `,\n    pass: true,\n    use_default_main_function: true,\n  },\n  struct_member_location_0_blend_src_0_blend_src_1: {\n    code: `\n    struct BlendSrcStruct {\n      @location(0) @blend_src(0) color : vec4f,\n      @location(0) @blend_src(1) blend : vec4f,\n    }\n    `,\n    pass: true,\n    use_default_main_function: true,\n  },\n};\n\ng.test('blend_src_usage')\n  .desc(\n    `Test that blend_src can only be used on a member of a structure, and must be used together with\n    the location attribute. In addition, if blend_src is used on a member of a structure, there must\n    be exactly 2 members that have location attribute in the structure: one is @location(0)\n    @blend_src(0) and another is @location(0) @blend_src(1).`\n  )\n  .params(u => u.combine('attr', keysOf(kUsageValidationTests)))\n  .beforeAllSubcases(t =>\n    t.selectDeviceOrSkipTestCase({ requiredFeatures: ['dual-source-blending'] })\n  )\n  .fn(t => {\n    const code = `\nenable dual_source_blending;\n\n${kUsageValidationTests[t.params.attr].code}\n\n${\n  kUsageValidationTests[t.params.attr].use_default_main_function\n    ? `@fragment fn main() -> @location(0) vec4f {\n  return vec4f();\n}`\n    : ''\n}\n`;\n    t.expectCompileResult(kUsageValidationTests[t.params.attr].pass, code);\n  });\n\nconst kValidLocationTypes = [\n  'f16',\n  'f32',\n  'i32',\n  'u32',\n  'vec2h',\n  'vec2f',\n  'vec2i',\n  'vec2u',\n  'vec3h',\n  'vec3f',\n  'vec3i',\n  'vec3u',\n  'vec4h',\n  'vec4f',\n  'vec4i',\n  'vec4u',\n] as const;\n\nconst kF16TypesSet = new Set(['f16', 'vec2h', 'vec3h', 'vec4h']);\n\ng.test('blend_src_same_type')\n  .desc(`Test that the struct member with @blend_src(0) and @blend_src(1) must have same type.`)\n  .params(u =>\n    u.combine('blendSrc0Type', kValidLocationTypes).combine('blendSrc1Type', kValidLocationTypes)\n  )\n  .beforeAllSubcases(t => {\n    const requiredFeatures: GPUFeatureName[] = ['dual-source-blending'];\n    const needF16Extension =\n      kF16TypesSet.has(t.params.blendSrc0Type) || kF16TypesSet.has(t.params.blendSrc1Type);\n    if (needF16Extension) {\n      requiredFeatures.push('shader-f16');\n    }\n    t.selectDeviceOrSkipTestCase({ requiredFeatures });\n  })\n  .fn(t => {\n    const { blendSrc0Type, blendSrc1Type } = t.params;\n\n    const needF16Extension = kF16TypesSet.has(blendSrc0Type) || kF16TypesSet.has(blendSrc1Type);\n    const code = `\nenable dual_source_blending;\n\n${needF16Extension ? 'enable f16;' : ''}\n\nstruct BlendSrcOutput {\n  @location(0) @blend_src(0) color : ${blendSrc0Type},\n  @location(0) @blend_src(1) blend : ${blendSrc1Type},\n}\n\n@fragment fn main() -> BlendSrcOutput {\n  var output : BlendSrcOutput;\n  output.color = ${blendSrc0Type}();\n  output.blend = ${blendSrc1Type}();\n  return output;\n}\n`;\n\n    const success = blendSrc0Type === blendSrc1Type;\n    t.expectCompileResult(success, code);\n  });\n"],"mappings":"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"}