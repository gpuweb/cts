{"version":3,"file":"array.spec.js","names":["description","makeTestGroup","keysOf","objectsToRecord","Type","elementTypeOf","kConcreteNumericScalarsAndVectors","kAllBoolScalarsAndVectors","ShaderValidationTest","g","test","desc","params","u","combine","fn","t","type","skipIfDeviceDoesNotHaveFeature","ty","enable","requiresF16","code","create","wgsl","expect","expectCompileResult","kTypes","kTypeKeys","filter","elements","bool","beforeAllSubcases","selectDeviceOrSkipTestCase","arrayTy","module_decl","toString","function_decl","kOutOfBoundsCases","const_module_in_bounds","result","const_module_oob_neg","const_module_oob_pos","const_func_in_bounds","const_func_oob_neg","const_func_oob_pos","override_in_bounds","pipeline","value","override_oob_neg","override_oob_pos","runtime_in_bounds","runtime_oob_neg","runtime_oob_pos","runtime_array_const_oob_neg","runtime_array_override_oob_neg","runtime_nested_array_override_oob_neg","runtime_nested_array_override_oob_pos","runtime_nested_array_override_pos","runtime_deep_nested_array_override_oob_pos","runtime_deep_nested_array_override_pos","runtime_structure_array_override_oob_neg","runtime_structure_array_override_pos","runtime_structure_array_override_oob_pos","runtime_nested_structure_array_override_oob_pos","runtime_nested_structure_array_override_pos","testcase","case","v","expectPipelineResult","expectedResult","constants","x","reference"],"sources":["../../../../../../src/webgpu/shader/validation/expression/access/array.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for array access expressions\n\n* Index type\n* Result type\n* Early-evaluation errors\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  elementTypeOf,\n  kConcreteNumericScalarsAndVectors,\n  kAllBoolScalarsAndVectors,\n} from '../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('index_type')\n  .desc('Tests valid index types for array access expressions')\n  .params(u =>\n    u.combine('type', [\n      'bool',\n      'u32',\n      'i32',\n      'abstract-int',\n      'f32',\n      'f16',\n      'abstract-float',\n      'vec2i',\n    ] as const)\n  )\n  .fn(t => {\n    if (t.params.type === 'f16') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const ty = Type[t.params.type];\n    const enable = ty.requiresF16() ? 'enable f16;' : '';\n    const code = `${enable}\n    fn foo() {\n      var x = array(1,2,3);\n      let tmp = x[${ty.create(0).wgsl()}];\n    }`;\n    const expect =\n      t.params.type === 'i32' || t.params.type === 'u32' || t.params.type === 'abstract-int';\n    t.expectCompileResult(expect, code);\n  });\n\nconst kTypes = objectsToRecord([\n  ...kConcreteNumericScalarsAndVectors,\n  ...kAllBoolScalarsAndVectors,\n]);\nconst kTypeKeys = keysOf(kTypes);\n\ng.test('result_type')\n  .desc('Tests that correct result type is produced for an access expression')\n  .params(u =>\n    u\n      .combine('type', kTypeKeys)\n      .combine('elements', [0, 4] as const)\n      .filter(t => {\n        const ty = kTypes[t.type];\n        if (t.elements === 0) {\n          if (elementTypeOf(ty) === Type.bool) {\n            return false;\n          }\n        }\n        return true;\n      })\n  )\n  .beforeAllSubcases(t => {\n    const ty = kTypes[t.params.type];\n    if (ty.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const ty = kTypes[t.params.type];\n    const enable = ty.requiresF16() ? 'enable f16;' : '';\n    const arrayTy = Type['array'](t.params.elements, ty);\n    const module_decl =\n      t.params.elements === 0\n        ? `@group(0) @binding(0) var<storage> x : ${arrayTy.toString()};`\n        : ``;\n    const function_decl = t.params.elements === 0 ? `` : `var x : ${arrayTy.toString()};`;\n    const code = `${enable}\n    ${module_decl}\n    fn foo() {\n      ${function_decl}\n      let tmp1 : ${ty.toString()} = x[0];\n      let tmp2 : ${ty.toString()} = x[1];\n      let tmp3 : ${ty.toString()} = x[2];\n    }`;\n    t.expectCompileResult(true, code);\n  });\n\ninterface OutOfBoundsCase {\n  code: string;\n  result: boolean;\n  pipeline?: boolean;\n  value?: number;\n}\n\nconst kOutOfBoundsCases: Record<string, OutOfBoundsCase> = {\n  const_module_in_bounds: {\n    code: `const x = array(1,2,3)[0];`,\n    result: true,\n  },\n  const_module_oob_neg: {\n    code: `const x = array(1,2,3)[-1];`,\n    result: false,\n  },\n  const_module_oob_pos: {\n    code: `const x = array(1,2,3)[3];`,\n    result: false,\n  },\n  const_func_in_bounds: {\n    code: `fn foo() {\n      const x = array(1,2,3)[0];\n    }`,\n    result: true,\n  },\n  const_func_oob_neg: {\n    code: `fn foo {\n      const x = array(1,2,3)[-1];\n    }`,\n    result: false,\n  },\n  const_func_oob_pos: {\n    code: `fn foo {\n      const x = array(1,2,3)[3];\n    }`,\n    result: false,\n  },\n  override_in_bounds: {\n    code: `override x : i32;\n    fn y() -> u32 {\n      let tmp = array(1,2,3)[x];\n      return 0;\n    }`,\n    result: true,\n    pipeline: true,\n    value: 0,\n  },\n  override_oob_neg: {\n    code: `override x : i32;\n    fn y() -> u32 {\n      let tmp = array(1,2,3)[x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: -1,\n  },\n  override_oob_pos: {\n    code: `override x : i32;\n    fn y() -> u32 {\n      let tmp = array(1,2,3)[x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: 3,\n  },\n  runtime_in_bounds: {\n    code: `fn foo() {\n      let idx = 0;\n      let x = array(1,2,3)[idx];\n    }`,\n    result: true,\n  },\n  runtime_oob_neg: {\n    code: `fn foo() {\n      let idx = -1;\n      let x = array(1,2,3)[idx];\n    }`,\n    result: true,\n  },\n  runtime_oob_pos: {\n    code: `fn foo() {\n      let idx = 3;\n      let x = array(1,2,3)[idx];\n    }`,\n    result: true,\n  },\n  runtime_array_const_oob_neg: {\n    code: `@group(0) @binding(0) var<storage> x : array<u32>;\n    fn y() -> u32 {\n      let tmp = x[-1];\n      return 0;\n    }`,\n    result: false,\n  },\n  runtime_array_override_oob_neg: {\n    code: `@group(0) @binding(0) var<storage> v : array<u32>;\n    override x : i32;\n    fn y() -> u32 {\n      let tmp = v[x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: -1,\n  },\n  runtime_nested_array_override_oob_neg: {\n    code: `@group(0) @binding(0) var<storage> v : array<array<u32, 4>>;\n    override x : i32;\n    override w = 0u;\n    fn y() -> u32 {\n      let tmp = v[w][x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: -1,\n  },\n  runtime_nested_array_override_oob_pos: {\n    code: `@group(0) @binding(0) var<storage> v : array<array<u32,4>, 5>;\n    override x : i32;\n    override w = 0u;\n    fn y() -> u32 {\n      let tmp = v[w][x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: 4,\n  },\n  runtime_nested_array_override_pos: {\n    code: `@group(0) @binding(0) var<storage> v : array<array<u32,10>, 2>;\n    override x : i32;\n    override w = 0u;\n    fn y() -> u32 {\n      let tmp = v[w][x];\n      return 0;\n    }`,\n    result: true,\n    pipeline: true,\n    value: 9,\n  },\n  runtime_deep_nested_array_override_oob_pos: {\n    code: `@group(0) @binding(0) var<storage> v : array<array<array<u32, 3>, 4>, 5>;\n    override x : i32;\n    override w = 0u;\n    override u = 0u;\n    fn y() -> u32 {\n      let tmp = v[w][u][x];\n      return 0;\n    }`,\n    result: false,\n    pipeline: true,\n    value: 3,\n  },\n  runtime_deep_nested_array_override_pos: {\n    code: `@group(0) @binding(0) var<storage> v : array<array<array<u32, 3>, 4>, 5>;\n    override x : i32;\n    override w = 4u;\n    override u = 3u;\n    fn y() -> u32 {\n      let tmp = v[w][u][x];\n      return 0;\n    }`,\n    result: true,\n    pipeline: true,\n    value: 2,\n  },\n  runtime_structure_array_override_oob_neg: {\n    code: `\n      override x : i32;\n      struct S {\n        w : array<u32>\n      }\n      @group(0) @binding(0) var<storage> v : S;\n      fn foo() -> u32 {\n        let tmp : u32 = v.w[x];\n        return 0;\n      }`,\n    result: false,\n    pipeline: true,\n    value: -1,\n  },\n  runtime_structure_array_override_pos: {\n    code: `\n      override x : i32;\n      struct S {\n        w : array<u32>\n      }\n      @group(0) @binding(0) var<storage> v : S;\n      fn foo() -> u32 {\n        let tmp : u32 = v.w[x];\n        return 0;\n      }`,\n    result: true,\n    pipeline: true,\n    value: 1,\n  },\n  runtime_structure_array_override_oob_pos: {\n    code: `\n      override x : i32;\n      struct S {\n        w : array<u32, 5>\n      }\n      @group(0) @binding(0) var<storage> v : S;\n      fn foo() -> u32 {\n        let tmp : u32 = v.w[x];\n        return 0;\n      }`,\n    result: false,\n    pipeline: true,\n    value: 5,\n  },\n  runtime_nested_structure_array_override_oob_pos: {\n    code: `\n      override x : i32;\n      struct S {\n        w : array<u32, 5>\n      }\n      struct S2 {\n        r : S\n      }\n      @group(0) @binding(0) var<storage> v : S2;\n      fn foo() -> u32 {\n        let tmp : u32 = v.r.w[x];\n        return 0;\n      }`,\n    result: false,\n    pipeline: true,\n    value: 5,\n  },\n  runtime_nested_structure_array_override_pos: {\n    code: `\n      override x : i32;\n      struct S {\n        w : array<u32, 6>\n      }\n      struct S2 {\n        r : S\n      }\n      @group(0) @binding(0) var<storage> v : S2;\n      fn foo() -> u32 {\n        let tmp : u32 = v.r.w[x];\n        return 0;\n      }`,\n    result: true,\n    pipeline: true,\n    value: 5,\n  },\n};\n\ng.test('early_eval_errors')\n  .desc('Tests early evaluation errors for out-of-bounds indexing')\n  .params(u => u.combine('case', keysOf(kOutOfBoundsCases)))\n  .fn(t => {\n    const testcase = kOutOfBoundsCases[t.params.case];\n    if (testcase.pipeline) {\n      const v: number = testcase.value ?? 0;\n      t.expectPipelineResult({\n        expectedResult: testcase.result,\n        code: testcase.code,\n        constants: { x: v },\n        reference: ['y()'],\n      });\n    } else {\n      t.expectCompileResult(testcase.result, testcase.code);\n    }\n  });\n\ng.test('abstract_array_concrete_index')\n  .desc('Tests that a concrete index type on an abstract array remains abstract')\n  .fn(t => {\n    const code = `\n    const idx = 0i;\n    const_assert array(0xfffffffff,2,3)[idx] == 0xfffffffff;`;\n    t.expectCompileResult(true, code);\n  });\n"],"mappings":"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"}