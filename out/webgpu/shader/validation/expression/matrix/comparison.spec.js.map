{"version":3,"file":"comparison.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kComparisonOperators","eq","op","ne","gt","ge","lt","le","kTests","bool","src","vec","i32","u32","ai","f32","f16","is_f16","af","texture","sampler","atomic","struct","array","matf_matching","matf_no_match","math","test","desc","params","u","combine","fn","t","lhs","rhs","code","startsWith","pass","expectCompileResult"],"sources":["../../../../../../src/webgpu/shader/validation/expression/matrix/comparison.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for matrix comparison expressions.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// A list of comparison operators\nconst kComparisonOperators = {\n  eq: { op: '==' },\n  ne: { op: '!=' },\n  gt: { op: '>' },\n  ge: { op: '>=' },\n  lt: { op: '<' },\n  le: { op: '<=' },\n};\n\ninterface Argument {\n  /** Value as a string. */\n  readonly src: string;\n  /** Requires f16 */\n  readonly is_f16?: boolean;\n}\n\nconst kTests: { readonly [name: string]: Argument } = {\n  bool: {\n    src: 'false',\n  },\n  vec: {\n    src: 'vec2()',\n  },\n  i32: {\n    src: '1i',\n  },\n  u32: {\n    src: '1u',\n  },\n  ai: {\n    src: '1',\n  },\n  f32: {\n    src: '1f',\n  },\n  f16: {\n    src: '1h',\n    is_f16: true,\n  },\n  af: {\n    src: '1.0',\n  },\n  texture: {\n    src: 't',\n  },\n  sampler: {\n    src: 's',\n  },\n  atomic: {\n    src: 'a',\n  },\n  struct: {\n    src: 'str',\n  },\n  array: {\n    src: 'arr',\n  },\n  matf_matching: {\n    src: 'mat2x3f()',\n  },\n  matf_no_match: {\n    src: 'mat4x4f()',\n  },\n  math: {\n    src: 'mat2x3h()',\n    is_f16: true,\n  },\n};\n\ng.test('invalid')\n  .desc(`Validates that comparison expressions are never accepted for matrix types.`)\n  .params(u =>\n    u\n      .combine('op', keysOf(kComparisonOperators))\n      // 1i is the control that the test passes\n      .combine('rhs', ['1i', 'ai', 'mat2x3f()', 'mat2x3h()'])\n      .combine('test', keysOf(kTests))\n  )\n  .fn(t => {\n    const lhs = kTests[t.params.test].src;\n    const rhs = t.params.rhs === 'ai' ? 'mat2x3(0, 0, 0, 0, 0, 0)' : t.params.rhs;\n\n    const code = `\n${kTests[t.params.test].is_f16 || t.params.rhs.startsWith('mat2x3h(') ? 'enable f16;' : ''}\n@group(0) @binding(0) var t : texture_2d<f32>;\n@group(0) @binding(1) var s : sampler;\n@group(0) @binding(2) var<storage, read_write> a : atomic<i32>;\n\nstruct S { u : u32 }\n\nvar<private> arr : array<i32, 4>;\nvar<private> str : S;\n\n@compute @workgroup_size(1)\nfn main() {\n  let foo = ${lhs} ${kComparisonOperators[t.params.op].op} ${rhs};\n}\n`;\n\n    const pass = (lhs === '1i' || lhs === '1') && rhs === '1i';\n    t.expectCompileResult(pass, code);\n  });\n"],"mappings":"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"}