{"version":3,"file":"add_sub.spec.js","names":["description","makeTestGroup","keysOf","kValue","ShaderValidationTest","g","kOperators","add","op","sub","kTests","bool","src","vec","i32","u32","ai","f32","f16","is_f16","af","texture","sampler","atomic","struct","array","matf_ai_matching","matf_ai_no_matching","matf_size_matching","matf_size_no_match","math_size_matching","math_size_no_matching","test","desc","params","u","combine","fn","t","lhs","rhs","code","startsWith","expectCompileResult","swap","a","positive","max","c","r","i","k","negative","min","f64"],"sources":["../../../../../../src/webgpu/shader/validation/expression/matrix/add_sub.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for matrix addition and subtraction expressions.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../common/util/data_tables.js';\nimport { kValue } from '../../../../util/constants.js';\nimport { ShaderValidationTest } from '../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n// A list of operators\nconst kOperators = {\n  add: { op: '+' },\n  sub: { op: '-' },\n};\n\ninterface Argument {\n  /** Value as a string. */\n  readonly src: string;\n  /** Requires f16 */\n  readonly is_f16?: boolean;\n}\n\nconst kTests: { readonly [name: string]: Argument } = {\n  bool: {\n    src: 'false',\n  },\n  vec: {\n    src: 'vec2()',\n  },\n  i32: {\n    src: '1i',\n  },\n  u32: {\n    src: '1u',\n  },\n  ai: {\n    src: '1',\n  },\n  f32: {\n    src: '1f',\n  },\n  f16: {\n    src: '1h',\n    is_f16: true,\n  },\n  af: {\n    src: '1.0',\n  },\n  texture: {\n    src: 't',\n  },\n  sampler: {\n    src: 's',\n  },\n  atomic: {\n    src: 'a',\n  },\n  struct: {\n    src: 'str',\n  },\n  array: {\n    src: 'arr',\n  },\n  matf_ai_matching: {\n    src: 'mat2x4(0, 0, 0, 0, 0, 0, 0, 0)',\n  },\n  matf_ai_no_matching: {\n    src: 'mat2x2(0, 0, 0, 0)',\n  },\n  matf_size_matching: {\n    src: 'mat2x3f()',\n  },\n  matf_size_no_match: {\n    src: 'mat4x4f()',\n  },\n  math_size_matching: {\n    src: 'mat2x3h()',\n    is_f16: true,\n  },\n  math_size_no_matching: {\n    src: 'mat4x4h()',\n    is_f16: true,\n  },\n};\n\ng.test('invalid')\n  .desc(`Validates that add and subtract are valid if the matrix types match`)\n  .params(u =>\n    u\n      .combine('op', keysOf(kOperators))\n      .combine('rhs', ['ai', 'mat2x3f()', 'mat2x3h()'])\n      .combine('test', keysOf(kTests))\n  )\n  .fn(t => {\n    const lhs = kTests[t.params.test].src;\n    const rhs = t.params.rhs === 'ai' ? 'mat2x4(0, 0, 0, 0, 0, 0, 0, 0)' : t.params.rhs;\n\n    const code = `\n${kTests[t.params.test].is_f16 || t.params.rhs.startsWith('mat2x3h(') ? 'enable f16;' : ''}\n@group(0) @binding(0) var t : texture_2d<f32>;\n@group(0) @binding(1) var s : sampler;\n@group(0) @binding(2) var<storage, read_write> a : atomic<i32>;\n\nstruct S { u : u32 }\n\nvar<private> arr : array<u32, 4>;\nvar<private> str : S;\n\n@compute @workgroup_size(1)\nfn main() {\n  let foo = ${lhs} ${kOperators[t.params.op].op} ${rhs};\n}\n`;\n\n    t.expectCompileResult(lhs === rhs, code);\n  });\n\ng.test('with_abstract')\n  .desc(`Validates that add and subtract are valid if when done against an abstract`)\n  .params(u =>\n    u\n      .combine('op', keysOf(kOperators))\n      .combine('rhs', ['mat2x3f()', 'mat2x3h()'])\n      .combine('swap', [true, false])\n  )\n  .fn(t => {\n    let lhs = 'mat2x3(0, 0, 0, 0, 0, 0)';\n    let rhs = t.params.rhs;\n\n    if (t.params.swap) {\n      const a = lhs;\n      lhs = rhs;\n      rhs = a;\n    }\n\n    const code = `\n${t.params.rhs.startsWith('mat2x3h(') ? 'enable f16;' : ''}\n@group(0) @binding(0) var t : texture_2d<f32>;\n@group(0) @binding(1) var s : sampler;\n@group(0) @binding(2) var<storage, read_write> a : atomic<i32>;\n\nstruct S { u : u32 }\n\nvar<private> arr : array<u32, 4>;\nvar<private> str : S;\n\n@compute @workgroup_size(1)\nfn main() {\n  let foo = ${lhs} ${kOperators[t.params.op].op} ${rhs};\n}\n`;\n\n    t.expectCompileResult(true, code);\n  });\n\ng.test('overflow_f32')\n  .desc(`Validates that f32 add overflows in shader creation`)\n  .params(u =>\n    u\n      .combine('rhs', [kValue.f32.positive.max, 1])\n      .combine('c', [2, 3, 4] as const)\n      .combine('r', [2, 3, 4] as const)\n  )\n  .fn(t => {\n    let lhs = `mat${t.params.c}x${t.params.r}f(`;\n    let rhs = `mat${t.params.c}x${t.params.r}f(`;\n    for (let i = 0; i < t.params.c; i++) {\n      for (let k = 0; k < t.params.r; k++) {\n        lhs += `${kValue.f32.positive.max / 2},`;\n        rhs += `${t.params.rhs},`;\n      }\n    }\n    rhs += ')';\n    lhs += ')';\n\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n  const foo = ${lhs} + ${rhs};\n}\n`;\n\n    t.expectCompileResult(t.params.rhs === 1, code);\n  });\n\ng.test('underflow_f32')\n  .desc(`Validates that f32 add underflows in shader creation`)\n  .params(u =>\n    u\n      .combine('rhs', [kValue.f32.positive.max, 1])\n      .combine('c', [2, 3, 4] as const)\n      .combine('r', [2, 3, 4] as const)\n  )\n  .fn(t => {\n    let lhs = `mat${t.params.c}x${t.params.r}f(`;\n    let rhs = `mat${t.params.c}x${t.params.r}f(`;\n    for (let i = 0; i < t.params.c; i++) {\n      for (let k = 0; k < t.params.r; k++) {\n        lhs += `${kValue.f32.negative.min / 2},`;\n        rhs += `${t.params.rhs},`;\n      }\n    }\n    rhs += ')';\n    lhs += ')';\n\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n  const foo = ${lhs} - ${rhs};\n}\n`;\n\n    t.expectCompileResult(t.params.rhs === 1, code);\n  });\n\ng.test('overflow_f16')\n  .desc(`Validates that f16 add overflows in shader creation`)\n  .params(u =>\n    u\n      .combine('rhs', [kValue.f16.positive.max, 1])\n      .combine('c', [2, 3, 4] as const)\n      .combine('r', [2, 3, 4] as const)\n  )\n  .fn(t => {\n    let lhs = `mat${t.params.c}x${t.params.r}h(`;\n    let rhs = `mat${t.params.c}x${t.params.r}h(`;\n    for (let i = 0; i < t.params.c; i++) {\n      for (let k = 0; k < t.params.r; k++) {\n        lhs += `${kValue.f16.positive.max / 2},`;\n        rhs += `${t.params.rhs},`;\n      }\n    }\n    rhs += ')';\n    lhs += ')';\n\n    const code = `\nenable f16;\n@compute @workgroup_size(1)\nfn main() {\n  const foo = ${lhs} + ${rhs};\n}\n`;\n\n    t.expectCompileResult(t.params.rhs === 1, code);\n  });\n\ng.test('underflow_f16')\n  .desc(`Validates that f16 add underflows in shader creation`)\n  .params(u =>\n    u\n      .combine('rhs', [kValue.f16.positive.max, 1])\n      .combine('c', [2, 3, 4] as const)\n      .combine('r', [2, 3, 4] as const)\n  )\n  .fn(t => {\n    let lhs = `mat${t.params.c}x${t.params.r}h(`;\n    let rhs = `mat${t.params.c}x${t.params.r}h(`;\n    for (let i = 0; i < t.params.c; i++) {\n      for (let k = 0; k < t.params.r; k++) {\n        lhs += `${kValue.f16.negative.min / 2},`;\n        rhs += `${t.params.rhs},`;\n      }\n    }\n    rhs += ')';\n    lhs += ')';\n\n    const code = `\nenable f16;\n@compute @workgroup_size(1)\nfn main() {\n  const foo = ${lhs} - ${rhs};\n}\n`;\n\n    t.expectCompileResult(t.params.rhs === 1, code);\n  });\n\ng.test('overflow_abstract')\n  .desc(`Validates that abstract add overflows in shader creation`)\n  .params(u =>\n    u\n      .combine('rhs', [kValue.f64.positive.max, 1])\n      .combine('c', [2, 3, 4] as const)\n      .combine('r', [2, 3, 4] as const)\n  )\n  .fn(t => {\n    let lhs = `mat${t.params.c}x${t.params.r}(`;\n    let rhs = `mat${t.params.c}x${t.params.r}(`;\n    for (let i = 0; i < t.params.c; i++) {\n      for (let k = 0; k < t.params.r; k++) {\n        lhs += `${kValue.f64.positive.max / 2},`;\n        rhs += `${t.params.rhs},`;\n      }\n    }\n    rhs += ')';\n    lhs += ')';\n\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n  const foo = ${lhs} + ${rhs};\n}\n`;\n\n    t.expectCompileResult(t.params.rhs === 1, code);\n  });\n\ng.test('underflow_abstract')\n  .desc(`Validates that abstract add underflows in shader creation`)\n  .params(u =>\n    u\n      .combine('rhs', [kValue.f64.positive.max, 1])\n      .combine('c', [2, 3, 4] as const)\n      .combine('r', [2, 3, 4] as const)\n  )\n  .fn(t => {\n    let lhs = `mat${t.params.c}x${t.params.r}(`;\n    let rhs = `mat${t.params.c}x${t.params.r}(`;\n    for (let i = 0; i < t.params.c; i++) {\n      for (let k = 0; k < t.params.r; k++) {\n        lhs += `${kValue.f64.negative.min / 2},`;\n        rhs += `${t.params.rhs},`;\n      }\n    }\n    rhs += ')';\n    lhs += ')';\n\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n  const foo = ${lhs} - ${rhs};\n}\n`;\n\n    t.expectCompileResult(t.params.rhs === 1, code);\n  });\n"],"mappings":"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"}