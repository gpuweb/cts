{"version":3,"file":"any.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","elementTypeOf","kAllScalarsAndVectors","ShaderValidationTest","validateConstOrOverrideBuiltinEval","g","kArgumentTypes","test","desc","params","u","combine","fn","t","type","bool","create","kTests","valid","src","pass","alias","i32","u32","f32","f16","vec_bool","vec2_bool_implicit","vec3_bool_implicit","vec_i32","vec_u32","vec_f32","vec_f16","matrix","atomic","array","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","no_args","too_many_args","use_it","use","expectCompileResult","enables","includes","code"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/any.spec.ts"],"sourcesContent":["const builtin = 'any';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport { Type, elementTypeOf, kAllScalarsAndVectors } from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport { validateConstOrOverrideBuiltinEval } from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kArgumentTypes = objectsToRecord(kAllScalarsAndVectors);\n\ng.test('argument_types')\n  .desc(\n    `\nValidates that scalar and vector arguments are rejected by ${builtin}() if not bool or vecN<bool>\n`\n  )\n  .params(u => u.combine('type', keysOf(kArgumentTypes)))\n  .fn(t => {\n    const type = kArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ elementTypeOf(type) === Type.bool,\n      [type.create(0)],\n      'constant',\n      /* returnType */ Type.bool\n    );\n  });\n\nconst kTests = {\n  valid: {\n    src: `_ = ${builtin}(true);`,\n    pass: true,\n  },\n  alias: {\n    src: `_ = ${builtin}(bool_alias(true));`,\n    pass: true,\n  },\n  bool: {\n    src: `_ = ${builtin}(false);`,\n    pass: true,\n  },\n  i32: {\n    src: `_ = ${builtin}(1i);`,\n    pass: false,\n  },\n  u32: {\n    src: `_ = ${builtin}(1u);`,\n    pass: false,\n  },\n  f32: {\n    src: `_ = ${builtin}(1.0f);`,\n    pass: false,\n  },\n  f16: {\n    src: `_ = ${builtin}(1.0h);`,\n    pass: false,\n  },\n  vec_bool: {\n    src: `_ = ${builtin}(vec2<bool>(false, true));`,\n    pass: true,\n  },\n  vec2_bool_implicit: {\n    src: `_ = ${builtin}(vec2(false, true));`,\n    pass: true,\n  },\n  vec3_bool_implicit: {\n    src: `_ = ${builtin}(vec3(true));`,\n    pass: true,\n  },\n  vec_i32: {\n    src: `_ = ${builtin}(vec2<i32>(1, 1));`,\n    pass: false,\n  },\n  vec_u32: {\n    src: `_ = ${builtin}(vec2<u32>(1, 1));`,\n    pass: false,\n  },\n  vec_f32: {\n    src: `_ = ${builtin}(vec2<f32>(1, 1));`,\n    pass: false,\n  },\n  vec_f16: {\n    src: `_ = ${builtin}(vec2<f16>(1, 1));`,\n    pass: false,\n  },\n  matrix: {\n    src: `_ = ${builtin}(mat2x2(1, 1, 1, 1));`,\n    pass: false,\n  },\n  atomic: {\n    src: ` _ = ${builtin}(a);`,\n    pass: false,\n  },\n  array: {\n    src: `var a: array<bool, 5>;\n            _ = ${builtin}(a);`,\n    pass: false,\n  },\n  array_runtime: {\n    src: `_ = ${builtin}(k.arry);`,\n    pass: false,\n  },\n  struct: {\n    src: `var a: A;\n            _ = ${builtin}(a);`,\n    pass: false,\n  },\n  enumerant: {\n    src: `_ = ${builtin}(read_write);`,\n    pass: false,\n  },\n  ptr: {\n    src: `var<function> a = true;\n            let p: ptr<function, bool> = &a;\n            _ = ${builtin}(p);`,\n    pass: false,\n  },\n  ptr_deref: {\n    src: `var<function> a = true;\n            let p: ptr<function, bool> = &a;\n            _ = ${builtin}(*p);`,\n    pass: true,\n  },\n  sampler: {\n    src: `_ = ${builtin}(s);`,\n    pass: false,\n  },\n  texture: {\n    src: `_ = ${builtin}(t);`,\n    pass: false,\n  },\n  no_args: {\n    src: `_ = ${builtin}();`,\n    pass: false,\n  },\n  too_many_args: {\n    src: `_ = ${builtin}(true, true);`,\n    pass: false,\n  },\n};\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}(true); }`);\n  });\n\ng.test('arguments')\n  .desc(`Test that ${builtin} is validated correctly.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const src = kTests[t.params.test].src;\n    const enables = t.params.test.includes('f16') ? 'enable f16;' : '';\n    const code = `\n  ${enables}\n  alias bool_alias = bool;\n\n  @group(0) @binding(0) var s: sampler;\n  @group(0) @binding(1) var t: texture_2d<f32>;\n\n  var<workgroup> a: atomic<u32>;\n\n  struct A {\n    i: bool,\n  }\n  struct B {\n    arry: array<u32>,\n  }\n  @group(0) @binding(3) var<storage> k: B;\n\n  @vertex\n  fn main() -> @builtin(position) vec4<f32> {\n    ${src}\n    return vec4<f32>(.4, .2, .3, .1);\n  }`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n"],"mappings":"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"}