{"version":3,"file":"max.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kAllNumericScalarsAndVectors","scalarTypeOf","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","f16","skipIfDeviceDoesNotHaveFeature","expectedResult","create","a","b","kArgCases","good","bad_no_parens","bad_0args","bad_1arg","bad_3arg","bad_0bool","bad_0array","bad_0struct","bad_1bool","bad_1array","bad_1struct","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/max.spec.ts"],"sourcesContent":["const builtin = 'max';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kAllNumericScalarsAndVectors,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kAllNumericScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('a', u => fullRangeForType(kValuesTypes[u.type], 5))\n      .expand('b', u => fullRangeForType(kValuesTypes[u.type], 5))\n  )\n  .fn(t => {\n    if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const type = kValuesTypes[t.params.type];\n    const expectedResult = true; // should never error\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.a), type.create(t.params.b)],\n      t.params.stage\n    );\n  });\n\nconst kArgCases = {\n  good: '(1.1, 2.2)',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(1.0)',\n  bad_3arg: '(1.0, 2.0, 3.0)',\n  // Bad value for arg 0\n  bad_0bool: '(false, 1.0)',\n  bad_0array: '(array(1.1,2.2), 1.0)',\n  bad_0struct: '(modf(2.2), 1.0)',\n  // Bad value type for arg 1\n  bad_1bool: '(1.0, true)',\n  bad_1array: '(1.0, array(1.1,2.2))',\n  bad_1struct: '(1.0, modf(2.2))',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}