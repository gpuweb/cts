{"version":3,"file":"round.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConcreteIntegerScalarsAndVectors","kConvertableToFloatScalarsAndVectors","scalarTypeOf","fpTraitsFor","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","unique","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","kind","constants","negative","min","positive","max","fn","t","expectedResult","create","value","kIntegerArgumentTypes","f32","kTests","valid","args","pass","no_parens","too_few_args","too_many_args","alias","bool","vec_bool","matrix","atomic","array","preamble","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","expectCompileResult","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/round.spec.ts"],"sourcesContent":["const builtin = 'round';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { fpTraitsFor } from '../../../../../util/floating_point.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  unique,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() inputs rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => {\n        if (scalarTypeOf(kValuesTypes[u.type]).kind === 'abstract-int') {\n          return fullRangeForType(kValuesTypes[u.type]);\n        } else {\n          const constants = fpTraitsFor(scalarTypeOf(kValuesTypes[u.type])).constants();\n          return unique(fullRangeForType(kValuesTypes[u.type]), [\n            constants.negative.min + 0.1,\n            constants.positive.max - 0.1,\n          ]);\n        }\n      })\n  )\n  .fn(t => {\n    const expectedResult = true; // Result should always be representable by the type\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kValuesTypes[t.params.type].create(t.params.value)],\n      t.params.stage\n    );\n  });\n\n// f32 is included here to confirm that validation is failing due to a type issue and not something else.\nconst kIntegerArgumentTypes = objectsToRecord([Type.f32, ...kConcreteIntegerScalarsAndVectors]);\n\ng.test('integer_argument')\n  .desc(\n    `\nValidates that scalar and vector integer arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kIntegerArgumentTypes)))\n  .fn(t => {\n    const type = kIntegerArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ type === Type.f32,\n      [type.create(1)],\n      'constant'\n    );\n  });\n\nconst kTests: {\n  readonly [name: string]: {\n    /** Arguments to pass to the builtin with parentheses. */\n    readonly args: string;\n    /** Should the test case pass. */\n    readonly pass: boolean;\n    /** Additional setup code in the function scope. */\n    readonly preamble?: string;\n  };\n} = {\n  valid: {\n    args: '(1.0f)',\n    pass: true,\n  },\n  // Number of arguments.\n  no_parens: {\n    args: '',\n    pass: false,\n  },\n  too_few_args: {\n    args: '()',\n    pass: false,\n  },\n  too_many_args: {\n    args: '(1.f,2.f)',\n    pass: false,\n  },\n  // Arguments types (only 1 argument for this builtin).\n  alias: {\n    args: '(f32_alias(1.f))',\n    pass: true,\n  },\n  bool: {\n    args: '(false)',\n    pass: false,\n  },\n  vec_bool: {\n    args: '(vec2<bool>(false,true))',\n    pass: false,\n  },\n  matrix: {\n    args: '(mat2x2(1.f,1.f,1.f,1.f))',\n    pass: false,\n  },\n  atomic: {\n    args: '(a)',\n    pass: false,\n  },\n  array: {\n    preamble: 'var arry: array<f32, 5>;',\n    args: '(arry)',\n    pass: false,\n  },\n  array_runtime: {\n    args: '(k.arry)',\n    pass: false,\n  },\n  struct: {\n    preamble: 'var x: A;',\n    args: '(x)',\n    pass: false,\n  },\n  enumerant: {\n    args: '(read_write)',\n    pass: false,\n  },\n  ptr: {\n    preamble: `var<function> f = 1.f;\n                     let p: ptr<function, f32> = &f;`,\n    args: '(p)',\n    pass: false,\n  },\n  ptr_deref: {\n    preamble: `var<function> f = 1.f;\n                     let p: ptr<function, f32> = &f;`,\n    args: '(*p)',\n    pass: true,\n  },\n  sampler: {\n    args: '(s)',\n    pass: false,\n  },\n  texture: {\n    args: '(t)',\n    pass: false,\n  },\n};\n\ng.test('arguments')\n  .desc(`Test compilation validation of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const test = kTests[t.params.test];\n    t.expectCompileResult(\n      test.pass,\n      `alias f32_alias = f32;\n\n            @group(0) @binding(0) var s: sampler;\n            @group(0) @binding(1) var t: texture_2d<f32>;\n\n            var<workgroup> a: atomic<u32>;\n\n            struct A {\n              i: f32,\n            }\n            struct B {\n              arry: array<f32>,\n            }\n            @group(0) @binding(3) var<storage> k: B;\n\n\n            @vertex\n            fn main() -> @builtin(position) vec4<f32> {\n              ${test.preamble ? test.preamble : ''}\n              _ = ${builtin}${test.args};\n              return vec4<f32>(.4, .2, .3, .1);\n            }`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}(1.0f); }`);\n  });\n"],"mappings":"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"}