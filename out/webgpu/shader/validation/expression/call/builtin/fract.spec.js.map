{"version":3,"file":"fract.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","kConvertableToFloatScalarsAndVectors","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","expectedResult","create","value","kArgCases","good","bad_no_parens","bad_0args","bad_2arg","bad_0bool","bad_0array","bad_0struct","bad_0uint","bad_0int","bad_0vec2i","bad_0vec2u","bad_0vec3i","bad_0vec3u","bad_0vec4i","bad_0vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/fract.spec.ts"],"sourcesContent":["const builtin = 'fract';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport { kConvertableToFloatScalarsAndVectors } from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() error on invalid inputs.\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValidArgumentTypes))\n      .filter(u => stageSupportsType(u.stage, kValidArgumentTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => fullRangeForType(kValidArgumentTypes[u.type]))\n  )\n  .fn(t => {\n    const expectedResult = true;\n\n    const type = kValidArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kArgCases = {\n  good: '(1.2)',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_2arg: '(1.2, 2.3)',\n  // Bad value for arg 0\n  bad_0bool: '(false)',\n  bad_0array: '(array(1.1,2.2))',\n  bad_0struct: '(modf(2.2))',\n  bad_0uint: '(1u)',\n  bad_0int: '(1i)',\n  bad_0vec2i: '(vec2i())',\n  bad_0vec2u: '(vec2u())',\n  bad_0vec3i: '(vec3i())',\n  bad_0vec3u: '(vec3u())',\n  bad_0vec4i: '(vec4i())',\n  bad_0vec4u: '(vec4u())',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}