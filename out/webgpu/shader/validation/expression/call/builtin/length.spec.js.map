{"version":3,"file":"length.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConcreteIntegerScalarsAndVectors","kConvertableToFloatScalar","kConvertableToFloatVec2","kConvertableToFloatVec3","kConvertableToFloatVec4","scalarTypeOf","isRepresentable","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","calculate","vec","type","vec_number","map","e","Number","squareSum","reduce","prev","curr","result","Math","sqrt","isIntermediateRepresentable","kind","abstractFloat","isResultRepresentable","kScalarTypes","test","desc","params","u","combine","filter","stage","beginSubcases","expand","fn","t","expectedResult","create","value","kVec2Types","x","y","_result","kVec3Types","z","kVec4Types","w","kIntegerArgumentTypes","f32","kArgCases","good","bad_no_parens","bad_0args","bad_2args","bad_0i32","bad_0u32","bad_0bool","bad_0vec2u","bad_0mat","bad_0array","bad_0struct","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/length.spec.ts"],"sourcesContent":["const builtin = 'length';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  ScalarType,\n  Type,\n  kConcreteIntegerScalarsAndVectors,\n  kConvertableToFloatScalar,\n  kConvertableToFloatVec2,\n  kConvertableToFloatVec3,\n  kConvertableToFloatVec4,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { isRepresentable } from '../../../../../util/floating_point.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\n/**\n * Evaluates the result and information about a call to length(), with a vector\n * formed from `vec` of the element type `type`.\n */\nfunction calculate(\n  vec: (number | bigint)[],\n  type: ScalarType\n): {\n  /**\n   * True iff the sum of the squares can be represented by the data type.\n   * @note The specification does not enforce the method or precision of how\n   * length() is calculated. If intermediate is not representable but the result\n   * is representable, then the test case is skipped as it is undefined whether\n   * the evaluation should error or not.\n   */\n  isIntermediateRepresentable: boolean;\n  /** True iff the result of length() can be represented by the data type. */\n  isResultRepresentable: boolean;\n  /** The computed value of length(). */\n  result: number;\n} {\n  const vec_number = vec.map(e => Number(e));\n  const squareSum = vec_number.reduce((prev, curr) => prev + Number(curr) * Number(curr), 0);\n  const result = Math.sqrt(squareSum);\n  return {\n    isIntermediateRepresentable: isRepresentable(\n      squareSum,\n      // AbstractInt is converted to AbstractFloat before calling into the builtin\n      scalarTypeOf(type).kind === 'abstract-int' ? Type.abstractFloat : scalarTypeOf(type)\n    ),\n    isResultRepresentable: isRepresentable(\n      result,\n      // AbstractInt is converted to AbstractFloat before calling into the builtin\n      scalarTypeOf(type).kind === 'abstract-int' ? Type.abstractFloat : scalarTypeOf(type)\n    ),\n    result,\n  };\n}\n\nconst kScalarTypes = objectsToRecord(kConvertableToFloatScalar);\n\ng.test('scalar')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() with\nthe input scalar value always compiles without error\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kScalarTypes))\n      .filter(u => stageSupportsType(u.stage, kScalarTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => fullRangeForType(kScalarTypes[u.type]))\n  )\n  .fn(t => {\n    // We only validate with numbers known to be representable by the type\n    const expectedResult = true;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kScalarTypes[t.params.type].create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kVec2Types = objectsToRecord(kConvertableToFloatVec2);\n\ng.test('vec2')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() with a vec2 compiles with valid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kVec2Types))\n      .filter(u => stageSupportsType(u.stage, kVec2Types[u.type]))\n      .beginSubcases()\n      .expand('x', u => fullRangeForType(kVec2Types[u.type], 5))\n      .expand('y', u => fullRangeForType(kVec2Types[u.type], 5))\n      .expand('_result', u => [calculate([u.x, u.y], scalarTypeOf(kVec2Types[u.type]))])\n      .filter(u => u._result.isResultRepresentable === u._result.isIntermediateRepresentable)\n  )\n  .fn(t => {\n    const expectedResult = t.params._result.isResultRepresentable;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kVec2Types[t.params.type].create([t.params.x, t.params.y])],\n      t.params.stage\n    );\n  });\n\nconst kVec3Types = objectsToRecord(kConvertableToFloatVec3);\n\ng.test('vec3')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() with a vec3 compiles with valid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kVec3Types))\n      .filter(u => stageSupportsType(u.stage, kVec3Types[u.type]))\n      .beginSubcases()\n      .expand('x', u => fullRangeForType(kVec3Types[u.type], 4))\n      .expand('y', u => fullRangeForType(kVec3Types[u.type], 4))\n      .expand('z', u => fullRangeForType(kVec3Types[u.type], 4))\n      .expand('_result', u => [calculate([u.x, u.y, u.z], scalarTypeOf(kVec3Types[u.type]))])\n      .filter(u => u._result.isResultRepresentable === u._result.isIntermediateRepresentable)\n  )\n  .fn(t => {\n    const expectedResult = t.params._result.isResultRepresentable;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kVec3Types[t.params.type].create([t.params.x, t.params.y, t.params.z])],\n      t.params.stage\n    );\n  });\n\nconst kVec4Types = objectsToRecord(kConvertableToFloatVec4);\n\ng.test('vec4')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() with a vec4 compiles with valid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kVec4Types))\n      .filter(u => stageSupportsType(u.stage, kVec4Types[u.type]))\n      .beginSubcases()\n      .expand('x', u => fullRangeForType(kVec4Types[u.type], 3))\n      .expand('y', u => fullRangeForType(kVec4Types[u.type], 3))\n      .expand('z', u => fullRangeForType(kVec4Types[u.type], 3))\n      .expand('w', u => fullRangeForType(kVec4Types[u.type], 3))\n      .expand('_result', u => [calculate([u.x, u.y, u.z, u.w], scalarTypeOf(kVec4Types[u.type]))])\n      .filter(u => u._result.isResultRepresentable === u._result.isIntermediateRepresentable)\n  )\n  .fn(t => {\n    const expectedResult = t.params._result.isResultRepresentable;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kVec4Types[t.params.type].create([t.params.x, t.params.y, t.params.z, t.params.w])],\n      t.params.stage\n    );\n  });\n\nconst kIntegerArgumentTypes = objectsToRecord([Type.f32, ...kConcreteIntegerScalarsAndVectors]);\n\ng.test('integer_argument')\n  .desc(\n    `\nValidates that scalar and vector integer arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kIntegerArgumentTypes)))\n  .fn(t => {\n    const type = kIntegerArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ type === Type.f32,\n      [type.create(1)],\n      'constant'\n    );\n  });\n\nconst kArgCases = {\n  good: '(1.1)',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_2args: '(1.0,2.0)',\n  // Bad value type for arg 0\n  bad_0i32: '(1i)',\n  bad_0u32: '(1u)',\n  bad_0bool: '(false)',\n  bad_0vec2u: '(vec2u())',\n  bad_0mat: '(mat2x2f())',\n  bad_0array: '(array(1.1,2.2))',\n  bad_0struct: '(modf(2.2))',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}