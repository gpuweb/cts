{"version":3,"file":"abs.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kAllNumericScalarsAndVectors","scalarTypeOf","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","f16","skipIfDeviceDoesNotHaveFeature","expectedResult","create","value","kTests","valid","src","pass","alias","bool","vec_bool","matrix","atomic","array","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","no_params","too_many_params","must_use","code","expectCompileResult"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/abs.spec.ts"],"sourcesContent":["const builtin = 'abs';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kAllNumericScalarsAndVectors,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kAllNumericScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => fullRangeForType(kValuesTypes[u.type]))\n  )\n  .fn(t => {\n    if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const expectedResult = true; // abs() should never error\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [kValuesTypes[t.params.type].create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kTests = {\n  valid: {\n    src: `_ = abs(1);`,\n    pass: true,\n  },\n  alias: {\n    src: `_ = abs(i32_alias(1));`,\n    pass: true,\n  },\n\n  bool: {\n    src: `_ = abs(false);`,\n    pass: false,\n  },\n  vec_bool: {\n    src: `_ = abs(vec2<bool>(false, true));`,\n    pass: false,\n  },\n  matrix: {\n    src: `_ = abs(mat2x2(1, 1, 1, 1));`,\n    pass: false,\n  },\n  atomic: {\n    src: ` _ = abs(a);`,\n    pass: false,\n  },\n  array: {\n    src: `var a: array<u32, 5>;\n          _ = abs(a);`,\n    pass: false,\n  },\n  array_runtime: {\n    src: `_ = abs(k.arry);`,\n    pass: false,\n  },\n  struct: {\n    src: `var a: A;\n          _ = abs(a);`,\n    pass: false,\n  },\n  enumerant: {\n    src: `_ = abs(read_write);`,\n    pass: false,\n  },\n  ptr: {\n    src: `var<function> a = 1u;\n          let p: ptr<function, u32> = &a;\n          _ = abs(p);`,\n    pass: false,\n  },\n  ptr_deref: {\n    src: `var<function> a = 1u;\n          let p: ptr<function, u32> = &a;\n          _ = abs(*p);`,\n    pass: true,\n  },\n  sampler: {\n    src: `_ = abs(s);`,\n    pass: false,\n  },\n  texture: {\n    src: `_ = abs(t);`,\n    pass: false,\n  },\n  no_params: {\n    src: `_ = abs();`,\n    pass: false,\n  },\n  too_many_params: {\n    src: `_ = abs(1, 2);`,\n    pass: false,\n  },\n  must_use: {\n    src: `abs(1);`,\n    pass: false,\n  },\n};\n\ng.test('parameters')\n  .desc(`Test that ${builtin} is validated correctly.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const src = kTests[t.params.test].src;\n    const code = `\nalias i32_alias = i32;\n\n@group(0) @binding(0) var s: sampler;\n@group(0) @binding(1) var t: texture_2d<f32>;\n\nvar<workgroup> a: atomic<u32>;\n\nstruct A {\n  i: u32,\n}\nstruct B {\n  arry: array<u32>,\n}\n@group(0) @binding(3) var<storage> k: B;\n\n\n@vertex\nfn main() -> @builtin(position) vec4<f32> {\n  ${src}\n  return vec4<f32>(.4, .2, .3, .1);\n}`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n"],"mappings":"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"}