{"version":3,"file":"asinh.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","kConcreteIntegerScalarsAndVectors","kConvertableToFloatScalarsAndVectors","scalarTypeOf","Type","isRepresentable","linearRange","linearRangeBigInt","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","rangeForType","stageSupportsType","unique","validateConstOrOverrideBuiltinEval","g","kValuesTypes","additionalRangeForType","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","expectedResult","Math","asinh","Number","value","kind","abstractFloat","create","kIntegerArgumentTypes","f32","kTests","valid","src","pass","alias","bool","i32","u32","vec_bool","vec_i32","vec_u32","matrix","atomic","array","array_runtime","struct","enumerant","ptr","ptr_deref","sampler","texture","no_params","too_many_params","must_use","code","expectCompileResult"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/asinh.spec.ts"],"sourcesContent":["const builtin = 'asinh';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  kConcreteIntegerScalarsAndVectors,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n  Type,\n} from '../../../../../util/conversion.js';\nimport { isRepresentable } from '../../../../../util/floating_point.js';\nimport { linearRange, linearRangeBigInt } from '../../../../../util/math.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  rangeForType,\n  stageSupportsType,\n  unique,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\nconst additionalRangeForType = rangeForType(\n  linearRange(-2000, 2000, 10),\n  linearRangeBigInt(-2000n, 2000n, 10)\n);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u =>\n        unique(fullRangeForType(kValuesTypes[u.type]), additionalRangeForType(kValuesTypes[u.type]))\n      )\n  )\n  .fn(t => {\n    const type = kValuesTypes[t.params.type];\n    const expectedResult = isRepresentable(\n      Math.asinh(Number(t.params.value)),\n      // AbstractInt is converted to AbstractFloat before calling into the builtin\n      scalarTypeOf(type).kind === 'abstract-int' ? Type.abstractFloat : scalarTypeOf(type)\n    );\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kIntegerArgumentTypes = objectsToRecord([Type.f32, ...kConcreteIntegerScalarsAndVectors]);\n\ng.test('integer_argument')\n  .desc(\n    `\nValidates that scalar and vector integer arguments are rejected by ${builtin}()\n`\n  )\n  .params(u => u.combine('type', keysOf(kIntegerArgumentTypes)))\n  .fn(t => {\n    const type = kIntegerArgumentTypes[t.params.type];\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      /* expectedResult */ type === Type.f32,\n      [type.create(1)],\n      'constant'\n    );\n  });\n\nconst kTests = {\n  valid: {\n    src: `_ = asinh(1);`,\n    pass: true,\n  },\n  alias: {\n    src: `_ = asinh(f32_alias(1));`,\n    pass: true,\n  },\n\n  bool: {\n    src: `_ = asinh(false);`,\n    pass: false,\n  },\n  i32: {\n    src: `_ = asinh(1i);`,\n    pass: false,\n  },\n  u32: {\n    src: `_ = asinh(1u);`,\n    pass: false,\n  },\n  vec_bool: {\n    src: `_ = asinh(vec2<bool>(false, true));`,\n    pass: false,\n  },\n  vec_i32: {\n    src: `_ = asinh(vec2<i32>(1, 1));`,\n    pass: false,\n  },\n  vec_u32: {\n    src: `_ = asinh(vec2<u32>(1, 1));`,\n    pass: false,\n  },\n  matrix: {\n    src: `_ = asinh(mat2x2(1, 1, 1, 1));`,\n    pass: false,\n  },\n  atomic: {\n    src: ` _ = asinh(a);`,\n    pass: false,\n  },\n  array: {\n    src: `var a: array<u32, 5>;\n          _ = asinh(a);`,\n    pass: false,\n  },\n  array_runtime: {\n    src: `_ = asinh(k.arry);`,\n    pass: false,\n  },\n  struct: {\n    src: `var a: A;\n          _ = asinh(a);`,\n    pass: false,\n  },\n  enumerant: {\n    src: `_ = asinh(read_write);`,\n    pass: false,\n  },\n  ptr: {\n    src: `var<function> a = 1f;\n          let p: ptr<function, f32> = &a;\n          _ = asinh(p);`,\n    pass: false,\n  },\n  ptr_deref: {\n    src: `var<function> a = 1f;\n          let p: ptr<function, f32> = &a;\n          _ = asinh(*p);`,\n    pass: true,\n  },\n  sampler: {\n    src: `_ = asinh(s);`,\n    pass: false,\n  },\n  texture: {\n    src: `_ = asinh(t);`,\n    pass: false,\n  },\n  no_params: {\n    src: `_ = asinh();`,\n    pass: false,\n  },\n  too_many_params: {\n    src: `_ = asinh(1, 2);`,\n    pass: false,\n  },\n\n  must_use: {\n    src: `asinh(1);`,\n    pass: false,\n  },\n};\n\ng.test('parameters')\n  .desc(`Test that ${builtin} is validated correctly.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const src = kTests[t.params.test].src;\n    const code = `\nalias f32_alias = f32;\n\n@group(0) @binding(0) var s: sampler;\n@group(0) @binding(1) var t: texture_2d<f32>;\n\nvar<workgroup> a: atomic<u32>;\n\nstruct A {\n  i: u32,\n}\nstruct B {\n  arry: array<u32>,\n}\n@group(0) @binding(3) var<storage> k: B;\n\n\n@vertex\nfn main() -> @builtin(position) vec4<f32> {\n  ${src}\n  return vec4<f32>(.4, .2, .3, .1);\n}`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n"],"mappings":"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"}