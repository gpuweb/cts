{"version":3,"file":"dot.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConvertableToFloatVectors","scalarTypeOf","ShaderValidationTest","ConstantOrOverrideValueChecker","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","scalarType","vCheck","abstractInt","a","BigInt","b","vecSize","width","ab","checkedResultBigInt","Number","checkedResult","allChecksPassed","create","kArgCases","good","bad_no_parens","bad_0args","bad_1arg","bad_3arg","bad_vec_size","bad_0bool","bad_0array","bad_0struct","bad_0int","bad_0uint","bad_0f32","bad_0f16","bad_0abstract","bad_1bool","bad_1array","bad_1struct","bad_1int","bad_1uint","bad_1f32","bad_1f16","bad_1abstract","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/dot.spec.ts"],"sourcesContent":["const builtin = 'dot';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport { Type, kConvertableToFloatVectors, scalarTypeOf } from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  ConstantOrOverrideValueChecker,\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValidArgumentTypes))\n      .filter(u => stageSupportsType(u.stage, kValidArgumentTypes[u.type]))\n      .beginSubcases()\n      .expand('a', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n      .expand('b', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n  )\n  .fn(t => {\n    const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n    const vCheck = new ConstantOrOverrideValueChecker(t, scalarType);\n\n    // Dot product equation: (a[0]*b[0]) + (a[1]*b[1]) + ... (a[N]*b[N])\n    // Should be invalid if the dot product calculations result in intermediate\n    // values that exceed the maximum representable float value for the given type.\n    if (scalarType === Type.abstractInt) {\n      // Need to handle the AbstractInt case separately becasue all values are\n      // treated as BigInt in that case.\n      const a = BigInt(t.params.a);\n      const b = BigInt(t.params.b);\n      const vecSize = BigInt(kValidArgumentTypes[t.params.type].width);\n      const ab = vCheck.checkedResultBigInt(a * b);\n      vCheck.checkedResultBigInt(ab * vecSize);\n    } else {\n      const a = Number(t.params.a);\n      const b = Number(t.params.b);\n      const vecSize = kValidArgumentTypes[t.params.type].width;\n      const ab = vCheck.checkedResult(a * b);\n      vCheck.checkedResult(ab * vecSize);\n    }\n\n    const type = kValidArgumentTypes[t.params.type];\n\n    // Validates dot(vecN(a), vecN(b));\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      vCheck.allChecksPassed(),\n      [type.create(t.params.a), type.create(t.params.b)],\n      t.params.stage\n    );\n  });\n\nconst kArgCases = {\n  good: '(vec3(0), vec3(1))',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(vec3(0))',\n  bad_3arg: '(vec3(0), vec3(1), vec3(2))',\n  // Mismatched vector size\n  bad_vec_size: '(vec2(0), vec3(1))',\n  // Bad value for arg 0\n  bad_0bool: '(false, vec3(1))',\n  bad_0array: '(array(1.1,2.2), vec3(1))',\n  bad_0struct: '(modf(2.2), vec3(1))',\n  bad_0int: '(0i, vec3(1))',\n  bad_0uint: '(0u, vec3(1))',\n  bad_0f32: '(0.0, vec3(1))',\n  bad_0f16: '(0.0h, vec3(1))',\n  bad_0abstract: '(0, vec3(1))',\n  // Bad value type for arg 1\n  bad_1bool: '(vec3(0), true)',\n  bad_1array: '(vec3(0), array(1.1,2.2))',\n  bad_1struct: '(vec3(0), modf(2.2))',\n  bad_1int: '(vec3(0), 0i)',\n  bad_1uint: '(vec3(0), 0u)',\n  bad_1f32: '(vec3(0), 0.0)',\n  bad_1f16: '(vec3(0), 0.0h)',\n  bad_1abstract: '(vec3(0), 0)',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}