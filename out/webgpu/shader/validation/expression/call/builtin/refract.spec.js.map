{"version":3,"file":"refract.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConvertableToFloatVectors","scalarTypeOf","quantizeToF16","quantizeToF32","isSubnormalNumberF16","isSubnormalNumberF32","ShaderValidationTest","ConstantOrOverrideValueChecker","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","quantizeFunctionForScalarType","type","f32","f16","v","isSubnormalFunctionForScalarType","test","desc","params","u","combine","filter","stage","beginSubcases","expand","fn","t","scalarType","vCheck","a","Number","b","c","b_dot_a","checkedResult","width","b_dot_a_2","one_minus_b_dot_a_2","c2","c2_one_minus_b_dot_a_2","k","quantizeFn","isSubnormalFn","skipIf","isNearZero","skip","ca","cbda","sqrt_k","Math","sqrt","cdba_sqrt_k","cdba_sqrt_k_b","allChecksPassed","create","kValidArgs","vec2f","vec3f","vec4f","kArgCases","bad_no_parens","bad_0args","bad_1arg","bad_2arg","bad_3arg","bad_vec2_vec3","bad_vec3_vec4","bad_vec4_vec2","bad_0bool","bad_0array","bad_0struct","bad_0int","bad_0uint","bad_0f32","bad_0f16","bad_0veci","bad_0vecu","bad_1bool","bad_1array","bad_1struct","bad_1int","bad_1uint","bad_1f32","bad_1f16","bad_1veci","bad_1vecu","bad_2bool","bad_2array","bad_2struct","bad_2int","bad_2uint","bad_2veci","bad_2vecu","bad_2vecf","bad_2vech","expectCompileResult","arg","returnType","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/refract.spec.ts"],"sourcesContent":["const builtin = 'refract';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConvertableToFloatVectors,\n  scalarTypeOf,\n  ScalarType,\n} from '../../../../../util/conversion.js';\nimport {\n  QuantizeFunc,\n  quantizeToF16,\n  quantizeToF32,\n  isSubnormalNumberF16,\n  isSubnormalNumberF32,\n} from '../../../../../util/math.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  ConstantOrOverrideValueChecker,\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatVectors);\n\nfunction quantizeFunctionForScalarType(type: ScalarType): QuantizeFunc<number> {\n  switch (type) {\n    case Type.f32:\n      return quantizeToF32;\n    case Type.f16:\n      return quantizeToF16;\n    default:\n      return (v: number) => v;\n  }\n}\n\nfunction isSubnormalFunctionForScalarType(type: ScalarType): (v: number) => boolean {\n  switch (type) {\n    case Type.f32:\n      return isSubnormalNumberF32;\n    case Type.f16:\n      return isSubnormalNumberF16;\n    default:\n      return (v: number) => false;\n  }\n}\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() only errors in cases\nwhere a the calculations result in a non-representable value for the given type.\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValidArgumentTypes))\n      .filter(u => stageSupportsType(u.stage, kValidArgumentTypes[u.type]))\n      .beginSubcases()\n      .expand('a', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n      .expand('b', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n      .expand('c', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n  )\n  .fn(t => {\n    const type = kValidArgumentTypes[t.params.type];\n    const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n    const vCheck = new ConstantOrOverrideValueChecker(t, scalarType);\n\n    // Refract equation:\n    //   let k = 1.0 - c * c * (1.0 - dot(b, a) * dot(b, a))\n    //   if (k < 0.0) { return vecN(0.0); }\n    //   return c * a - (c * dot(b, a) + sqrt(k)) * b\n    // Should be invalid if the calculations result in intermediate values that\n    // exceed the maximum representable float value for the given type.\n    const a = Number(t.params.a);\n    const b = Number(t.params.b);\n    const c = Number(t.params.c);\n\n    const b_dot_a = vCheck.checkedResult(b * a * type.width);\n    const b_dot_a_2 = vCheck.checkedResult(b_dot_a * b_dot_a);\n    const one_minus_b_dot_a_2 = vCheck.checkedResult(1.0 - b_dot_a_2);\n    const c2 = vCheck.checkedResult(c * c);\n    const c2_one_minus_b_dot_a_2 = vCheck.checkedResult(c2 * one_minus_b_dot_a_2);\n    const k = vCheck.checkedResult(1.0 - c2_one_minus_b_dot_a_2);\n\n    const quantizeFn = quantizeFunctionForScalarType(scalarType);\n    const isSubnormalFn = isSubnormalFunctionForScalarType(scalarType);\n    // We skip tests with values that would involve subnormal computations in\n    // order to avoid defining a specific behavior (flush to zero).\n    t.skipIf(\n      isSubnormalFn(quantizeFn(b_dot_a)) ||\n        isSubnormalFn(quantizeFn(b_dot_a_2)) ||\n        isSubnormalFn(quantizeFn(c2)) ||\n        isSubnormalFn(quantizeFn(k))\n    );\n\n    if (k >= 0) {\n      // If the k is near zero it may fail on some implementations which implement sqrt as\n      // 1/inversesqrt, so skip the test.\n      if (vCheck.isNearZero(k)) {\n        t.skip(`K value, ${k}, is at or near 0.`);\n      }\n\n      const ca = vCheck.checkedResult(c * a);\n      const cbda = vCheck.checkedResult(c * b_dot_a);\n      const sqrt_k = vCheck.checkedResult(Math.sqrt(k));\n      const cdba_sqrt_k = vCheck.checkedResult(cbda + sqrt_k);\n      const cdba_sqrt_k_b = vCheck.checkedResult(cdba_sqrt_k * b);\n      vCheck.checkedResult(ca - cdba_sqrt_k_b);\n    }\n\n    // Validates refract(vecN(a), vecN(b), c);\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      vCheck.allChecksPassed(),\n      [type.create(t.params.a), type.create(t.params.b), scalarType.create(t.params.c)],\n      t.params.stage\n    );\n  });\n\nconst kValidArgs = {\n  vec2f: '(vec2(0), vec2(1), 2.0)',\n  vec3f: '(vec3(0), vec3(1), 2.0)',\n  vec4f: '(vec4(0), vec4(1), 2.0)',\n};\n\nconst kArgCases = {\n  ...kValidArgs,\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(vec3(0))',\n  bad_2arg: '(vec3(0), vec3(1))',\n  bad_3arg: '(vec3(0), vec3(1), 2.0, vec3(3))',\n  // Mismatched vec sizes\n  bad_vec2_vec3: '(vec2(0), vec3(1), 2.0)',\n  bad_vec3_vec4: '(vec3(0), vec4(1), 2.0)',\n  bad_vec4_vec2: '(vec4(0), vec2(1), 2.0)',\n  // Bad value for arg 0\n  bad_0bool: '(false, vec3(1), 2.0)',\n  bad_0array: '(array(1.1,2.2), vec3(1), 2.0)',\n  bad_0struct: '(modf(2.2), vec3(1), 2.0)',\n  bad_0int: '(0i, vec3(1), 2.0)',\n  bad_0uint: '(0u, vec3(1), 2.0)',\n  bad_0f32: '(0.0, vec3(1), 2.0)',\n  bad_0f16: '(0.0h, vec3(1), 2.0)',\n  bad_0veci: '(vec3i(0), vec3(1), 2.0)',\n  bad_0vecu: '(vec3u(0), vec3(1), 2.0)',\n  // Bad value type for arg 1\n  bad_1bool: '(vec3(0), true, 2.0)',\n  bad_1array: '(vec3(0), array(1.1,2.2), 2.0)',\n  bad_1struct: '(vec3(0), modf(2.2), 2.0)',\n  bad_1int: '(vec3(0), 1i, 2.0)',\n  bad_1uint: '(vec3(0), 1u, 2.0)',\n  bad_1f32: '(vec3(0), 1.0, 2.0)',\n  bad_1f16: '(vec3(0), 1.0h, 2.0)',\n  bad_1veci: '(vec3(0), vec3i(1), 2.0)',\n  bad_1vecu: '(vec3(0), vec3u(1), 2.0)',\n  // Bad value type for arg 2\n  bad_2bool: '(vec3(0), vec3(1), true)',\n  bad_2array: '(vec3(0), vec3(1), array(1.1,2.2))',\n  bad_2struct: '(vec3(0), vec3(1), modf(2.2))',\n  bad_2int: '(vec3(0), vec3(1), 2i)',\n  bad_2uint: '(vec3(0), vec3(1), 2u)',\n  bad_2veci: '(vec3(0), vec3(1), vec3i(2))',\n  bad_2vecu: '(vec3(0), vec3(1), vec3u(2))',\n  bad_2vecf: '(vec3(0), vec3(1), vec3f(2))',\n  bad_2vech: '(vec3(0), vec3(1), vec3h(2))',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg in kValidArgs,\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('return')\n  .desc(`Test ${builtin} return value type`)\n  .params(u =>\n    u\n      .combine('arg', keysOf(kValidArgs))\n      .combine('returnType', [...keysOf(kValidArgs), 'vec3u', 'vec3i', 'u32', 'i32', 'f32', 'bool'])\n  )\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.returnType === t.params.arg,\n      `const c: ${t.params.returnType} = ${builtin}${kValidArgs[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('arg', keysOf(kValidArgs)).combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(\n      t.params.use,\n      `fn f() { ${use_it}${builtin}${kValidArgs[t.params.arg]}; }`\n    );\n  });\n"],"mappings":"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"}