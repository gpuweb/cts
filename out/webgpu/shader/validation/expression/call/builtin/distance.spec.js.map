{"version":3,"file":"distance.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","kConvertableToFloatScalarsAndVectors","scalarTypeOf","ShaderValidationTest","ConstantOrOverrideValueChecker","fullRangeForType","kConstantAndOverrideStages","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValidArgumentTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","scalarType","vCheck","a","Number","b","ab","checkedResult","width","ab2","sqrLen","isNearZero","skip","allChecksPassed","create","kArgCases","good","bad_no_parens","bad_0args","bad_1arg","bad_3arg","bad_0bool","bad_0array","bad_0struct","bad_0int","bad_0vec2i","bad_0vec3i","bad_0vec4i","bad_0uint","bad_0vec2u","bad_0vec3u","bad_0vec4u","bad_1bool","bad_1array","bad_1struct","bad_1int","bad_1vec2i","bad_1vec3i","bad_1vec4i","bad_1uint","bad_1vec2u","bad_1vec3u","bad_1vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/distance.spec.ts"],"sourcesContent":["const builtin = 'distance';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  ConstantOrOverrideValueChecker,\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValidArgumentTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() never errors\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValidArgumentTypes))\n      .filter(u => stageSupportsType(u.stage, kValidArgumentTypes[u.type]))\n      .beginSubcases()\n      .expand('a', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n      .expand('b', u => fullRangeForType(kValidArgumentTypes[u.type], 5))\n  )\n  .fn(t => {\n    const scalarType = scalarTypeOf(kValidArgumentTypes[t.params.type]);\n    const vCheck = new ConstantOrOverrideValueChecker(t, scalarType);\n\n    // Distance equation: length(a - b)\n    // Should be invalid if the calculations result in intermediate values that\n    // exceed the maximum representable float value for the given type.\n    const a = Number(t.params.a);\n    const b = Number(t.params.b);\n    const ab = vCheck.checkedResult(a - b);\n\n    // Only calculates the full length if the type is a vector. Otherwise abs(a-b) is used.\n    if (kValidArgumentTypes[t.params.type].width > 1) {\n      const ab2 = vCheck.checkedResult(ab * ab);\n      const sqrLen = vCheck.checkedResult(ab2 * kValidArgumentTypes[t.params.type].width);\n      // If the squared length is near zero it may fail on some implementations, so skip the test.\n      if (vCheck.isNearZero(sqrLen)) {\n        t.skip(`Squared length of ${sqrLen} is at or near 0.`);\n      }\n    }\n\n    const type = kValidArgumentTypes[t.params.type];\n\n    // Validates distance(vecN(a), vecN(b)) or distance(a, b);\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      vCheck.allChecksPassed(),\n      [type.create(t.params.a), type.create(t.params.b)],\n      t.params.stage\n    );\n  });\n\nconst kArgCases = {\n  good: '(vec3(0), vec3(1))',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_1arg: '(vec3(0))',\n  bad_3arg: '(vec3(0), vec3(1), vec3(2))',\n  // Bad value for arg 0\n  bad_0bool: '(false, vec3(1))',\n  bad_0array: '(array(1.1,2.2), vec3(1))',\n  bad_0struct: '(modf(2.2), vec3(1))',\n  bad_0int: '(0i, vec3(1))',\n  bad_0vec2i: '(vec2i(), vec3(1))',\n  bad_0vec3i: '(vec3i(), vec3(1))',\n  bad_0vec4i: '(vec4i(), vec3(1))',\n  bad_0uint: '(0u, vec3(1))',\n  bad_0vec2u: '(vec2u(), vec3(1))',\n  bad_0vec3u: '(vec3u(), vec3(1))',\n  bad_0vec4u: '(vec4u(), vec3(1))',\n  // Bad value type for arg 1\n  bad_1bool: '(vec3(0), true)',\n  bad_1array: '(vec3(0), array(1.1,2.2))',\n  bad_1struct: '(vec3(0), modf(2.2))',\n  bad_1int: '(vec3(0), 0i)',\n  bad_1vec2i: '(vec3(0), vec2i())',\n  bad_1vec3i: '(vec3(0), vec3i())',\n  bad_1vec4i: '(vec3(0), vec4i())',\n  bad_1uint: '(vec3(0), 0u)',\n  bad_1vec2u: '(vec3(0), vec2u())',\n  bad_1vec3u: '(vec3(0), vec3u())',\n  bad_1vec4u: '(vec3(0), vec4u())',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}