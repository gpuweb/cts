{"version":3,"file":"tan.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","Type","kConvertableToFloatScalarsAndVectors","scalarTypeOf","fpTraitsFor","ShaderValidationTest","fullRangeForType","kConstantAndOverrideStages","minusThreePiToThreePiRangeForType","stageSupportsType","unique","validateConstOrOverrideBuiltinEval","g","kValuesTypes","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","f16","skipIfDeviceDoesNotHaveFeature","fp","kind","abstractFloat","smallestPositive","constants","positive","min","v","quantize","Number","value","expectedResult","Math","abs","cos","create","kArgCases","good","bad_no_parens","bad_0args","bad_2arg","bad_0bool","bad_0array","bad_0struct","bad_0uint","bad_0int","bad_0vec2i","bad_0vec2u","bad_0vec3i","bad_0vec3u","bad_0vec4i","bad_0vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/tan.spec.ts"],"sourcesContent":["const builtin = 'tan';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport {\n  Type,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { fpTraitsFor } from '../../../../../util/floating_point.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  fullRangeForType,\n  kConstantAndOverrideStages,\n  minusThreePiToThreePiRangeForType,\n  stageSupportsType,\n  unique,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u =>\n        unique(\n          minusThreePiToThreePiRangeForType(kValuesTypes[u.type]),\n          fullRangeForType(kValuesTypes[u.type])\n        )\n      )\n  )\n  .fn(t => {\n    if (scalarTypeOf(kValuesTypes[t.params.type]) === Type.f16) {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const type = kValuesTypes[t.params.type];\n    const fp = fpTraitsFor(\n      // AbstractInt is converted to AbstractFloat before calling into the builtin\n      scalarTypeOf(type).kind === 'abstract-int' ? Type.abstractFloat : scalarTypeOf(type)\n    );\n    const smallestPositive = fp.constants().positive.min;\n    const v = fp.quantize(Number(t.params.value));\n    const expectedResult = Math.abs(Math.cos(v)) > smallestPositive;\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kArgCases = {\n  good: '(1.2)',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_2arg: '(1.2, 2.3)',\n  // Bad value for arg 0\n  bad_0bool: '(false)',\n  bad_0array: '(array(1.1,2.2))',\n  bad_0struct: '(modf(2.2))',\n  bad_0uint: '(1u)',\n  bad_0int: '(1i)',\n  bad_0vec2i: '(vec2i())',\n  bad_0vec2u: '(vec2u())',\n  bad_0vec3i: '(vec3i())',\n  bad_0vec3u: '(vec3u())',\n  bad_0vec4i: '(vec4i())',\n  bad_0vec4u: '(vec4u())',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}