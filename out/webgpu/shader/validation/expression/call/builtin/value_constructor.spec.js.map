{"version":3,"file":"value_constructor.spec.js","names":["description","makeTestGroup","keysOf","isAbstractType","isConvertible","isFloatType","MatrixType","ScalarType","scalarTypeOf","Type","VectorType","ShaderValidationTest","g","kScalarTypes","test","desc","params","u","combine","fn","t","type","skipIfDeviceDoesNotHaveFeature","enable","code","expectCompileResult","beforeAllSubcases","value_type","selectDeviceOrSkipTestCase","includes","beginSubcases","abstract","param","decl","size","comparison","i","ty","eleTy","ele_type","requiresF16","eleValue","create","wgsl","valueCall","expect","width","decl_type","declTy","valueTy","valueVecTy","value_size","decl_size","ctor","full_type","num_eles","v","call","cols","rows","c","r","t1","type1","t2","type2","m2","c2","r2","c1","r1","vecTy2","values","kArrayCases","i32","element","valid","f32","u32","valid_array","invalid_rta","invalid_override_array","valid_struct","invalid_struct","invalid_atomic","testcase","case","kStructCases","name","decls","f32x2","vec3u","runtime_array","atomic","struct","many_members","kConstructors","u32_0","i32_0","bool_0","f32_0","f16_0","vec2_0","vec3_0","vec4_0","mat2x2_0","mat2x3_0","mat2x4_0","mat3x2_0","mat3x3_0","mat3x4_0","mat4x2_0_f16","mat4x3_0_f16","mat4x4_0_f16","S_0","array_0","bool","f16","vec2f","vec3_f16","vec4","mat2x2","mat2x3","mat2x4","mat3x2_f16","mat3x3_f16","mat3x4_f16","mat4x2","mat4x3","mat4x4","S","array_abs","array","use","expandWithParams","cases","compTy","push","numEles","index","value","compParams","stage","shader_error"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/value_constructor.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for constructor built-in functions.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport {\n  isAbstractType,\n  isConvertible,\n  isFloatType,\n  MatrixType,\n  ScalarType,\n  scalarTypeOf,\n  Type,\n  VectorType,\n} from '../../../../../util/conversion.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kScalarTypes = ['bool', 'i32', 'u32', 'f32', 'f16'];\n\ng.test('scalar_zero_value')\n  .desc('Tests zero value scalar constructors')\n  .params(u => u.combine('type', kScalarTypes))\n  .fn(t => {\n    if (t.params.type === 'f16') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n    const code = `${enable}\n    const x : ${t.params.type} = ${t.params.type}();\n    const_assert x == ${t.params.type}(0);`;\n    t.expectCompileResult(true, code);\n  });\n\ng.test('scalar_value')\n  .desc('Tests scalar value constructors')\n  .params(u =>\n    u\n      .combine('type', kScalarTypes)\n      .combine('value_type', [...kScalarTypes, 'vec2u', 'S', 'array<u32, 2>'])\n  )\n  .beforeAllSubcases(t => {\n    if (t.params.type === 'f16' || t.params.value_type === 'f16') {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const enable = t.params.type === 'f16' || t.params.value_type === 'f16' ? 'enable f16;' : '';\n    const code = `${enable}\n    const x : ${t.params.type} = ${t.params.type}(${t.params.value_type}());`;\n    t.expectCompileResult(kScalarTypes.includes(t.params.value_type), code);\n  });\n\ng.test('vector_zero_value')\n  .desc('Tests zero value vector constructors')\n  .params(u =>\n    u\n      .combine('type', [...kScalarTypes, 'abstract-int', 'abstract-float'] as const)\n      .beginSubcases()\n      .combine('size', [2, 3, 4] as const)\n  )\n  .fn(t => {\n    if (t.params.type === 'f16') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n    const param = abstract ? '' : `<${t.params.type}>`;\n    const decl = `vec${t.params.size}${param}`;\n    const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n    const comparison = abstract ? '0' : `${t.params.type}(0)`;\n    let code = `${enable}\n    const x ${abstract ? '' : `: ${decl}`} = ${decl}();\\n`;\n    for (let i = 0; i < t.params.size; i++) {\n      code += `const_assert x[${i}] == ${comparison};\\n`;\n    }\n    t.expectCompileResult(true, code);\n  });\n\ng.test('vector_splat')\n  .desc('Test vector splat constructors')\n  .params(u =>\n    u\n      .combine('type', [\n        'bool',\n        'i32',\n        'u32',\n        'f32',\n        'f16',\n        'abstract-int',\n        'abstract-float',\n      ] as const)\n      .combine('ele_type', [\n        'bool',\n        'i32',\n        'u32',\n        'f32',\n        'f16',\n        'abstract-int',\n        'abstract-float',\n        'mat2x2f',\n        'mat3x3h',\n        'vec2i',\n        'vec3f',\n      ] as const)\n      .beginSubcases()\n      .combine('size', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    const ty = Type[t.params.type];\n    const eleTy = Type[t.params.ele_type];\n    if (ty.requiresF16() || eleTy.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const eleTy = Type[t.params.ele_type];\n    const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n    const param = abstract ? '' : `<${t.params.type}>`;\n    const decl = `vec${t.params.size}${param}`;\n    const enable = t.params.type === 'f16' || t.params.ele_type === 'f16' ? 'enable f16;' : '';\n    const eleValue = eleTy.create(1).wgsl();\n    const valueCall = decl;\n    const code = `${enable}\n    const x ${abstract ? '' : `: ${decl}`} = ${valueCall}(${eleValue});`;\n    const ty = Type[t.params.type];\n    const expect =\n      (eleTy instanceof ScalarType && (isConvertible(eleTy, ty) || isAbstractType(ty))) ||\n      (eleTy instanceof VectorType && eleTy.width === t.params.size);\n    t.expectCompileResult(expect, code);\n  });\n\ng.test('vector_copy')\n  .desc('Test vector copy constructors')\n  .params(u =>\n    u\n      .combine('decl_type', [\n        'bool',\n        'i32',\n        'u32',\n        'f32',\n        'f16',\n        'abstract-int',\n        'abstract-float',\n      ] as const)\n      .combine('value_type', [\n        'bool',\n        'i32',\n        'u32',\n        'f32',\n        'f16',\n        'abstract-int',\n        'abstract-float',\n      ] as const)\n      .beginSubcases()\n      .combine('decl_size', [2, 3, 4] as const)\n      .combine('value_size', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    const ty = Type[t.params.decl_type];\n    const eleTy = Type[t.params.value_type];\n    if (ty.requiresF16() || eleTy.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const declTy = Type[t.params.decl_type];\n    const valueTy = Type[t.params.value_type];\n    const valueVecTy = Type['vec'](t.params.value_size, valueTy);\n    const enable = declTy.requiresF16() || valueTy.requiresF16() ? 'enable f16;' : '';\n    const decl = `vec${t.params.decl_size}<${t.params.decl_type}>`;\n    const ctor = `vec${t.params.decl_size}${\n      isAbstractType(declTy) ? '' : `<${t.params.decl_type}>`\n    }`;\n    const code = `${enable}\n    const x ${isAbstractType(declTy) ? '' : `: ${decl}`} = ${ctor}(${valueVecTy\n      .create(1)\n      .wgsl()});`;\n\n    t.expectCompileResult(t.params.decl_size === t.params.value_size, code);\n  });\n\ng.test('vector_elementwise')\n  .desc('Test element-wise vector constructors')\n  .params(u =>\n    u\n      .combine('type', [\n        'bool',\n        'i32',\n        'u32',\n        'f32',\n        'f16',\n        'abstract-int',\n        'abstract-float',\n      ] as const)\n      .combine('ele_type', [\n        'bool',\n        'i32',\n        'u32',\n        'f32',\n        'f16',\n        'abstract-int',\n        'abstract-float',\n        'mat2x2f',\n        'mat3x3h',\n        'vec2i',\n        'vec3f',\n      ] as const)\n      .beginSubcases()\n      .combine('size', [2, 3, 4] as const)\n      .combine('num_eles', [2, 3, 4, 5] as const)\n      .combine('full_type', [true, false] as const)\n  )\n  .beforeAllSubcases(t => {\n    const ty = Type[t.params.type];\n    const eleTy = Type[t.params.ele_type];\n    if (ty.requiresF16() || eleTy.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const eleTy = Type[t.params.ele_type];\n    const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n    const param = abstract ? '' : `<${t.params.type}>`;\n    const decl = `vec${t.params.size}${param}`;\n    const enable = t.params.type === 'f16' || t.params.ele_type === 'f16' ? 'enable f16;' : '';\n    const eleValue = eleTy.create(1).wgsl();\n    const valueCall = t.params.full_type ? decl : `vec${t.params.size}`;\n    let code = `${enable}\n    const x ${abstract ? '' : `: ${decl}`} = ${valueCall}(`;\n    for (let i = 0; i < t.params.num_eles; i++) {\n      code += `${eleValue},`;\n    }\n    code += `);`;\n    const ty = Type[t.params.type];\n    // WGSL requires:\n    // * number of elements match\n    // * element types match (or auto convert, vector special case)\n    //   * abstract decl works because it is untyped and inferred as a different type\n    const num_eles =\n      eleTy instanceof VectorType ? t.params.num_eles * eleTy.width : t.params.num_eles;\n    const expect =\n      !(eleTy instanceof MatrixType) &&\n      t.params.size === num_eles &&\n      (isConvertible(scalarTypeOf(eleTy), ty) ||\n        t.params.type === 'abstract-int' ||\n        t.params.type === 'abstract-float');\n    t.expectCompileResult(expect, code);\n  });\n\ng.test('vector_mixed')\n  .desc('Test vector constructors with mixed elements and vectors')\n  .params(u =>\n    u\n      .combine('type', [\n        'bool',\n        'i32',\n        'u32',\n        'f32',\n        'f16',\n        'abstract-int',\n        'abstract-float',\n      ] as const)\n      .combine('ele_type', [\n        'bool',\n        'i32',\n        'u32',\n        'f32',\n        'f16',\n        'abstract-int',\n        'abstract-float',\n      ] as const)\n      .beginSubcases()\n      .combine('size', [3, 4] as const)\n      .combine('num_eles', [3, 4, 5] as const)\n      .combine('full_type', [true, false] as const)\n  )\n  .beforeAllSubcases(t => {\n    const ty = Type[t.params.type];\n    const eleTy = Type[t.params.ele_type];\n    if (ty.requiresF16() || eleTy.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const eleTy = Type[t.params.ele_type];\n    const abstract = t.params.type === 'abstract-int' || t.params.type === 'abstract-float';\n    const param = abstract ? '' : `<${t.params.type}>`;\n    const decl = `vec${t.params.size}${param}`;\n    const enable = t.params.type === 'f16' || t.params.ele_type === 'f16' ? 'enable f16;' : '';\n    const v = eleTy.create(1).wgsl();\n    const call = t.params.full_type ? decl : `vec${t.params.size}`;\n    let code = `${enable}\\n`;\n\n    switch (t.params.num_eles) {\n      case 3:\n        code += `const x1 ${abstract ? '' : `: ${decl}`} = ${call}(${v}, vec2(${v}, ${v}));\\n`;\n        code += `const x2 ${abstract ? '' : `: ${decl}`} = ${call}(vec2(${v}, ${v}), ${v});\\n`;\n        break;\n      case 4:\n        code += `const x1 ${\n          abstract ? '' : `: ${decl}`\n        } = ${call}(${v}, vec2(${v}, ${v}), ${v});\\n`;\n        code += `const x2 ${\n          abstract ? '' : `: ${decl}`\n        } = ${call}(${v}, ${v}, vec2(${v}, ${v}));\\n`;\n        code += `const x3 ${\n          abstract ? '' : `: ${decl}`\n        } = ${call}(vec2(${v}, ${v}), ${v}, ${v});\\n`;\n        code += `const x4 ${\n          abstract ? '' : `: ${decl}`\n        } = ${call}(vec3(${v}, ${v}, ${v}), ${v});\\n`;\n        code += `const x5 ${\n          abstract ? '' : `: ${decl}`\n        } = ${call}(${v}, vec3(${v}, ${v}, ${v}));\\n`;\n        break;\n      case 5:\n        // This case is always invalid so try a few only.\n        code += `const x1 ${\n          abstract ? '' : `: ${decl}`\n        } = ${call}(${v}, vec3(${v}, ${v}), ${v});\\n`;\n        code += `const x1 ${abstract ? '' : `: ${decl}`} = ${call}(${v}, vec4(${v}}), ${v});\\n`;\n        break;\n    }\n    const ty = Type[t.params.type];\n    // WGSL requires:\n    // * number of elements match (in total, not parameters)\n    // * element types match (or auto convert)\n    //   * abstract decl works because it is untyped and inferred as a different type\n    const expect =\n      t.params.size === t.params.num_eles &&\n      (isConvertible(eleTy, ty) ||\n        t.params.type === 'abstract-int' ||\n        t.params.type === 'abstract-float');\n    t.expectCompileResult(expect, code);\n  });\n\ng.test('matrix_zero_value')\n  .desc('Tests zero value matrix constructors')\n  .params(u =>\n    u\n      .combine('type', ['f32', 'f16'] as const)\n      .beginSubcases()\n      .combine('rows', [2, 3, 4] as const)\n      .combine('cols', [2, 3, 4] as const)\n  )\n  .fn(t => {\n    if (t.params.type === 'f16') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const decl = `mat${t.params.cols}x${t.params.rows}<${t.params.type}>`;\n    const enable = t.params.type === 'f16' ? 'enable f16;' : '';\n    let code = `${enable}\n    const x : ${decl} = ${decl}();\\n`;\n    for (let c = 0; c < t.params.cols; c++) {\n      for (let r = 0; r < t.params.rows; r++) {\n        code += `const_assert x[${c}][${r}] == ${t.params.type}(0);\\n`;\n      }\n    }\n    t.expectCompileResult(true, code);\n  });\n\ng.test('matrix_copy')\n  .desc('Test matrix copy constructors')\n  .params(u =>\n    u\n      .combine('type1', ['f16', 'f32', 'abstract-float'] as const)\n      .combine('type2', ['f16', 'f32', 'abstract-float'] as const)\n      .beginSubcases()\n      .combine('c1', [2, 3, 4] as const)\n      .combine('r1', [2, 3, 4] as const)\n      .combine('c2', [2, 3, 4] as const)\n      .combine('r2', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    const t1 = Type[t.params.type1];\n    const t2 = Type[t.params.type2];\n    if (t1.requiresF16() || t2.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const t1 = Type[t.params.type1];\n    const t2 = Type[t.params.type2];\n    const m2 = Type['mat'](t.params.c2, t.params.r2, t2);\n    const enable = t1.requiresF16() || t2.requiresF16() ? 'enable f16;' : '';\n    const decl = `mat${t.params.c1}x${t.params.r1}<${t.params.type1}>`;\n    const call = `mat${t.params.c1}x${t.params.r1}${\n      isAbstractType(t1) ? '' : `<${t.params.type1}>`\n    }`;\n    const code = `${enable}\n    const m ${isAbstractType(t1) ? '' : `: ${decl}`} = ${call}(${m2.create(0).wgsl()});`;\n    t.expectCompileResult(t.params.c1 === t.params.c2 && t.params.r1 === t.params.r2, code);\n  });\n\ng.test('matrix_column')\n  .desc('Test matrix column constructors')\n  .params(u =>\n    u\n      .combine('type1', ['f16', 'f32', 'abstract-float'] as const)\n      .combine('type2', ['f16', 'f32', 'abstract-float', 'i32', 'u32', 'bool'] as const)\n      .beginSubcases()\n      .combine('c1', [2, 3, 4] as const)\n      .combine('r1', [2, 3, 4] as const)\n      .combine('c2', [2, 3, 4] as const)\n      .combine('r2', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    const t1 = Type[t.params.type1];\n    const t2 = Type[t.params.type2];\n    if (t1.requiresF16() || t2.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const t1 = Type[t.params.type1];\n    const t2 = Type[t.params.type2];\n    const enable = t1.requiresF16() || t2.requiresF16() ? 'enable f16;' : '';\n    const vecTy2 = Type['vec'](t.params.r2, t2);\n    let values = ``;\n    for (let i = 0; i < t.params.c2; i++) {\n      values += `${vecTy2.create(1).wgsl()},`;\n    }\n    const decl = `mat${t.params.c1}x${t.params.r1}<${t.params.type1}>`;\n    const call = `mat${t.params.c1}x${t.params.r1}${\n      isAbstractType(t1) ? '' : `<${t.params.type1}>`\n    }`;\n    const code = `${enable}\n    const m ${isAbstractType(t1) ? '' : `: ${decl}`} = ${call}(${values});`;\n    const expect =\n      isFloatType(t2) &&\n      t.params.c1 === t.params.c2 &&\n      t.params.r1 === t.params.r2 &&\n      (t1 === t2 || isAbstractType(t1) || isAbstractType(t2));\n    t.expectCompileResult(expect, code);\n  });\n\ng.test('matrix_elementwise')\n  .desc('Test matrix element-wise constructors')\n  .params(u =>\n    u\n      .combine('type1', ['f16', 'f32', 'abstract-float'] as const)\n      .combine('type2', ['f16', 'f32', 'abstract-float', 'i32', 'u32', 'bool'] as const)\n      .beginSubcases()\n      .combine('c1', [2, 3, 4] as const)\n      .combine('r1', [2, 3, 4] as const)\n      .combine('c2', [2, 3, 4] as const)\n      .combine('r2', [2, 3, 4] as const)\n  )\n  .beforeAllSubcases(t => {\n    const t1 = Type[t.params.type1];\n    const t2 = Type[t.params.type2];\n    if (t1.requiresF16() || t2.requiresF16()) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const t1 = Type[t.params.type1];\n    const t2 = Type[t.params.type2];\n    const enable = t1.requiresF16() || t2.requiresF16() ? 'enable f16;' : '';\n    let values = ``;\n    for (let i = 0; i < t.params.c2 * t.params.r2; i++) {\n      values += `${t2.create(1).wgsl()},`;\n    }\n    const decl = `mat${t.params.c1}x${t.params.r1}<${t.params.type1}>`;\n    const call = `mat${t.params.c1}x${t.params.r1}${\n      isAbstractType(t1) ? '' : `<${t.params.type1}>`\n    }`;\n    const code = `${enable}\n    const m ${isAbstractType(t1) ? '' : `: ${decl}`} = ${call}(${values});`;\n    const expect =\n      isFloatType(t2) &&\n      t.params.c1 * t.params.r1 === t.params.c2 * t.params.r2 &&\n      (t1 === t2 || isAbstractType(t1) || isAbstractType(t2));\n    t.expectCompileResult(expect, code);\n  });\n\ninterface ArrayCase {\n  element: string;\n  size: number | string;\n  valid: boolean;\n  values: string;\n}\n\nconst kArrayCases: Record<string, ArrayCase> = {\n  i32: {\n    element: 'i32',\n    size: 4,\n    valid: true,\n    values: '1,2,3,4',\n  },\n  f32: {\n    element: 'f32',\n    size: 1,\n    valid: true,\n    values: '0',\n  },\n  u32: {\n    element: 'u32',\n    size: 2,\n    valid: true,\n    values: '2,4',\n  },\n  valid_array: {\n    element: 'array<u32, 2>',\n    size: 2,\n    valid: true,\n    values: 'array(0,1), array(2,3)',\n  },\n  invalid_rta: {\n    element: 'u32',\n    size: '',\n    valid: false,\n    values: '0',\n  },\n  invalid_override_array: {\n    element: 'u32',\n    size: 'o',\n    valid: false,\n    values: '1',\n  },\n  valid_struct: {\n    element: 'valid_S',\n    size: 1,\n    valid: true,\n    values: 'valid_S(0)',\n  },\n  invalid_struct: {\n    element: 'invalid_S',\n    size: 1,\n    valid: false,\n    values: 'array(0)',\n  },\n  invalid_atomic: {\n    element: 'atomic<u32>',\n    size: 1,\n    valid: false,\n    values: '0',\n  },\n};\n\ng.test('array_zero_value')\n  .desc('Tests zero value array constructors')\n  .params(u => u.combine('case', keysOf(kArrayCases)))\n  .fn(t => {\n    const testcase = kArrayCases[t.params.case];\n    const decl = `array<${testcase.element}, ${testcase.size}>`;\n    const code = `override o : i32 = 1;\n    struct valid_S {\n      x : u32\n    }\n    struct invalid_S {\n      x : array<u32>\n    }\n    const x : ${decl} = ${decl}();`;\n    t.expectCompileResult(testcase.valid, code);\n  });\n\ng.test('array_value')\n  .desc('Tests array value constructor')\n  .params(u => u.combine('case', keysOf(kArrayCases)))\n  .fn(t => {\n    const testcase = kArrayCases[t.params.case];\n    const decl = `array<${testcase.element}, ${testcase.size}>`;\n    const code = `override o : i32 = 1;\n    struct valid_S {\n      x : u32\n    }\n    struct invalid_S {\n      x : array<u32>\n    }\n    const x : ${decl} = ${decl}(${testcase.values});`;\n    t.expectCompileResult(testcase.valid, code);\n  });\n\nconst kStructCases = {\n  i32: {\n    name: 'S',\n    decls: `struct S { x : u32 }`,\n    valid: true,\n    values: '0',\n  },\n  f32x2: {\n    name: 'S',\n    decls: `struct S { x : f32, y : f32 }`,\n    valid: true,\n    values: '0,1',\n  },\n  vec3u: {\n    name: 'S',\n    decls: `struct S { x : vec3u }`,\n    valid: true,\n    values: 'vec3()',\n  },\n  valid_array: {\n    name: 'S',\n    decls: `struct S { x : array<u32, 2> }`,\n    valid: true,\n    values: 'array(1,2)',\n  },\n  runtime_array: {\n    name: 'S',\n    decls: `struct S { x : array<u32> }`,\n    valid: false,\n    values: 'array(0)',\n  },\n  atomic: {\n    name: 'S',\n    decls: `struct S { x : atomic<u32> }`,\n    valid: false,\n    values: '0',\n  },\n  struct: {\n    name: 'S',\n    decls: `struct S {\n      x : T\n    }\n    struct T {\n      x : u32\n    }`,\n    valid: true,\n    values: 'T(0)',\n  },\n  many_members: {\n    name: 'S',\n    decls: `struct S {\n      a : bool,\n      b : u32,\n      c : i32,\n      d : vec4f,\n    }`,\n    valid: true,\n    values: 'false, 1u, 32i, vec4f(1.0f)',\n  },\n};\n\ng.test('struct_zero_value')\n  .desc('Tests zero value struct constructors')\n  .params(u => u.combine('case', keysOf(kStructCases)))\n  .fn(t => {\n    const testcase = kStructCases[t.params.case];\n    const code = `\n    ${testcase.decls}\n    const x : ${testcase.name} = ${testcase.name}();`;\n    t.expectCompileResult(testcase.valid, code);\n  });\n\ng.test('struct_value')\n  .desc('Tests struct value constructors')\n  .params(u => u.combine('case', keysOf(kStructCases)))\n  .fn(t => {\n    const testcase = kStructCases[t.params.case];\n    const code = `\n    ${testcase.decls}\n    const x : ${testcase.name} = ${testcase.name}(${testcase.values});`;\n    t.expectCompileResult(testcase.valid, code);\n  });\n\nconst kConstructors = {\n  u32_0: 'u32()',\n  i32_0: 'i32()',\n  bool_0: 'bool()',\n  f32_0: 'f32()',\n  f16_0: 'f16()',\n  vec2_0: 'vec2()',\n  vec3_0: 'vec3()',\n  vec4_0: 'vec4()',\n  mat2x2_0: 'mat2x2f()',\n  mat2x3_0: 'mat2x3f()',\n  mat2x4_0: 'mat2x4f()',\n  mat3x2_0: 'mat3x2f()',\n  mat3x3_0: 'mat3x3f()',\n  mat3x4_0: 'mat3x4f()',\n  mat4x2_0_f16: 'mat4x2h()',\n  mat4x3_0_f16: 'mat4x3h()',\n  mat4x4_0_f16: 'mat4x4h()',\n  S_0: 'S()',\n  array_0: 'array<u32, 4>()',\n  u32: 'u32(1)',\n  i32: 'i32(1)',\n  bool: 'bool(true)',\n  f32: 'f32(1)',\n  f16: 'f16(1)',\n  vec2f: 'vec2<f32>(1)',\n  vec3_f16: 'vec3<f16>(1)',\n  vec4: 'vec4(1)',\n  mat2x2: 'mat2x2f(1,1,1,1)',\n  mat2x3: 'mat2x3f(1,1,1,1,1,1)',\n  mat2x4: 'mat2x4f(1,1,1,1,1,1,1,1)',\n  mat3x2_f16: 'mat3x2<f16>(vec2h(),vec2h(),vec2h())',\n  mat3x3_f16: 'mat3x3<f16>(vec3h(),vec3h(),vec3h())',\n  mat3x4_f16: 'mat3x4<f16>(vec4h(),vec4h(),vec4h())',\n  mat4x2: 'mat4x2(vec2(),vec2(),vec2(),vec2())',\n  mat4x3: 'mat4x3(vec3(),vec3(),vec3(),vec3())',\n  mat4x4: 'mat4x4(vec4(),vec4(),vec4(),vec4())',\n  S: 'S(1,1)',\n  array_abs: 'array(1,2,3)',\n  array: 'array<u32, 4>(1,2,3,4)',\n};\n\ng.test('must_use')\n  .desc('Tests that value constructors must be used')\n  .params(u => u.combine('ctor', keysOf(kConstructors)).combine('use', [true, false] as const))\n  .beforeAllSubcases(t => {\n    if (t.params.ctor.includes('f16')) {\n      t.selectDeviceOrSkipTestCase('shader-f16');\n    }\n  })\n  .fn(t => {\n    const code = `\n    ${t.params.ctor.includes('f16') ? 'enable f16;' : ''}\n    struct S {\n      x : u32,\n      y : f32,\n    }\n    fn foo() {\n      ${t.params.use ? '_ =' : ''} ${kConstructors[t.params.ctor]};\n    }`;\n    t.expectCompileResult(t.params.use, code);\n  });\n\ng.test('partial_eval')\n  .desc('Tests that mixed runtime and early eval expressions catch errors')\n  .params(u =>\n    u\n      .combine('eleTy', ['i32', 'u32'] as const)\n      .combine('compTy', ['array', 'vec2', 'vec3', 'vec4', 'S'] as const)\n      .combine('stage', ['constant', 'runtime'] as const)\n      .beginSubcases()\n      .expandWithParams(t => {\n        const cases = [];\n        switch (t.compTy) {\n          case 'array':\n            cases.push({ numEles: 2, index: 0 });\n            cases.push({ numEles: 2, index: 1 });\n            cases.push({ numEles: 3, index: 0 });\n            cases.push({ numEles: 3, index: 1 });\n            cases.push({ numEles: 3, index: 2 });\n            break;\n          case 'vec2':\n            cases.push({ numEles: 2, index: 0 });\n            cases.push({ numEles: 2, index: 1 });\n            break;\n          case 'vec3':\n            cases.push({ numEles: 3, index: 0 });\n            cases.push({ numEles: 3, index: 1 });\n            cases.push({ numEles: 3, index: 2 });\n            break;\n          case 'vec4':\n            cases.push({ numEles: 4, index: 0 });\n            cases.push({ numEles: 4, index: 1 });\n            cases.push({ numEles: 4, index: 2 });\n            cases.push({ numEles: 4, index: 3 });\n            break;\n          case 'S':\n            cases.push({ numEles: 2, index: 0 });\n            cases.push({ numEles: 2, index: 1 });\n            break;\n        }\n        return cases;\n      })\n  )\n  .fn(t => {\n    const eleTy = Type['abstract-int'];\n    const value = t.params.eleTy === 'i32' ? 0xfffffffff : -1;\n    let compParams = '';\n    for (let i = 0; i < t.params.numEles; i++) {\n      if (t.params.index === i) {\n        switch (t.params.stage) {\n          case 'constant':\n            compParams += `${eleTy.create(value).wgsl()}, `;\n            break;\n          case 'runtime':\n            compParams += `v, `;\n            break;\n        }\n      } else {\n        compParams += `v, `;\n      }\n    }\n    const wgsl = `\nstruct S {\n  x : ${t.params.eleTy},\n  y : ${t.params.eleTy},\n}\n\nfn foo() {\n  var v : ${t.params.eleTy};\n  let tmp = ${t.params.compTy}(${compParams});\n}`;\n\n    const shader_error = t.params.stage === 'constant';\n    t.expectCompileResult(!shader_error, wgsl);\n  });\n"],"mappings":"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"}