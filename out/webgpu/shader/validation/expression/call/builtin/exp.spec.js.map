{"version":3,"file":"exp.spec.js","names":["builtin","description","makeTestGroup","keysOf","objectsToRecord","kValue","Type","kConvertableToFloatScalarsAndVectors","scalarTypeOf","isRepresentable","ShaderValidationTest","kConstantAndOverrideStages","rangeForType","stageSupportsType","validateConstOrOverrideBuiltinEval","g","kValuesTypes","valueForType","Math","log2","f16","positive","max","f32","test","desc","params","u","combine","filter","stage","type","beginSubcases","expand","fn","t","expectedResult","exp","Number","value","kind","abstractFloat","create","kArgCases","good","bad_no_parens","bad_0args","bad_2arg","bad_0bool","bad_0array","bad_0struct","bad_0uint","bad_0int","bad_0vec2i","bad_0vec2u","bad_0vec3i","bad_0vec3u","bad_0vec4i","bad_0vec4u","expectCompileResult","arg","use_it","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/exp.spec.ts"],"sourcesContent":["const builtin = 'exp';\nexport const description = `\nValidation tests for the ${builtin}() builtin.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf, objectsToRecord } from '../../../../../../common/util/data_tables.js';\nimport { kValue } from '../../../../../util/constants.js';\nimport {\n  Type,\n  kConvertableToFloatScalarsAndVectors,\n  scalarTypeOf,\n} from '../../../../../util/conversion.js';\nimport { isRepresentable } from '../../../../../util/floating_point.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nimport {\n  kConstantAndOverrideStages,\n  rangeForType,\n  stageSupportsType,\n  validateConstOrOverrideBuiltinEval,\n} from './const_override_validation.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kValuesTypes = objectsToRecord(kConvertableToFloatScalarsAndVectors);\n\nconst valueForType = rangeForType(\n  [\n    -1e2,\n    -1e3,\n    -4,\n    -3,\n    -2,\n    -1,\n    -1e-1,\n    -1e-2,\n    -1e-3,\n    0,\n    1e-3,\n    1e-2,\n    1e-1,\n    1,\n    2,\n    3,\n    4,\n    1e2,\n    1e3,\n    Math.log2(kValue.f16.positive.max) - 0.1,\n    Math.log2(kValue.f16.positive.max) + 0.1,\n    Math.log2(kValue.f32.positive.max) - 0.1,\n    Math.log2(kValue.f32.positive.max) + 0.1,\n  ],\n  [-100n, -1000n, -4n, -3n, -2n, -1n, 0n, 1n, 2n, 3n, 4n, 100n, 1000n]\n);\n\ng.test('values')\n  .desc(\n    `\nValidates that constant evaluation and override evaluation of ${builtin}() rejects invalid values\n`\n  )\n  .params(u =>\n    u\n      .combine('stage', kConstantAndOverrideStages)\n      .combine('type', keysOf(kValuesTypes))\n      .filter(u => stageSupportsType(u.stage, kValuesTypes[u.type]))\n      .beginSubcases()\n      .expand('value', u => valueForType(kValuesTypes[u.type]))\n  )\n  .fn(t => {\n    const type = kValuesTypes[t.params.type];\n    const expectedResult = isRepresentable(\n      Math.exp(Number(t.params.value)),\n      // AbstractInt is converted to AbstractFloat before calling into the builtin\n      scalarTypeOf(type).kind === 'abstract-int' ? Type.abstractFloat : scalarTypeOf(type)\n    );\n    validateConstOrOverrideBuiltinEval(\n      t,\n      builtin,\n      expectedResult,\n      [type.create(t.params.value)],\n      t.params.stage\n    );\n  });\n\nconst kArgCases = {\n  good: '(1.2)',\n  bad_no_parens: '',\n  // Bad number of args\n  bad_0args: '()',\n  bad_2arg: '(1.2, 2.3)',\n  // Bad value for arg 0\n  bad_0bool: '(false)',\n  bad_0array: '(array(1.1,2.2))',\n  bad_0struct: '(modf(2.2))',\n  bad_0uint: '(1u)',\n  bad_0int: '(1i)',\n  bad_0vec2i: '(vec2i())',\n  bad_0vec2u: '(vec2u())',\n  bad_0vec3i: '(vec3i())',\n  bad_0vec3u: '(vec3u())',\n  bad_0vec4i: '(vec4i())',\n  bad_0vec4u: '(vec4u())',\n};\n\ng.test('args')\n  .desc(`Test compilation failure of ${builtin} with variously shaped and typed arguments`)\n  .params(u => u.combine('arg', keysOf(kArgCases)))\n  .fn(t => {\n    t.expectCompileResult(\n      t.params.arg === 'good',\n      `const c = ${builtin}${kArgCases[t.params.arg]};`\n    );\n  });\n\ng.test('must_use')\n  .desc(`Result of ${builtin} must be used`)\n  .params(u => u.combine('use', [true, false]))\n  .fn(t => {\n    const use_it = t.params.use ? '_ = ' : '';\n    t.expectCompileResult(t.params.use, `fn f() { ${use_it}${builtin}${kArgCases['good']}; }`);\n  });\n"],"mappings":"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"}