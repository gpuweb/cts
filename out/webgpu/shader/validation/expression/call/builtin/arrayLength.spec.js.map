{"version":3,"file":"arrayLength.spec.js","names":["description","makeTestGroup","ShaderValidationTest","g","test","specURL","desc","fn","t","code","expectCompileResult","atomic_types","map","j","vec_types","i","reduce","a","c","concat","f32_matrix_types","f16_matrix_types","params","u","combine","type","mode","use"],"sources":["../../../../../../../src/webgpu/shader/validation/expression/call/builtin/arrayLength.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for arrayLength builtins.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { ShaderValidationTest } from '../../../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('bool_type')\n  .specURL('https://www.w3.org/TR/WGSL/#arrayLength-builtin')\n  .desc(\n    `\narrayLength accepts only runtime-sized arrays\n`\n  )\n  .fn(t => {\n    const code = `\n@compute @workgroup_size(1)\nfn main() {\n  var b = true;\n  _ = arrayLength(&b);\n}`;\n\n    t.expectCompileResult(false, code);\n  });\n\nconst atomic_types = ['u32', 'i32'].map(j => `atomic<${j}>`);\nconst vec_types = [2, 3, 4]\n  .map(i => ['i32', 'u32', 'f32', 'f16'].map(j => `vec${i}<${j}>`))\n  .reduce((a, c) => a.concat(c), []);\nconst f32_matrix_types = [2, 3, 4]\n  .map(i => [2, 3, 4].map(j => `mat${i}x${j}f`))\n  .reduce((a, c) => a.concat(c), []);\nconst f16_matrix_types = [2, 3, 4]\n  .map(i => [2, 3, 4].map(j => `mat${i}x${j}<f16>`))\n  .reduce((a, c) => a.concat(c), []);\n\ng.test('type')\n  .specURL('https://www.w3.org/TR/WGSL/#arrayLength-builtin')\n  .desc(\n    `\narrayLength accepts only runtime-sized arrays\n`\n  )\n  .params(u =>\n    u.combine('type', [\n      'i32',\n      'u32',\n      'f32',\n      'f16',\n      ...f32_matrix_types,\n      ...f16_matrix_types,\n      ...vec_types,\n      ...atomic_types,\n      'T',\n      'array<i32, 2>',\n      'array<i32>',\n    ])\n  )\n  .fn(t => {\n    const code = `\nstruct T {\n  b: i32,\n}\nstruct S {\n  ary: ${t.params.type}\n}\n\n@group(0) @binding(0) var<storage, read_write> items: S;\n\n@compute @workgroup_size(1)\nfn main() {\n  _ = arrayLength(&items.ary);\n}`;\n\n    t.expectCompileResult(t.params.type === 'array<i32>', code);\n  });\n\n// Note, the `write` case actually fails because you can't declare a storage buffer of\n// access_mode `write`.\ng.test('access_mode')\n  .specURL('https://www.w3.org/TR/WGSL/#arrayLength-builtin')\n  .desc(\n    `\narrayLength runtime-sized array must have an access_mode of read or read_write\n`\n  )\n  .params(u => u.combine('mode', ['read', 'read_write', 'write']))\n  .fn(t => {\n    const code = `\nstruct S {\n  ary: array<i32>,\n}\n\n@group(0) @binding(0) var<storage, ${t.params.mode}> items: S;\n\n@compute @workgroup_size(1)\nfn main() {\n  _ = arrayLength(&items.ary);\n}`;\n\n    t.expectCompileResult(t.params.mode !== 'write', code);\n  });\n\ng.test('must_use')\n  .desc('Test that the result must be used')\n  .params(u => u.combine('use', [true, false] as const))\n  .fn(t => {\n    const code = `\n    @group(0) @binding(0) var<storage> v : array<u32>;\n    fn foo() {\n      ${t.params.use ? '_ =' : ''} arrayLength(&v);\n    }`;\n    t.expectCompileResult(t.params.use, code);\n  });\n"],"mappings":"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"}