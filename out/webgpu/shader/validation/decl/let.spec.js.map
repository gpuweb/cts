{"version":3,"file":"let.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kTypeCases","bool","code","valid","i32","u32","f32","f16","vec2i","vec3u","vec4f","mat2x2","mat4x3f","array_sized","array_runtime","struct","decls","atomic","ptr_function","ptr_storage","load_rule","test","desc","params","u","combine","fn","t","case","skipIfDeviceDoesNotHaveFeature","testcase","expect","expectCompileResult","kInitCases","no_init","no_type","init_matching_type","init_mismatch_type","ptr_type_mismatch","ptr_access_mismatch","ptr_addrspace_mismatch","init_const_expr","init_override_expr","init_runtime_expr","kTestTypes","beginSubcases","lhsType","rhsType","expectation"],"sources":["../../../../../src/webgpu/shader/validation/decl/let.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for let declarations\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ninterface Case {\n  code: string;\n  valid: boolean;\n  decls?: string;\n}\n\nconst kTypeCases: Record<string, Case> = {\n  bool: {\n    code: `let x : bool = true;`,\n    valid: true,\n  },\n  i32: {\n    code: `let x : i32 = 1i;`,\n    valid: true,\n  },\n  u32: {\n    code: `let x : u32 = 1u;`,\n    valid: true,\n  },\n  f32: {\n    code: `let x : f32 = 1f;`,\n    valid: true,\n  },\n  f16: {\n    code: `let x : f16 = 1h;`,\n    valid: true,\n  },\n  vec2i: {\n    code: `let x : vec2i = vec2i();`,\n    valid: true,\n  },\n  vec3u: {\n    code: `let x : vec3u = vec3u();`,\n    valid: true,\n  },\n  vec4f: {\n    code: `let x : vec4f = vec4f();`,\n    valid: true,\n  },\n  mat2x2: {\n    code: `let x : mat2x2f = mat2x2f();`,\n    valid: true,\n  },\n  mat4x3f: {\n    code: `let x : mat4x3<f32> = mat4x3<f32>();`,\n    valid: true,\n  },\n  array_sized: {\n    code: `let x : array<u32, 4> = array(1,2,3,4);`,\n    valid: true,\n  },\n  array_runtime: {\n    code: `let x : array<u32> = array(1,2,3);`,\n    valid: false,\n  },\n  struct: {\n    code: `let x : S = S(0);`,\n    valid: true,\n    decls: `struct S { x : u32 }`,\n  },\n  atomic: {\n    code: `let x : atomic<u32> = 0;`,\n    valid: false,\n  },\n  ptr_function: {\n    code: `\n      var x : i32;\n      let y : ptr<function, i32> = &x;`,\n    valid: true,\n  },\n  ptr_storage: {\n    code: `let y : ptr<storage, i32> = &x[0];`,\n    valid: true,\n    decls: `@group(0) @binding(0) var<storage> x : array<i32, 4>;`,\n  },\n  load_rule: {\n    code: `\n      var x : i32 = 1;\n      let y : i32 = x;`,\n    valid: true,\n  },\n};\n\ng.test('type')\n  .desc('Test let types')\n  .params(u => u.combine('case', keysOf(kTypeCases)))\n  .fn(t => {\n    if (t.params.case === 'f16') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const testcase = kTypeCases[t.params.case];\n\n    const code = `\n${t.params.case === 'f16' ? 'enable f16;' : ''}\n${testcase.decls ?? ''}\nfn foo() {\n  ${testcase.code}\n}`;\n    const expect = testcase.valid;\n    t.expectCompileResult(expect, code);\n  });\n\nconst kInitCases: Record<string, Case> = {\n  no_init: {\n    code: `let x : u32;`,\n    valid: false,\n  },\n  no_type: {\n    code: `let x = 1;`,\n    valid: true,\n  },\n  init_matching_type: {\n    code: `let x : u32 = 1u;`,\n    valid: true,\n  },\n  init_mismatch_type: {\n    code: `let x : u32 = 1i;`,\n    valid: false,\n  },\n  ptr_type_mismatch: {\n    code: `var x : i32;\\nlet y : ptr<function, u32> = &x;`,\n    valid: false,\n  },\n  ptr_access_mismatch: {\n    code: `let y : ptr<storage, u32, read> = &x;`,\n    valid: false,\n    decls: `@group(0) @binding(0) var<storage, read_write> x : u32;`,\n  },\n  ptr_addrspace_mismatch: {\n    code: `let y = ptr<storage, u32> = &x;`,\n    valid: false,\n    decls: `@group(0) @binding(0) var<uniform> x : u32;`,\n  },\n  init_const_expr: {\n    code: `let y = x * 2;`,\n    valid: true,\n    decls: `const x = 1;`,\n  },\n  init_override_expr: {\n    code: `let y = x + 1;`,\n    valid: true,\n    decls: `override x = 1;`,\n  },\n  init_runtime_expr: {\n    code: `var x = 1;\\nlet y = x << 1;`,\n    valid: true,\n  },\n};\n\ng.test('initializer')\n  .desc('Test let initializers')\n  .params(u => u.combine('case', keysOf(kInitCases)))\n  .fn(t => {\n    const testcase = kInitCases[t.params.case];\n    const code = `\n${testcase.decls ?? ''}\nfn foo() {\n  ${testcase.code}\n}`;\n    const expect = testcase.valid;\n    t.expectCompileResult(expect, code);\n  });\n\ng.test('module_scope')\n  .desc('Test that let declarations are disallowed module scope')\n  .fn(t => {\n    const code = `let x = 0;`;\n    t.expectCompileResult(false, code);\n  });\n\nconst kTestTypes = [\n  'f32',\n  'i32',\n  'u32',\n  'bool',\n  'vec2<f32>',\n  'vec2<i32>',\n  'vec2<u32>',\n  'vec2<bool>',\n  'vec3<f32>',\n  'vec3<i32>',\n  'vec3<u32>',\n  'vec3<bool>',\n  'vec4<f32>',\n  'vec4<i32>',\n  'vec4<u32>',\n  'vec4<bool>',\n  'mat2x2<f32>',\n  'mat2x3<f32>',\n  'mat2x4<f32>',\n  'mat3x2<f32>',\n  'mat3x3<f32>',\n  'mat3x4<f32>',\n  'mat4x2<f32>',\n  'mat4x3<f32>',\n  'mat4x4<f32>',\n  // [1]: 12 is a random number here. find a solution to replace it.\n  'array<f32, 12>',\n  'array<i32, 12>',\n  'array<u32, 12>',\n  'array<bool, 12>',\n] as const;\n\ng.test('initializer_type')\n  .desc(\n    `\n  If present, the initializer's type must match the store type of the variable.\n  Testing scalars, vectors, and matrices of every dimension and type.\n  TODO: add test for: structs - arrays of vectors and matrices - arrays of different length\n`\n  )\n  .params(u => u.beginSubcases().combine('lhsType', kTestTypes).combine('rhsType', kTestTypes))\n  .fn(t => {\n    const { lhsType, rhsType } = t.params;\n\n    const code = `\n      @fragment\n      fn main() {\n        let a : ${lhsType} = ${rhsType}();\n      }\n    `;\n\n    const expectation = lhsType === rhsType;\n    t.expectCompileResult(expectation, code);\n  });\n"],"mappings":"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"}