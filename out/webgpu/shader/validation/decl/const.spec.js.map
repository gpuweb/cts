{"version":3,"file":"const.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","test","desc","params","u","combine","fn","t","wgsl","target","expectCompileResult","attribute","kTypeCases","bool","code","valid","i32","u32","f32","f16","abstract_int","abstract_float","vec2i","vec3u","vec4f","mat2x2","mat4x3f","array_sized","array_runtime","struct","atomic","vec_abstract_int","array_abstract_int","case","skipIfDeviceDoesNotHaveFeature","testcase","expect","kInitCases","no_init","no_type","no_init_no_type","init_matching_type","init_mismatch_type","abs_int_init_convert","abs_float_init_convert","init_const_expr","init_override_expr","init_runtime_expr","init_func","init_non_const_func","undefined","scope","attr"],"sources":["../../../../../src/webgpu/shader/validation/decl/const.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for const declarations\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('no_direct_recursion')\n  .desc('Test that direct recursion of const declarations is rejected')\n  .params(u => u.combine('target', ['a', 'b']))\n  .fn(t => {\n    const wgsl = `\nconst a : i32 = 42;\nconst b : i32 = ${t.params.target};\n`;\n    t.expectCompileResult(t.params.target === 'a', wgsl);\n  });\n\ng.test('no_indirect_recursion')\n  .desc('Test that indirect recursion of const declarations is rejected')\n  .params(u => u.combine('target', ['a', 'b']))\n  .fn(t => {\n    const wgsl = `\nconst a : i32 = 42;\nconst b : i32 = c;\nconst c : i32 = ${t.params.target};\n`;\n    t.expectCompileResult(t.params.target === 'a', wgsl);\n  });\n\ng.test('no_indirect_recursion_via_array_size')\n  .desc('Test that indirect recursion of const declarations via array size expressions is rejected')\n  .params(u => u.combine('target', ['a', 'b']))\n  .fn(t => {\n    const wgsl = `\nconst a = 4;\nconst b = c[0];\nconst c = array<i32, ${t.params.target}>(4, 4, 4, 4);\n`;\n    t.expectCompileResult(t.params.target === 'a', wgsl);\n  });\n\ng.test('no_indirect_recursion_via_struct_attribute')\n  .desc('Test that indirect recursion of const declarations via struct members is rejected')\n  .params(u =>\n    u //\n      .combine('target', ['a', 'b'])\n      .combine('attribute', ['align', 'location', 'size'])\n  )\n  .fn(t => {\n    const wgsl = `\nstruct S {\n  @${t.params.attribute}(${t.params.target}) a : i32\n}\nconst a = 4;\nconst b = S(4).a;\n`;\n    t.expectCompileResult(t.params.target === 'a', wgsl);\n  });\n\nconst kTypeCases = {\n  bool: {\n    code: `const x : bool = true;`,\n    valid: true,\n  },\n  i32: {\n    code: `const x : i32 = 1i;`,\n    valid: true,\n  },\n  u32: {\n    code: `const x : u32 = 1u;`,\n    valid: true,\n  },\n  f32: {\n    code: `const x : f32 = 1f;`,\n    valid: true,\n  },\n  f16: {\n    code: `enable f16;\\nconst x : f16 = 1h;`,\n    valid: true,\n  },\n  abstract_int: {\n    code: `\n      const x = 0xffffffffff;\n      const_assert x == 0xffffffffff;`,\n    valid: true,\n  },\n  abstract_float: {\n    code: `\n      const x = 3937509.87755102;\n      const_assert x != 3937510.0;\n      const_assert x != 3937509.75;`,\n    valid: true,\n  },\n  vec2i: {\n    code: `const x : vec2i = vec2i();`,\n    valid: true,\n  },\n  vec3u: {\n    code: `const x : vec3u = vec3u();`,\n    valid: true,\n  },\n  vec4f: {\n    code: `const x : vec4f = vec4f();`,\n    valid: true,\n  },\n  mat2x2: {\n    code: `const x : mat2x2f = mat2x2f();`,\n    valid: true,\n  },\n  mat4x3f: {\n    code: `const x : mat4x3<f32> = mat4x3<f32>();`,\n    valid: true,\n  },\n  array_sized: {\n    code: `const x : array<u32, 4> = array(1,2,3,4);`,\n    valid: true,\n  },\n  array_runtime: {\n    code: `const x : array<u32> = array(1,2,3);`,\n    valid: false,\n  },\n  struct: {\n    code: `struct S { x : u32 }\\nconst x : S = S(0);`,\n    valid: true,\n  },\n  atomic: {\n    code: `const x : atomic<u32> = 0;`,\n    valid: false,\n  },\n  vec_abstract_int: {\n    code: `\n      const x = vec2(0xffffffffff,0xfffffffff0);\n      const_assert x.x == 0xffffffffff;\n      const_assert x.y == 0xfffffffff0;`,\n    valid: true,\n  },\n  array_abstract_int: {\n    code: `\n      const x = array(0xffffffffff,0xfffffffff0);\n      const_assert x[0] == 0xffffffffff;\n      const_assert x[1] == 0xfffffffff0;`,\n    valid: true,\n  },\n};\n\ng.test('type')\n  .desc('Test const types')\n  .params(u => u.combine('case', keysOf(kTypeCases)))\n  .fn(t => {\n    if (t.params.case === 'f16') {\n      t.skipIfDeviceDoesNotHaveFeature('shader-f16');\n    }\n    const testcase = kTypeCases[t.params.case];\n\n    const code = testcase.code;\n    const expect = testcase.valid;\n    t.expectCompileResult(expect, code);\n  });\n\nconst kInitCases = {\n  no_init: {\n    code: `const x : u32;`,\n    valid: false,\n  },\n  no_type: {\n    code: `const x = 0;`,\n    valid: true,\n  },\n  no_init_no_type: {\n    code: `const x;`,\n    valid: false,\n  },\n  init_matching_type: {\n    code: `const x : i32 = 1i;`,\n    valid: true,\n  },\n  init_mismatch_type: {\n    code: `const x : u32 = 1i;`,\n    valid: false,\n  },\n  abs_int_init_convert: {\n    code: `const x : u32 = 1;`,\n    valid: true,\n  },\n  abs_float_init_convert: {\n    code: `const x : f32 = 1.0;`,\n    valid: true,\n  },\n  init_const_expr: {\n    code: `const x = 0;\\nconst y = x + 2;`,\n    valid: true,\n  },\n  init_override_expr: {\n    code: `override x : u32;\\nconst y = x * 2;`,\n    valid: false,\n  },\n  init_runtime_expr: {\n    code: `var<private> x = 1i;\\nconst y = x - 1;`,\n    valid: false,\n  },\n  init_func: {\n    code: `const x = max(1,2);`,\n    valid: true,\n  },\n  init_non_const_func: {\n    code: `const x = foo(1);\n    fn foo(p : i32) -> i32 { return p; }`,\n    valid: false,\n  },\n};\n\ng.test('initializer')\n  .desc('Test const initializers')\n  .params(u => u.combine('case', keysOf(kInitCases)))\n  .fn(t => {\n    const testcase = kInitCases[t.params.case];\n    const code = testcase.code;\n    const expect = testcase.valid;\n    t.expectCompileResult(expect, code);\n  });\n\ng.test('function_scope')\n  .desc('Test that const declarations are allowed in functions')\n  .fn(t => {\n    const code = `fn foo() { const x = 0; }`;\n    t.expectCompileResult(true, code);\n  });\n\ng.test('immutable')\n  .desc('Test that const declarations are immutable')\n  .fn(t => {\n    const code = `\n    const x = 0;\n    fn foo() {\n      x = 1;\n    }`;\n    t.expectCompileResult(false, code);\n  });\n\ng.test('assert')\n  .desc('Test value can be checked by a const_assert')\n  .fn(t => {\n    const code = `\n    const x = 0;\n    const_assert x == 0;`;\n    t.expectCompileResult(true, code);\n  });\n\ng.test('placement')\n  .desc('Tests @const is not allowed to appear')\n  .params(u =>\n    u.combine('scope', [\n      'private-var',\n      'storage-var',\n      'struct-member',\n      'fn-decl',\n      'fn-param',\n      'fn-var',\n      'fn-return',\n      'while-stmt',\n      undefined,\n    ] as const)\n  )\n  .fn(t => {\n    const scope = t.params.scope;\n\n    const attr = '@const';\n    const code = `\n      ${scope === 'private-var' ? attr : ''}\n      var<private> priv_var : i32;\n\n      ${scope === 'storage-var' ? attr : ''}\n      @group(0) @binding(0)\n      var<storage> stor_var : i32;\n\n      struct A {\n        ${scope === 'struct-member' ? attr : ''}\n        a : i32,\n      }\n\n      @vertex\n      ${scope === 'fn-decl' ? attr : ''}\n      fn f(\n        ${scope === 'fn-param' ? attr : ''}\n        @location(0) b : i32,\n      ) -> ${scope === 'fn-return' ? attr : ''} @builtin(position) vec4f {\n        ${scope === 'fn-var' ? attr : ''}\n        var<function> func_v : i32;\n\n        ${scope === 'while-stmt' ? attr : ''}\n        while false {}\n\n        return vec4(1, 1, 1, 1);\n      }\n    `;\n\n    t.expectCompileResult(scope === undefined, code);\n  });\n"],"mappings":"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"}