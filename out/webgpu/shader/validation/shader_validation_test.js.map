{"version":3,"file":"shader_validation_test.js","names":["keysOf","ErrorWithExtra","AllFeaturesMaxLimitsGPUTest","ShaderValidationTest","expectCompileResult","expectedResult","code","shaderModule","expectGPUError","device","createShaderModule","error","eventualAsyncExpectation","compilationInfo","getCompilationInfo","messagesLog","messages","map","m","lineNum","linePos","type","message","join","extra","some","rec","validationFailed","debug","expectCompileWarning","expectWarning","expectPipelineResult","args","phonies","statements","undefined","push","constants","c","reference","createComputePipeline","layout","compute","module","entryPoint","wrapInEntryPoint","enabledExtensions","enableDirectives","x"],"sources":["../../../../src/webgpu/shader/validation/shader_validation_test.ts"],"sourcesContent":["import { keysOf } from '../../../common/util/data_tables.js';\nimport { ErrorWithExtra } from '../../../common/util/util.js';\nimport { AllFeaturesMaxLimitsGPUTest } from '../../gpu_test.js';\n\n/**\n * Base fixture for WGSL shader validation tests.\n */\nexport class ShaderValidationTest extends AllFeaturesMaxLimitsGPUTest {\n  /**\n   * Add a test expectation for whether a createShaderModule call succeeds or not.\n   *\n   * @example\n   * ```ts\n   * t.expectCompileResult(true, `wgsl code`); // Expect success\n   * t.expectCompileResult(false, `wgsl code`); // Expect validation error with any error string\n   * ```\n   */\n  expectCompileResult(expectedResult: boolean, code: string) {\n    let shaderModule: GPUShaderModule;\n    this.expectGPUError(\n      'validation',\n      () => {\n        shaderModule = this.device.createShaderModule({ code });\n      },\n      expectedResult !== true\n    );\n\n    const error = new ErrorWithExtra('', () => ({ shaderModule }));\n    this.eventualAsyncExpectation(async () => {\n      const compilationInfo = await shaderModule!.getCompilationInfo();\n\n      // MAINTENANCE_TODO: Pretty-print error messages with source context.\n      const messagesLog =\n        compilationInfo.messages\n          .map(m => `${m.lineNum}:${m.linePos}: ${m.type}: ${m.message}`)\n          .join('\\n') +\n        '\\n\\n---- shader ----\\n' +\n        code;\n      error.extra.compilationInfo = compilationInfo;\n\n      if (compilationInfo.messages.some(m => m.type === 'error')) {\n        if (expectedResult) {\n          error.message = `Unexpected compilationInfo 'error' message.\\n` + messagesLog;\n          this.rec.validationFailed(error);\n        } else {\n          error.message = `Found expected compilationInfo 'error' message.\\n` + messagesLog;\n          this.rec.debug(error);\n        }\n      } else {\n        if (!expectedResult) {\n          error.message = `Missing expected compilationInfo 'error' message.\\n` + messagesLog;\n          this.rec.validationFailed(error);\n        } else {\n          error.message = `No compilationInfo 'error' messages, as expected.\\n` + messagesLog;\n          this.rec.debug(error);\n        }\n      }\n    });\n  }\n\n  /**\n   * Add a test expectation for whether a createShaderModule call issues a warning.\n   *\n   * @example\n   * ```ts\n   * t.expectCompileWarning(true, `wgsl code`); // Expect compile success and any warning message\n   * t.expectCompileWarning(false, `wgsl code`); // Expect compile success and no warning messages\n   * ```\n   */\n  expectCompileWarning(expectWarning: boolean, code: string) {\n    let shaderModule: GPUShaderModule;\n    this.expectGPUError(\n      'validation',\n      () => {\n        shaderModule = this.device.createShaderModule({ code });\n      },\n      false\n    );\n\n    const error = new ErrorWithExtra('', () => ({ shaderModule }));\n    this.eventualAsyncExpectation(async () => {\n      const compilationInfo = await shaderModule!.getCompilationInfo();\n\n      // MAINTENANCE_TODO: Pretty-print error messages with source context.\n      const messagesLog = compilationInfo.messages\n        .map(m => `${m.lineNum}:${m.linePos}: ${m.type}: ${m.message}`)\n        .join('\\n');\n      error.extra.compilationInfo = compilationInfo;\n\n      if (compilationInfo.messages.some(m => m.type === 'warning')) {\n        if (expectWarning) {\n          error.message = `No 'warning' message as expected.\\n` + messagesLog;\n          this.rec.debug(error);\n        } else {\n          error.message = `Missing expected compilationInfo 'warning' message.\\n` + messagesLog;\n          this.rec.validationFailed(error);\n        }\n      } else {\n        if (expectWarning) {\n          error.message = `Missing expected 'warning' message.\\n` + messagesLog;\n          this.rec.validationFailed(error);\n        } else {\n          error.message = `Found a 'warning' message as expected.\\n` + messagesLog;\n          this.rec.debug(error);\n        }\n      }\n    });\n  }\n\n  /**\n   * Add a test expectation for whether a createComputePipeline call succeeds or not.\n   */\n  expectPipelineResult(args: {\n    // True if the pipeline should build without error\n    expectedResult: boolean;\n    // The WGSL shader code\n    code: string;\n    // Pipeline overridable constants\n    constants?: Record<string, GPUPipelineConstantValue>;\n    // List of additional module-scope variable the entrypoint needs to reference\n    reference?: string[];\n    // List of additional statements to insert in the entry point.\n    statements?: string[];\n  }) {\n    const phonies: Array<string> = [];\n\n    if (args.statements !== undefined) {\n      phonies.push(...args.statements);\n    }\n    if (args.constants !== undefined) {\n      phonies.push(...keysOf(args.constants).map(c => `_ = ${c};`));\n    }\n    if (args.reference !== undefined) {\n      phonies.push(...args.reference.map(c => `_ = ${c};`));\n    }\n\n    const code =\n      args.code +\n      `\n@compute @workgroup_size(1)\nfn main() {\n  ${phonies.join('\\n')}\n}`;\n\n    let shaderModule: GPUShaderModule;\n    this.expectGPUError(\n      'validation',\n      () => {\n        shaderModule = this.device.createShaderModule({ code });\n      },\n      false\n    );\n\n    this.expectGPUError(\n      'validation',\n      () => {\n        this.device.createComputePipeline({\n          layout: 'auto',\n          compute: { module: shaderModule!, entryPoint: 'main', constants: args.constants },\n        });\n      },\n      !args.expectedResult\n    );\n  }\n\n  /**\n   * Wraps the code fragment into an entry point.\n   *\n   * @example\n   * ```ts\n   * t.wrapInEntryPoint(`var i = 0;`);\n   * ```\n   */\n  wrapInEntryPoint(code: string, enabledExtensions: string[] = []) {\n    const enableDirectives = enabledExtensions.map(x => `enable ${x};`).join('\\n      ');\n\n    return `\n      ${enableDirectives}\n\n      @compute @workgroup_size(1)\n      fn main() {\n        ${code}\n      }`;\n  }\n}\n"],"mappings":"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"}