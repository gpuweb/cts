{"version":3,"file":"align.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kTests","blank","src","pass","one","four_a","four_i","four_u","four_hex","trailing_comma","const_u","const_i","const_expr","const_expr_2","large","tabs","comment","misspelling","empty","missing_left_paren","missing_right_paren","multiple_values","non_power_two","const_f","one_f","four_f","four_h","no_params","zero_a","negative","large_no_power_two","larger_than_max_i32","duplicate","test","desc","params","u","combine","fn","t","align","code","expectCompileResult","name","storage","uniform","beginSubcases","address_space","type","startsWith","skip","includes","min_align","fails","undefined","scope","attr","attribute","multi"],"sources":["../../../../../src/webgpu/shader/validation/shader_io/align.spec.ts"],"sourcesContent":["export const description = `Validation tests for @align`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kTests = {\n  blank: {\n    src: '',\n    pass: true,\n  },\n  one: {\n    src: '@align(1)',\n    pass: false,\n    // EXCEPTION: Error: Unexpected validation error occurred:\n    // Error while parsing WGSL: :6:10 error: alignment must be a\n    // multiple of '4' bytes for the 'uniform' address space @align(1) a: i32,\n  },\n  four_a: {\n    src: '@align(4)',\n    pass: true,\n  },\n  four_i: {\n    src: '@align(4i)',\n    pass: true,\n  },\n  four_u: {\n    src: '@align(4u)',\n    pass: true,\n  },\n  four_hex: {\n    src: '@align(0x4)',\n    pass: true,\n  },\n  trailing_comma: {\n    src: '@align(4,)',\n    pass: true,\n  },\n  const_u: {\n    src: '@align(u_val)',\n    pass: true,\n  },\n  const_i: {\n    src: '@align(i_val)',\n    pass: true,\n  },\n  const_expr: {\n    src: '@align(i_val + 4 - 6)',\n    pass: false,\n    // EXCEPTION: Error: Unexpected validation error occurred:\n    // Error while parsing WGSL: :6:10 error: alignment must be a\n    // multiple of '4' bytes for the 'uniform' address space\n    // @align(i_val + 4 - 6) a: i32\n  },\n  const_expr_2: {\n    src: '@align(i_val + 8 - 4)',\n    pass: true,\n  },\n  large: {\n    src: '@align(1073741824)',\n    pass: true,\n  },\n  tabs: {\n    src: '@\\talign\\t(4)',\n    pass: true,\n  },\n  comment: {\n    src: '@/*comment*/align/*comment*/(4)',\n    pass: true,\n  },\n  misspelling: {\n    src: '@malign(4)',\n    pass: false,\n  },\n  empty: {\n    src: '@align()',\n    pass: false,\n  },\n  missing_left_paren: {\n    src: '@align 4)',\n    pass: false,\n  },\n  missing_right_paren: {\n    src: '@align(4',\n    pass: false,\n  },\n  multiple_values: {\n    src: '@align(4, 2)',\n    pass: false,\n  },\n  non_power_two: {\n    src: '@align(3)',\n    pass: false,\n  },\n  const_f: {\n    src: '@align(f_val)',\n    pass: false,\n  },\n  one_f: {\n    src: '@align(1.0)',\n    pass: false,\n  },\n  four_f: {\n    src: '@align(4f)',\n    pass: false,\n  },\n  four_h: {\n    src: '@align(4h)',\n    pass: false,\n  },\n  no_params: {\n    src: '@align',\n    pass: false,\n  },\n  zero_a: {\n    src: '@align(0)',\n    pass: false,\n  },\n  negative: {\n    src: '@align(-4)',\n    pass: false,\n  },\n  large_no_power_two: {\n    src: '@align(2147483646)',\n    pass: false,\n  },\n  larger_than_max_i32: {\n    src: '@align(2147483648)',\n    pass: false,\n  },\n  duplicate: {\n    src: '@align(4) @align(4)',\n    pass: false,\n  },\n};\n\ng.test('parsing')\n  .desc(`Test that @align is parsed correctly.`)\n  .params(u => u.combine('align', keysOf(kTests)))\n  .fn(t => {\n    const src = kTests[t.params.align].src;\n    const code = `\nconst i_val: i32 = 4;\nconst u_val: u32 = 4;\nconst f_val: f32 = 4.2;\nstruct B {\n  ${src} a: i32,\n}\n\n@group(0) @binding(0)\nvar<uniform> uniform_buffer: B;\n\n@fragment\nfn main() -> @location(0) vec4<f32> {\n  return vec4<f32>(.4, .2, .3, .1);\n}`;\n    t.expectCompileResult(kTests[t.params.align].pass, code);\n  });\n\ng.test('required_alignment')\n  .desc('Test that the align with an invalid size is an error')\n  .params(u =>\n    u\n      .combine('address_space', ['storage', 'uniform'])\n      .combine('align', [1, 2, 'alignment', 32])\n      .combine('type', [\n        { name: 'i32', storage: 4, uniform: 4 },\n        { name: 'u32', storage: 4, uniform: 4 },\n        { name: 'f32', storage: 4, uniform: 4 },\n        { name: 'f16', storage: 2, uniform: 2 },\n        { name: 'atomic<i32>', storage: 4, uniform: 4 },\n        { name: 'vec2<i32>', storage: 8, uniform: 8 },\n        { name: 'vec2<f16>', storage: 4, uniform: 4 },\n        { name: 'vec3<u32>', storage: 16, uniform: 16 },\n        { name: 'vec3<f16>', storage: 8, uniform: 8 },\n        { name: 'vec4<f32>', storage: 16, uniform: 16 },\n        { name: 'vec4<f16>', storage: 8, uniform: 8 },\n        { name: 'mat2x2<f32>', storage: 8, uniform: 8 },\n        { name: 'mat3x2<f32>', storage: 8, uniform: 8 },\n        { name: 'mat4x2<f32>', storage: 8, uniform: 8 },\n        { name: 'mat2x2<f16>', storage: 4, uniform: 4 },\n        { name: 'mat3x2<f16>', storage: 4, uniform: 4 },\n        { name: 'mat4x2<f16>', storage: 4, uniform: 4 },\n        { name: 'mat2x3<f32>', storage: 16, uniform: 16 },\n        { name: 'mat3x3<f32>', storage: 16, uniform: 16 },\n        { name: 'mat4x3<f32>', storage: 16, uniform: 16 },\n        { name: 'mat2x3<f16>', storage: 8, uniform: 8 },\n        { name: 'mat3x3<f16>', storage: 8, uniform: 8 },\n        { name: 'mat4x3<f16>', storage: 8, uniform: 8 },\n        { name: 'mat2x4<f32>', storage: 16, uniform: 16 },\n        { name: 'mat3x4<f32>', storage: 16, uniform: 16 },\n        { name: 'mat4x4<f32>', storage: 16, uniform: 16 },\n        { name: 'mat2x4<f16>', storage: 8, uniform: 8 },\n        { name: 'mat3x4<f16>', storage: 8, uniform: 8 },\n        { name: 'mat4x4<f16>', storage: 8, uniform: 8 },\n        { name: 'array<vec2<i32>, 2>', storage: 8, uniform: 16 },\n        { name: 'array<vec4<i32>, 2>', storage: 16, uniform: 16 },\n        { name: 'S', storage: 8, uniform: 16 },\n      ])\n      .beginSubcases()\n  )\n  .fn(t => {\n    // While this would fail validation, it doesn't fail for any reasons related to alignment.\n    // Atomics are not allowed in uniform address space as they have to be read_write.\n    if (t.params.address_space === 'uniform' && t.params.type.name.startsWith('atomic')) {\n      t.skip('No atomics in uniform address space');\n    }\n\n    let code = '';\n    if (t.params.type.name.includes('f16')) {\n      code += 'enable f16;\\n';\n    }\n\n    // Testing the struct case, generate the structf\n    if (t.params.type.name === 'S') {\n      code += `struct S {\n        a: mat4x2<f32>,          // Align 8\n        b: array<vec${\n          t.params.address_space === 'storage' ? 2 : 4\n        }<i32>, 2>,  // Storage align 8, uniform 16\n      }\n      `;\n    }\n\n    // Alignment value listed in the spec\n    const min_align =\n      t.params.address_space === 'storage'\n        ? `${t.params.type.storage}`\n        : `${t.params.type.uniform}`;\n    const align = t.params.align === 'alignment' ? min_align : t.params.align;\n\n    let address_space = 'uniform';\n    if (t.params.address_space === 'storage') {\n      // atomics require read_write, not just the default of read\n      address_space = 'storage, read_write';\n    }\n\n    code += `struct MyStruct {\n      @align(${align}) a: ${t.params.type.name},\n    }\n\n    @group(0) @binding(0)\n    var<${address_space}> a : MyStruct;`;\n\n    code += `\n    @fragment\n    fn main() -> @location(0) vec4<f32> {\n      return vec4<f32>(.4, .2, .3, .1);\n    }`;\n\n    // An array of `vec2` in uniform will not validate because, while the alignment on the array\n    // itself is fine, the `vec2` element inside the array will have the wrong alignment. Uniform\n    // requires that inner vec2 to have an align 16 which can only be done by specifying `vec4`\n    // instead.\n    const fails =\n      (t.params.address_space === 'uniform' && t.params.type.name.startsWith('array<vec2')) ||\n      align < min_align;\n\n    t.expectCompileResult(!fails, code);\n  });\n\ng.test('placement')\n  .desc('Tests the locations @align is allowed to appear')\n  .params(u =>\n    u\n      .combine('scope', [\n        'private-var',\n        'storage-var',\n        'struct-member',\n        'fn-decl',\n        'fn-param',\n        'fn-var',\n        'fn-return',\n        'while-stmt',\n        undefined,\n      ] as const)\n      .combine('attribute', [\n        {\n          'private-var': false,\n          'storage-var': false,\n          'struct-member': true,\n          'fn-decl': false,\n          'fn-param': false,\n          'fn-var': false,\n          'fn-return': false,\n          'while-stmt': false,\n        },\n      ])\n      .beginSubcases()\n  )\n  .fn(t => {\n    const scope = t.params.scope;\n\n    const attr = '@align(32)';\n    const code = `\n      ${scope === 'private-var' ? attr : ''}\n      var<private> priv_var : i32;\n\n      ${scope === 'storage-var' ? attr : ''}\n      @group(0) @binding(0)\n      var<storage> stor_var : i32;\n\n      struct A {\n        ${scope === 'struct-member' ? attr : ''}\n        a : i32,\n      }\n\n      @vertex\n      ${scope === 'fn-decl' ? attr : ''}\n      fn f(\n        ${scope === 'fn-param' ? attr : ''}\n        @location(0) b : i32,\n      ) -> ${scope === 'fn-return' ? attr : ''} @builtin(position) vec4f {\n        ${scope === 'fn-var' ? attr : ''}\n        var<function> func_v : i32;\n\n        ${scope === 'while-stmt' ? attr : ''}\n        while false {}\n\n        return vec4(1, 1, 1, 1);\n      }\n    `;\n\n    t.expectCompileResult(scope === undefined || t.params.attribute[scope], code);\n  });\n\ng.test('multi_align')\n  .desc('Tests that align multiple times is an error')\n  .params(u => u.combine('multi', [true, false]))\n  .fn(t => {\n    let code = `struct A {\n      @align(128) `;\n\n    if (t.params.multi === true) {\n      code += '@align(128) ';\n    }\n\n    code += `a : i32,\n      }\n\n      @fragment\n      fn main() -> @location(0) vec4<f32> {\n        return vec4(1., 1., 1., 1.);\n      }`;\n\n    t.expectCompileResult(!t.params.multi, code);\n  });\n"],"mappings":"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"}