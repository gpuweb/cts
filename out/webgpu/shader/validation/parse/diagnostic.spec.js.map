{"version":3,"file":"diagnostic.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kSpecDiagnosticRules","kSpecDiagnosticSeverities","kDiagnosticTypes","kBadSeverities","kBadSingleTokenRules","generateDiagnostic","type","severity","rule","diagnostic","kValidLocations","module","diag","function","compound","if_stmt","if_then","if_else","switch_stmt","switch_body","switch_default","switch_case","loop_stmt","loop_body","loop_continuing","while_stmt","while_body","for_stmt","for_body","kInvalidLocations","module_var","module_const","module_override","struct","struct_member","function_params","function_var","function_let","function_const","pre_else","pre_default","pre_case","pre_continuing","pre_for_params","kNestedLocations","d1","d2","test","specURL","desc","params","u","combine","fn","t","code","expectCompileResult","expectCompileWarning","location","res","s1","s2","beginSubcases","filter","loc","rule1","rule2","same_rule","directive","startsWith","skipIfLanguageFeatureNotSupported","scopeCode","body","kScopeCases","override_global_off","result","override_global_on","override_global_warn","global_if_nothing_else_warn","deepest_nesting_warn","deepest_nesting_off","deepest_nesting_error","other_nest_unaffected","deeper_nest_no_effect","call_unaffected_error","call_unaffected_warn","call_unaffected_off","if_condition_error","if_condition_warn","if_condition_off","switch_error","switch_warn","switch_off","testcase","case"],"sources":["../../../../../src/webgpu/shader/validation/parse/diagnostic.spec.ts"],"sourcesContent":["export const description = `Validation tests for diagnostic directive and attribute`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kSpecDiagnosticRules = ['derivative_uniformity', 'subgroup_uniformity'];\nconst kSpecDiagnosticSeverities = ['off', 'info', 'warning', 'error'];\nconst kDiagnosticTypes = ['attribute', 'directive'];\n\nconst kBadSeverities = ['none', 'warn', 'goose', 'fatal', 'severe'];\nconst kBadSingleTokenRules = ['unknown', 'blahblahblah', 'derivative_uniform'];\n\nfunction generateDiagnostic(type: string, severity: string, rule: string): string {\n  const diagnostic = `diagnostic(${severity}, ${rule})`;\n  if (type === 'directive') {\n    return diagnostic;\n  } else {\n    return '@' + diagnostic;\n  }\n}\n\nconst kValidLocations = {\n  module: (diag: string) => `${diag};`,\n  function: (diag: string) => `${diag} fn foo() { }`,\n  compound: (diag: string) => `fn foo() { ${diag} { } }`,\n  if_stmt: (diag: string) => `fn foo() { ${diag} if true { } }`,\n  if_then: (diag: string) => `fn foo() { if true ${diag} { } }`,\n  if_else: (diag: string) => `fn foo() { if true { } else ${diag} { } }`,\n  switch_stmt: (diag: string) => `fn foo() { ${diag} switch 0 { default { } } }`,\n  switch_body: (diag: string) => `fn foo() { switch 0 ${diag} { default { } } }`,\n  switch_default: (diag: string) => `fn foo() { switch 0 { default ${diag} { } } }`,\n  switch_case: (diag: string) => `fn foo() { switch 0 { case 0 ${diag} { } default { } } }`,\n  loop_stmt: (diag: string) => `fn foo() { ${diag} loop { break; } }`,\n  loop_body: (diag: string) => `fn foo() { loop ${diag} { break; } }`,\n  loop_continuing: (diag: string) => `fn foo() { loop { continuing ${diag} { break if true; } } }`,\n  while_stmt: (diag: string) => `fn foo() { ${diag} while true { break; } }`,\n  while_body: (diag: string) => `fn foo() { while true ${diag} { break; } }`,\n  for_stmt: (diag: string) => `fn foo() { ${diag} for (var i = 0; i < 10; i++) { } }`,\n  for_body: (diag: string) => `fn foo() { for (var i = 0; i < 10; i++) ${diag} { } }`,\n};\n\nconst kInvalidLocations = {\n  module_var: (diag: string) => `${diag} var<private> x : u32;`,\n  module_const: (diag: string) => `${diag} const x = 0;`,\n  module_override: (diag: string) => `${diag} override x : u32;`,\n  struct: (diag: string) => `${diag} struct S { x : u32 }`,\n  struct_member: (diag: string) => ` struct S { ${diag} x : u32 }`,\n  function_params: (diag: string) => `fn foo${diag}() { }`,\n  function_var: (diag: string) => `fn foo() { ${diag} var x = 0; }`,\n  function_let: (diag: string) => `fn foo() { ${diag} let x = 0; }`,\n  function_const: (diag: string) => `fn foo() { ${diag} const x = 0; }`,\n  pre_else: (diag: string) => `fn foo() { if true { } ${diag} else { } }`,\n  pre_default: (diag: string) => `fn foo() { switch 0 { ${diag} default { } } }`,\n  pre_case: (diag: string) => `fn foo() { switch 0 { ${diag} case 0 { } default { } } }`,\n  pre_continuing: (diag: string) => `fn foo() { loop { ${diag} continuing { break if true; } } }`,\n  pre_for_params: (diag: string) => `fn foo() { for ${diag} (var i = 0; i < 10; i++) { } }`,\n};\n\nconst kNestedLocations = {\n  compound: (d1: string, d2: string) => `${d1} fn foo() { ${d2} { } }`,\n  if_stmt: (d1: string, d2: string) => `fn foo() { ${d1} if true ${d2} { } }`,\n  switch_stmt: (d1: string, d2: string) => `fn foo() { ${d1} switch 0 ${d2} { default { } } }`,\n  switch_body: (d1: string, d2: string) => `fn foo() { switch 0 ${d1} { default ${d2} { } } }`,\n  switch_case: (d1: string, d2: string) =>\n    `fn foo() { switch 0 { case 0 ${d1} { } default ${d2} { } } }`,\n  loop_stmt: (d1: string, d2: string) => `fn foo() { ${d1} loop ${d2} { break; } }`,\n  while_stmt: (d1: string, d2: string) => `fn foo() { ${d1} while true ${d2} { break; } }`,\n  for_stmt: (d1: string, d2: string) => `fn foo() { ${d1} for (var i = 0; i < 10; i++) ${d2} { } }`,\n};\n\ng.test('valid_params')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests required accepted diagnostic parameters`)\n  .params(u =>\n    u\n      .combine('severity', kSpecDiagnosticSeverities)\n      .combine('rule', kSpecDiagnosticRules)\n      .combine('type', kDiagnosticTypes)\n  )\n  .fn(t => {\n    const diag = generateDiagnostic(t.params.type, t.params.severity, t.params.rule);\n    let code = ``;\n    if (t.params.type === 'directive') {\n      code = kValidLocations['module'](diag);\n    } else {\n      code = kValidLocations['function'](diag);\n    }\n    t.expectCompileResult(true, code);\n  });\n\ng.test('invalid_severity')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests invalid severities are rejected`)\n  .params(u => u.combine('severity', kBadSeverities).combine('type', kDiagnosticTypes))\n  .fn(t => {\n    const diag = generateDiagnostic(t.params.type, t.params.severity, 'derivative_uniformity');\n    let code = ``;\n    if (t.params.type === 'directive') {\n      code = kValidLocations['module'](diag);\n    } else {\n      code = kValidLocations['function'](diag);\n    }\n    t.expectCompileResult(false, code);\n  });\n\ng.test('warning_unknown_rule')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests unknown single token rules issue a warning`)\n  .params(u => u.combine('type', kDiagnosticTypes).combine('rule', kBadSingleTokenRules))\n  .fn(t => {\n    const diag = generateDiagnostic(t.params.type, 'info', t.params.rule);\n    let code = ``;\n    if (t.params.type === 'directive') {\n      code = kValidLocations['module'](diag);\n    } else {\n      code = kValidLocations['function'](diag);\n    }\n    t.expectCompileWarning(true, code);\n  });\n\ng.test('valid_locations')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests valid locations`)\n  .params(u =>\n    u\n      .combine('type', kDiagnosticTypes)\n      .combine('location', keysOf(kValidLocations))\n      .combine('rule', kSpecDiagnosticRules)\n  )\n  .fn(t => {\n    const diag = generateDiagnostic(t.params.type, 'info', t.params.rule);\n    const code = kValidLocations[t.params.location](diag);\n    let res = true;\n    if (t.params.type === 'directive') {\n      res = t.params.location === 'module';\n    } else {\n      res = t.params.location !== 'module';\n    }\n    if (res === false) {\n      t.expectCompileResult(true, kValidLocations[t.params.location](''));\n    }\n    t.expectCompileResult(res, code);\n  });\n\ng.test('invalid_locations')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests invalid locations`)\n  .params(u =>\n    u\n      .combine('type', kDiagnosticTypes)\n      .combine('location', keysOf(kInvalidLocations))\n      .combine('rule', kSpecDiagnosticRules)\n  )\n  .fn(t => {\n    const diag = generateDiagnostic(t.params.type, 'info', t.params.rule);\n    t.expectCompileResult(true, kInvalidLocations[t.params.location](''));\n    t.expectCompileResult(false, kInvalidLocations[t.params.location](diag));\n  });\n\ng.test('conflicting_directive')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests conflicts between directives`)\n  .params(u => u.combine('s1', kSpecDiagnosticSeverities).combine('s2', kSpecDiagnosticSeverities))\n  .fn(t => {\n    const d1 = generateDiagnostic('directive', t.params.s1, 'derivative_uniformity');\n    const d2 = generateDiagnostic('directive', t.params.s2, 'derivative_uniformity');\n    const code = `${kValidLocations['module'](d1)}\\n${kValidLocations['module'](d2)}`;\n    t.expectCompileResult(t.params.s1 === t.params.s2, code);\n  });\n\ng.test('duplicate_attribute_same_location')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests duplicate diagnostics at the same location must be on different rules`)\n  .params(u =>\n    u\n      .combine('loc', keysOf(kValidLocations))\n      .combine('same_rule', [true, false] as const)\n      .beginSubcases()\n      .combine('s1', kSpecDiagnosticSeverities)\n      .combine('s2', kSpecDiagnosticSeverities)\n      .filter(u => {\n        return u.loc !== 'module';\n      })\n  )\n  .fn(t => {\n    const rule1 = 'derivative_uniformity';\n    const rule2 = 'another_diagnostic_rule';\n    const d1 = generateDiagnostic('attribute', t.params.s1, rule1);\n    const d2 = generateDiagnostic('attribute', t.params.s2, t.params.same_rule ? rule1 : rule2);\n    const code = `${kValidLocations[t.params.loc](`${d1} ${d2}`)}`;\n    t.expectCompileResult(!t.params.same_rule, code);\n  });\n\ng.test('conflicting_attribute_different_location')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests conflicts between attributes`)\n  .params(u =>\n    u\n      .combine('loc', keysOf(kNestedLocations))\n      .combine('s1', kSpecDiagnosticSeverities)\n      .combine('s2', kSpecDiagnosticSeverities)\n      .filter(u => {\n        return u.s1 !== u.s2;\n      })\n  )\n  .fn(t => {\n    const d1 = generateDiagnostic('attribute', t.params.s1, 'derivative_uniformity');\n    const d2 = generateDiagnostic('attribute', t.params.s2, 'derivative_uniformity');\n    const code = `${kNestedLocations[t.params.loc](d1, d2)}`;\n    t.expectCompileResult(true, code);\n  });\n\ng.test('after_other_directives')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc(`Tests other global directives before a diagnostic directive.`)\n  .params(u =>\n    u.combine('directive', ['enable f16', 'requires readonly_and_readwrite_storage_textures'])\n  )\n  .fn(t => {\n    if (t.params.directive.startsWith('requires')) {\n      t.skipIfLanguageFeatureNotSupported('readonly_and_readwrite_storage_textures');\n    }\n\n    let code = `${t.params.directive};`;\n    code += generateDiagnostic('directive', 'info', 'derivative_uniformity') + ';';\n    t.expectCompileResult(true, code);\n  });\n\ninterface ScopeCase {\n  code: string;\n  result: boolean | 'warn';\n}\n\nfunction scopeCode(body: string): string {\n  return `\n@group(0) @binding(0) var t : texture_1d<f32>;\n@group(0) @binding(1) var s : sampler;\nvar<private> non_uniform_cond : bool;\nvar<private> non_uniform_coord : f32;\nvar<private> non_uniform_val : u32;\n@fragment fn main() {\n  ${body}\n}\n`;\n}\n\nconst kScopeCases: Record<string, ScopeCase> = {\n  override_global_off: {\n    code: `\n    ${generateDiagnostic('directive', 'error', 'derivative_uniformity')};\n    ${scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)};\n    `,\n    result: true,\n  },\n  override_global_on: {\n    code: `\n    ${generateDiagnostic('directive', 'off', 'derivative_uniformity')};\n    ${scopeCode(`\n      ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: false,\n  },\n  override_global_warn: {\n    code: `\n    ${generateDiagnostic('directive', 'error', 'derivative_uniformity')};\n    ${scopeCode(`\n      ${generateDiagnostic('', 'warning', 'derivative_uniformity')}\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: 'warn',\n  },\n  global_if_nothing_else_warn: {\n    code: `\n    ${generateDiagnostic('directive', 'warning', 'derivative_uniformity')};\n    ${scopeCode(`\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: 'warn',\n  },\n  deepest_nesting_warn: {\n    code: scopeCode(`\n      ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'warning', 'derivative_uniformity')}\n        if non_uniform_cond {\n          _ = textureSample(t,s,0.0);\n        }\n      }`),\n    result: 'warn',\n  },\n  deepest_nesting_off: {\n    code: scopeCode(`\n      ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n        if non_uniform_cond {\n          _ = textureSample(t,s,0.0);\n        }\n      }`),\n    result: true,\n  },\n  deepest_nesting_error: {\n    code: scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n        if non_uniform_cond {\n          _ = textureSample(t,s,0.0);\n        }\n      }`),\n    result: false,\n  },\n  other_nest_unaffected: {\n    code: `\n    ${generateDiagnostic('directive', 'warning', 'derivative_uniformity')};\n    ${scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }\n      if non_uniform_cond {\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: 'warn',\n  },\n  deeper_nest_no_effect: {\n    code: `\n    ${generateDiagnostic('directive', 'error', 'derivative_uniformity')};\n    ${scopeCode(`\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n        if non_uniform_cond {\n        }\n        _ = textureSample(t,s,0.0);\n      }`)}\n    `,\n    result: false,\n  },\n  call_unaffected_error: {\n    code: `\n    ${generateDiagnostic('directive', 'error', 'derivative_uniformity')};\n    fn foo() { _ = textureSample(t,s,0.0); }\n    ${scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        foo();\n      }`)}\n    `,\n    result: false,\n  },\n  call_unaffected_warn: {\n    code: `\n    ${generateDiagnostic('directive', 'warning', 'derivative_uniformity')};\n    fn foo() { _ = textureSample(t,s,0.0); }\n    ${scopeCode(`\n      ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n      if non_uniform_cond {\n        foo();\n      }`)}\n    `,\n    result: 'warn',\n  },\n  call_unaffected_off: {\n    code: `\n    ${generateDiagnostic('directive', 'off', 'derivative_uniformity')};\n    fn foo() { _ = textureSample(t,s,0.0); }\n    ${scopeCode(`\n      ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n      if non_uniform_cond {\n        foo();\n      }`)}\n    `,\n    result: true,\n  },\n  if_condition_error: {\n    code: scopeCode(`\n      if (non_uniform_cond) {\n        ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n        if textureSample(t,s,non_uniform_coord).x > 0.0\n          ${generateDiagnostic('', 'off', 'derivative_uniformity')} {\n        }\n      }`),\n    result: false,\n  },\n  if_condition_warn: {\n    code: scopeCode(`\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'warning', 'derivative_uniformity')}\n        if textureSample(t,s,non_uniform_coord).x > 0.0\n          ${generateDiagnostic('', 'error', 'derivative_uniformity')} {\n        }\n      }`),\n    result: 'warn',\n  },\n  if_condition_off: {\n    code: scopeCode(`\n      if non_uniform_cond {\n        ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n        if textureSample(t,s,non_uniform_coord).x > 0.0\n          ${generateDiagnostic('', 'error', 'derivative_uniformity')} {\n        }\n      }`),\n    result: true,\n  },\n  switch_error: {\n    code: scopeCode(`\n        ${generateDiagnostic('', 'error', 'derivative_uniformity')}\n        switch non_uniform_val {\n          case 0 ${generateDiagnostic('', 'off', 'derivative_uniformity')} {\n          }\n          default {\n            _ = textureSample(t,s,0.0);\n          }\n        }`),\n    result: false,\n  },\n  switch_warn: {\n    code: scopeCode(`\n        ${generateDiagnostic('', 'warning', 'derivative_uniformity')}\n        switch non_uniform_val {\n          case 0 ${generateDiagnostic('', 'off', 'derivative_uniformity')} {\n          }\n          default {\n            _ = textureSample(t,s,0.0);\n          }\n        }`),\n    result: 'warn',\n  },\n  switch_off: {\n    code: scopeCode(`\n        ${generateDiagnostic('', 'off', 'derivative_uniformity')}\n        switch non_uniform_val {\n          case 0 ${generateDiagnostic('', 'error', 'derivative_uniformity')}{\n          }\n          default {\n            _ = textureSample(t,s,0.0);\n          }\n        }`),\n    result: true,\n  },\n};\n\ng.test('diagnostic_scoping')\n  .specURL('https://gpuweb.github.io/gpuweb/wgsl/#diagnostics')\n  .desc('Tests that innermost scope controls the diagnostic')\n  .params(u => u.combine('case', keysOf(kScopeCases)))\n  .fn(t => {\n    const testcase = kScopeCases[t.params.case];\n    if (testcase.result === 'warn') {\n      t.expectCompileWarning(true, testcase.code);\n    } else {\n      t.expectCompileResult(testcase.result as boolean, testcase.code);\n    }\n  });\n"],"mappings":"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"}