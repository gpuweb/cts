{"version":3,"file":"vector.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","g","kCases","vec2_bool","wgsl","ok","vec3_bool","vec4_bool","vec2_i32","vec3_i32","vec4_i32","vec2_u32","vec3_u32","vec4_u32","vec2_f32","vec3_f32","vec4_f32","vec2_f16","vec3_f16","vec4_f16","vec2i","vec3i","vec4i","vec2u","vec3u","vec4u","vec2f","vec3f","vec4f","vec2h","vec3h","vec4h","trailing_comma","aliased_el_ty","vec","vec_f32","vec1_i32","vec5_u32","missing_el_ty","missing_t_left","missing_t_right","vec_of_array","vec_of_runtime_array","vec_of_struct","vec_of_atomic","vec_of_matrix","vec_of_vec","no_bool_shortform","test","desc","params","u","combine","fn","t","c","case","expectCompileResult"],"sources":["../../../../../src/webgpu/shader/validation/types/vector.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for vector types\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kCases = {\n  // Valid vector types\n  vec2_bool: { wgsl: 'alias T = vec2<bool>;', ok: true },\n  vec3_bool: { wgsl: 'alias T = vec3<bool>;', ok: true },\n  vec4_bool: { wgsl: 'alias T = vec4<bool>;', ok: true },\n  vec2_i32: { wgsl: 'alias T = vec2<i32>;', ok: true },\n  vec3_i32: { wgsl: 'alias T = vec3<i32>;', ok: true },\n  vec4_i32: { wgsl: 'alias T = vec4<i32>;', ok: true },\n  vec2_u32: { wgsl: 'alias T = vec2<u32>;', ok: true },\n  vec3_u32: { wgsl: 'alias T = vec3<u32>;', ok: true },\n  vec4_u32: { wgsl: 'alias T = vec4<u32>;', ok: true },\n  vec2_f32: { wgsl: 'alias T = vec2<f32>;', ok: true },\n  vec3_f32: { wgsl: 'alias T = vec3<f32>;', ok: true },\n  vec4_f32: { wgsl: 'alias T = vec4<f32>;', ok: true },\n  vec2_f16: { wgsl: 'enable f16;\\nalias T = vec2<f16>;', ok: true },\n  vec3_f16: { wgsl: 'enable f16;\\nalias T = vec3<f16>;', ok: true },\n  vec4_f16: { wgsl: 'enable f16;\\nalias T = vec4<f16>;', ok: true },\n\n  // Pre-declared type aliases\n  vec2i: { wgsl: 'const c : vec2i = vec2<i32>();', ok: true },\n  vec3i: { wgsl: 'const c : vec3i = vec3<i32>();', ok: true },\n  vec4i: { wgsl: 'const c : vec4i = vec4<i32>();', ok: true },\n  vec2u: { wgsl: 'const c : vec2u = vec2<u32>();', ok: true },\n  vec3u: { wgsl: 'const c : vec3u = vec3<u32>();', ok: true },\n  vec4u: { wgsl: 'const c : vec4u = vec4<u32>();', ok: true },\n  vec2f: { wgsl: 'const c : vec2f = vec2<f32>();', ok: true },\n  vec3f: { wgsl: 'const c : vec3f = vec3<f32>();', ok: true },\n  vec4f: { wgsl: 'const c : vec4f = vec4<f32>();', ok: true },\n  vec2h: { wgsl: 'enable f16;\\nconst c : vec2h = vec2<f16>();', ok: true },\n  vec3h: { wgsl: 'enable f16;\\nconst c : vec3h = vec3<f16>();', ok: true },\n  vec4h: { wgsl: 'enable f16;\\nconst c : vec4h = vec4<f16>();', ok: true },\n\n  // pass\n  trailing_comma: { wgsl: 'alias T = vec3<u32,>;', ok: true },\n  aliased_el_ty: { wgsl: 'alias EL = i32;\\nalias T = vec3<EL>;', ok: true },\n\n  // invalid\n  vec: { wgsl: 'alias T = vec;', ok: false },\n  vec_f32: { wgsl: 'alias T = vec<f32>;', ok: false },\n  vec1_i32: { wgsl: 'alias T = vec1<i32>;', ok: false },\n  vec5_u32: { wgsl: 'alias T = vec5<u32>;', ok: false },\n  missing_el_ty: { wgsl: 'alias T = vec3<>;', ok: false },\n  missing_t_left: { wgsl: 'alias T = vec3 u32>;', ok: false },\n  missing_t_right: { wgsl: 'alias T = vec3<u32;', ok: false },\n  vec_of_array: { wgsl: 'alias T = vec3<array<i32, 2>>;', ok: false },\n  vec_of_runtime_array: { wgsl: 'alias T = vec3<array<i32>>;', ok: false },\n  vec_of_struct: { wgsl: 'struct S { i : i32 }\\nalias T = vec3<S>;', ok: false },\n  vec_of_atomic: { wgsl: 'alias T = vec3<atomic<i32>>;', ok: false },\n  vec_of_matrix: { wgsl: 'alias T = vec3<mat2x2f>;', ok: false },\n  vec_of_vec: { wgsl: 'alias T = vec3<vec2f>;', ok: false },\n  no_bool_shortform: { wgsl: 'const c : vec2b = vec2<bool>();', ok: false },\n};\n\ng.test('vector')\n  .desc('Tests validation of vector types')\n  .params(\n    u => u.combine('case', keysOf(kCases)) //\n  )\n  .fn(t => {\n    const c = kCases[t.params.case];\n    t.expectCompileResult(c.ok, c.wgsl);\n  });\n"],"mappings":"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"}