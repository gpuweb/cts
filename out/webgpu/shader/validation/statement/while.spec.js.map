{"version":3,"file":"while.spec.js","names":["description","makeTestGroup","keysOf","ShaderValidationTest","kTestTypes","g","test","desc","params","u","combine","fn","t","type","code","requires","header","value","pass","expectCompileResult","kTests","true","wgsl","paren_true","true_break","true_discard","true_return","expr","paren_expr","while","block","semicolon","true_lbrace","true_rbrace","lparen_true","rparen_true","true_lparen","true_rparen","lparen_true_lparen","rparen_true_rparen"],"sources":["../../../../../src/webgpu/shader/validation/statement/while.spec.ts"],"sourcesContent":["export const description = `Validation tests for 'while' statements'`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nimport { kTestTypes } from './test_types.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('condition_type')\n  .desc(`Tests that a 'while' condition must be a bool type`)\n  .params(u => u.combine('type', keysOf(kTestTypes)))\n  .fn(t => {\n    const type = kTestTypes[t.params.type];\n    const code = `\n${type.requires ? `enable ${type.requires};` : ''}\n\n${type.header ?? ''}\n\nfn f() -> bool {\n  while (${type.value}) {\n    return true;\n  }\n  return false;\n}\n`;\n\n    const pass = t.params.type === 'bool';\n    t.expectCompileResult(pass, code);\n  });\n\nconst kTests = {\n  true: { wgsl: `while true {}`, pass: true },\n  paren_true: { wgsl: `while (true) {}`, pass: true },\n  true_break: { wgsl: `while true { break; }`, pass: true },\n  true_discard: { wgsl: `while true { discard; }`, pass: true },\n  true_return: { wgsl: `while true { return; }`, pass: true },\n  expr: { wgsl: `while expr {}`, pass: true },\n  paren_expr: { wgsl: `while (expr) {}`, pass: true },\n\n  while: { wgsl: `while`, pass: false },\n  block: { wgsl: `while{}`, pass: false },\n  semicolon: { wgsl: `while;`, pass: false },\n  true_lbrace: { wgsl: `while true {`, pass: false },\n  true_rbrace: { wgsl: `while true }`, pass: false },\n\n  lparen_true: { wgsl: `while (true {}`, pass: false },\n  rparen_true: { wgsl: `while )true {}`, pass: false },\n  true_lparen: { wgsl: `while true( {}`, pass: false },\n  true_rparen: { wgsl: `while true) {}`, pass: false },\n  lparen_true_lparen: { wgsl: `while (true( {}`, pass: false },\n  rparen_true_rparen: { wgsl: `while )true) {}`, pass: false },\n};\n\ng.test('parse')\n  .desc(`Test that 'while' statements are parsed correctly.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const code = `\nfn f() {\n  let expr = true;\n  ${kTests[t.params.test].wgsl}\n}`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI,0CAAyC,CAErE,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,MAAM,QAAQ,wCAAwC;AAC/D,SAASC,oBAAoB,QAAQ,8BAA8B;;AAEnE,SAASC,UAAU,QAAQ,iBAAiB;;AAE5C,OAAO,MAAMC,CAAC,GAAGJ,aAAa,CAACE,oBAAoB,CAAC;;AAEpDE,CAAC,CAACC,IAAI,CAAC,gBAAgB,CAAC;AACrBC,IAAI,CAAE,oDAAmD,CAAC;AAC1DC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAER,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC;AAClDO,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMC,IAAI,GAAGT,UAAU,CAACQ,CAAC,CAACJ,MAAM,CAACK,IAAI,CAAC;EACtC,MAAMC,IAAI,GAAI;AAClB,EAAED,IAAI,CAACE,QAAQ,GAAI,UAASF,IAAI,CAACE,QAAS,GAAE,GAAG,EAAG;AAClD;AACA,EAAEF,IAAI,CAACG,MAAM,IAAI,EAAG;AACpB;AACA;AACA,WAAWH,IAAI,CAACI,KAAM;AACtB;AACA;AACA;AACA;AACA,CAAC;;EAEG,MAAMC,IAAI,GAAGN,CAAC,CAACJ,MAAM,CAACK,IAAI,KAAK,MAAM;EACrCD,CAAC,CAACO,mBAAmB,CAACD,IAAI,EAAEJ,IAAI,CAAC;AACnC,CAAC,CAAC;;AAEJ,MAAMM,MAAM,GAAG;EACbC,IAAI,EAAE,EAAEC,IAAI,EAAG,eAAc,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3CK,UAAU,EAAE,EAAED,IAAI,EAAG,iBAAgB,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;EACnDM,UAAU,EAAE,EAAEF,IAAI,EAAG,uBAAsB,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;EACzDO,YAAY,EAAE,EAAEH,IAAI,EAAG,yBAAwB,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;EAC7DQ,WAAW,EAAE,EAAEJ,IAAI,EAAG,wBAAuB,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3DS,IAAI,EAAE,EAAEL,IAAI,EAAG,eAAc,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3CU,UAAU,EAAE,EAAEN,IAAI,EAAG,iBAAgB,EAAEJ,IAAI,EAAE,IAAI,CAAC,CAAC;;EAEnDW,KAAK,EAAE,EAAEP,IAAI,EAAG,OAAM,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACrCY,KAAK,EAAE,EAAER,IAAI,EAAG,SAAQ,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACvCa,SAAS,EAAE,EAAET,IAAI,EAAG,QAAO,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAC1Cc,WAAW,EAAE,EAAEV,IAAI,EAAG,cAAa,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAClDe,WAAW,EAAE,EAAEX,IAAI,EAAG,cAAa,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;;EAElDgB,WAAW,EAAE,EAAEZ,IAAI,EAAG,gBAAe,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACpDiB,WAAW,EAAE,EAAEb,IAAI,EAAG,gBAAe,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACpDkB,WAAW,EAAE,EAAEd,IAAI,EAAG,gBAAe,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACpDmB,WAAW,EAAE,EAAEf,IAAI,EAAG,gBAAe,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EACpDoB,kBAAkB,EAAE,EAAEhB,IAAI,EAAG,iBAAgB,EAAEJ,IAAI,EAAE,KAAK,CAAC,CAAC;EAC5DqB,kBAAkB,EAAE,EAAEjB,IAAI,EAAG,iBAAgB,EAAEJ,IAAI,EAAE,KAAK,CAAC;AAC7D,CAAC;;AAEDb,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC;AACZC,IAAI,CAAE,oDAAmD,CAAC;AAC1DC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAER,MAAM,CAACkB,MAAM,CAAC,CAAC,CAAC;AAC9CT,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAME,IAAI,GAAI;AAClB;AACA;AACA,IAAIM,MAAM,CAACR,CAAC,CAACJ,MAAM,CAACF,IAAI,CAAC,CAACgB,IAAK;AAC/B,EAAE;EACEV,CAAC,CAACO,mBAAmB,CAACC,MAAM,CAACR,CAAC,CAACJ,MAAM,CAACF,IAAI,CAAC,CAACY,IAAI,EAAEJ,IAAI,CAAC;AACzD,CAAC,CAAC"}