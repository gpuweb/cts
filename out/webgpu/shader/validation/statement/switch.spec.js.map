{"version":3,"file":"switch.spec.js","names":["description","makeTestGroup","keysOf","Type","ShaderValidationTest","kTestTypes","g","test","desc","params","u","combine","fn","t","type","code","requires","header","value","pass","expectCompileResult","cond_type","create","wgsl","case_type","case_a_type","case_b_type","kTests","L_default","L_paren_default","L_case_1_2_default","L_case_1_case_2_default","L_case_1_colon_case_2_colon_default_colon","L_case_1_colon_default_colon","L_case_1_colon_default","L_case_1_default_2","L_case_1_default_case_2","L_case_1_default_colon","L_case_1_default","L_case_2_1_default","L_case_2_case_1_default","L_case_2_default_case_1","L_case_builtin_default","L_case_C1_case_C2_default","L_case_C1_default","L_case_default_1","L_case_default_2_1","L_case_default_2_case_1","L_case_default","L_case_expr_default","L_default_break","L_default_case_1_2","L_default_case_1_break","L_default_case_1_case_2","L_default_case_1_colon_break","L_default_case_2_case_1","L_default_colon_break","L_default_colon","L_no_block","L_empty_block","L_no_default","L_default_default","L_default_block_default_block","L_case_1_case_1_default","L_case_C1_case_C1_default","L_case_C2_case_expr_default","L_default_1","L_default_2_case_1","no_cond","no_cond_no_block","lparen_L","L_lparen","lparen_L_lparen","rparen_L_rparen"],"sources":["../../../../../src/webgpu/shader/validation/statement/switch.spec.ts"],"sourcesContent":["export const description = `Validation tests for 'switch' statements'`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../common/util/data_tables.js';\nimport { Type } from '../../../util/conversion.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nimport { kTestTypes } from './test_types.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('condition_type')\n  .desc(`Tests that a 'switch' condition must be of an integer type`)\n  .params(u => u.combine('type', keysOf(kTestTypes)))\n  .fn(t => {\n    const type = kTestTypes[t.params.type];\n    const code = `\n${type.requires ? `enable ${type.requires};` : ''}\n\n${type.header ?? ''}\n\nfn f() -> bool {\n  switch ${type.value} {\n    case 1: {\n      return true;\n    }\n    default: {\n      return false;\n    }\n  }\n}\n`;\n\n    const pass =\n      t.params.type === 'i32' || t.params.type === 'u32' || t.params.type === 'abstract-int';\n    t.expectCompileResult(pass, code);\n  });\n\ng.test('condition_type_match_case_type')\n  .desc(`Tests that a 'switch' condition must have a common type with its case values`)\n  .params(u =>\n    u\n      .combine('cond_type', ['i32', 'u32', 'abstract-int'] as const)\n      .combine('case_type', ['i32', 'u32', 'abstract-int'] as const)\n  )\n  .fn(t => {\n    const code = `\nfn f() -> bool {\nswitch ${Type[t.params.cond_type].create(1).wgsl()} {\n  case ${Type[t.params.case_type].create(2).wgsl()}: {\n    return true;\n  }\n  default: {\n    return false;\n  }\n}\n}\n`;\n\n    const pass =\n      t.params.cond_type === t.params.case_type ||\n      t.params.cond_type === 'abstract-int' ||\n      t.params.case_type === 'abstract-int';\n    t.expectCompileResult(pass, code);\n  });\n\ng.test('case_types_match')\n  .desc(`Tests that switch case types must have a common type`)\n  .params(u =>\n    u\n      .combine('case_a_type', ['i32', 'u32', 'abstract-int'] as const)\n      .combine('case_b_type', ['i32', 'u32', 'abstract-int'] as const)\n  )\n  .fn(t => {\n    const code = `\nfn f() -> bool {\nswitch 1 {\n  case ${Type[t.params.case_a_type].create(1).wgsl()}: {\n    return true;\n  }\n  case ${Type[t.params.case_b_type].create(2).wgsl()}: {\n    return true;\n  }\n  default: {\n    return false;\n  }\n}\n}\n`;\n\n    const pass =\n      t.params.case_a_type === t.params.case_b_type ||\n      t.params.case_a_type === 'abstract-int' ||\n      t.params.case_b_type === 'abstract-int';\n    t.expectCompileResult(pass, code);\n  });\n\nconst kTests = {\n  L_default: { wgsl: `switch L { default {} }`, pass: true },\n  L_paren_default: { wgsl: `switch (L) { default {} }`, pass: true },\n  L_case_1_2_default: { wgsl: `switch L { case 1, 2 {} default {} }`, pass: true },\n  L_case_1_case_2_default: { wgsl: `switch L { case 1 {} case 2 {} default {} }`, pass: true },\n  L_case_1_colon_case_2_colon_default_colon: {\n    wgsl: `switch L { case 1: {} case 2: {} default: {} }`,\n    pass: true,\n  },\n  L_case_1_colon_default_colon: { wgsl: `switch L { case 1: {} default: {} }`, pass: true },\n  L_case_1_colon_default: { wgsl: `switch L { case 1: {} default {} }`, pass: true },\n  L_case_1_default_2: { wgsl: `switch L { case 1, default, 2 {} }`, pass: true },\n  L_case_1_default_case_2: { wgsl: `switch L { case 1 {} default {} case 2 {} }`, pass: true },\n  L_case_1_default_colon: { wgsl: `switch L { case 1 {} default: {} }`, pass: true },\n  L_case_1_default: { wgsl: `switch L { case 1 {} default {} }`, pass: true },\n  L_case_2_1_default: { wgsl: `switch L { case 2, 1 {} default {} }`, pass: true },\n  L_case_2_case_1_default: { wgsl: `switch L { case 2 {} case 1 {} default {} }`, pass: true },\n  L_case_2_default_case_1: { wgsl: `switch L { case 2 {} default {} case 1 {} }`, pass: true },\n  L_case_builtin_default: { wgsl: `switch L { case max(1,2) {} default {} }`, pass: true },\n  L_case_C1_case_C2_default: { wgsl: `switch L { case C1 {} case C2 {} default {} }`, pass: true },\n  L_case_C1_default: { wgsl: `switch L { case C1 {} default {} }`, pass: true },\n  L_case_default_1: { wgsl: `switch L { case default, 1 {} }`, pass: true },\n  L_case_default_2_1: { wgsl: `switch L { case default, 2, 1 {} }`, pass: true },\n  L_case_default_2_case_1: { wgsl: `switch L { case default, 2 {} case 1 {} }`, pass: true },\n  L_case_default: { wgsl: `switch L { case default {} }`, pass: true },\n  L_case_expr_default: { wgsl: `switch L { case 1+1 {} default {} }`, pass: true },\n  L_default_break: { wgsl: `switch L { default { break; } }`, pass: true },\n  L_default_case_1_2: { wgsl: `switch L { default {} case 1, 2 {} }`, pass: true },\n  L_default_case_1_break: { wgsl: `switch L { default {} case 1 { break; } }`, pass: true },\n  L_default_case_1_case_2: { wgsl: `switch L { default {} case 1 {} case 2 {} }`, pass: true },\n  L_default_case_1_colon_break: { wgsl: `switch L { default {} case 1: { break; } }`, pass: true },\n  L_default_case_2_case_1: { wgsl: `switch L { default {} case 2 {} case 1 {} }`, pass: true },\n  L_default_colon_break: { wgsl: `switch L { default: { break; } }`, pass: true },\n  L_default_colon: { wgsl: `switch L { default: {} }`, pass: true },\n\n  L_no_block: { wgsl: `switch L`, pass: false },\n  L_empty_block: { wgsl: `switch L {}`, pass: false },\n  L_no_default: { wgsl: `switch L { case 1 {} }`, pass: false },\n  L_default_default: { wgsl: `switch L { default, default {} }`, pass: false },\n  L_default_block_default_block: { wgsl: `switch L { default {} default {} }`, pass: false },\n  L_case_1_case_1_default: { wgsl: `switch L { case 1 {} case 1 {} default {} }`, pass: false },\n  L_case_C1_case_C1_default: { wgsl: `switch L { case C1 {} case C1 {} default {} }`, pass: false },\n  L_case_C2_case_expr_default: {\n    wgsl: `switch L { case C2 {} case 1+1 {} default {} }`,\n    pass: false,\n  },\n  L_default_1: { wgsl: `switch L { default, 1 {} }`, pass: false },\n  L_default_2_case_1: { wgsl: `switch L { default, 2 {} case 1 {} }`, pass: false },\n\n  no_cond: { wgsl: `switch { default{} }`, pass: false },\n  no_cond_no_block: { wgsl: `switch;`, pass: false },\n  lparen_L: { wgsl: `switch (L { default {}}`, pass: false },\n  L_lparen: { wgsl: `switch L) { default {}}`, pass: false },\n  lparen_L_lparen: { wgsl: `switch )L) { default {}}`, pass: false },\n  rparen_L_rparen: { wgsl: `switch (L( { default {}}`, pass: false },\n};\n\ng.test('parse')\n  .desc(`Test that 'switch' statements are parsed correctly.`)\n  .params(u => u.combine('test', keysOf(kTests)))\n  .fn(t => {\n    const code = `\nfn f() {\n  let L = 1;\n  const C1 = 1;\n  const C2 = 2;\n  ${kTests[t.params.test].wgsl}\n}`;\n    t.expectCompileResult(kTests[t.params.test].pass, code);\n  });\n"],"mappings":"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"}