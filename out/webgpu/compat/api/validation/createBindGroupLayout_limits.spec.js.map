{"version":3,"file":"createBindGroupLayout_limits.spec.js","names":["description","makeTestGroup","range","RequiredLimitsTestMixin","CompatibilityTest","g","getRequiredLimits","adapter","maxStorageBuffersInFragmentStage","limits","maxStorageBuffersInVertexStage","maxStorageBuffersPerShaderStage","maxStorageTexturesInFragmentStage","maxStorageTexturesInVertexStage","maxStorageTexturesPerShaderStage","key","test","desc","params","u","combine","beginSubcases","fn","t","limit","extra","device","isBuffer","includes","inStageLimit","perStageLimitName","perStageLimit","debug","skipIf","visibility","GPUShaderStage","FRAGMENT","VERTEX","expectFailure","expectValidationError","createBindGroupLayout","entries","i","binding","buffer","type","storageTexture","format","access"],"sources":["../../../../../src/webgpu/compat/api/validation/createBindGroupLayout_limits.spec.ts"],"sourcesContent":["export const description = `\nTests that, in compat mode, you can not create a bind group layout with with\nmore than the max in stage limit even if the per stage limit is higher.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { range } from '../../../../common/util/util.js';\nimport { RequiredLimitsTestMixin } from '../../../gpu_test.js';\nimport { CompatibilityTest } from '../../compatibility_test.js';\n\nexport const g = makeTestGroup(\n  RequiredLimitsTestMixin(CompatibilityTest, {\n    getRequiredLimits(adapter: GPUAdapter) {\n      return {\n        maxStorageBuffersInFragmentStage: adapter.limits.maxStorageBuffersInFragmentStage! / 2,\n        maxStorageBuffersInVertexStage: adapter.limits.maxStorageBuffersInVertexStage! / 2,\n        maxStorageBuffersPerShaderStage: adapter.limits.maxStorageBuffersPerShaderStage,\n        maxStorageTexturesInFragmentStage: adapter.limits.maxStorageTexturesInFragmentStage! / 2,\n        maxStorageTexturesInVertexStage: adapter.limits.maxStorageTexturesInVertexStage! / 2,\n        maxStorageTexturesPerShaderStage: adapter.limits.maxStorageTexturesPerShaderStage,\n      };\n    },\n    key() {\n      return `\n      maxStorageBuffersInFragmentStage/2,\n      maxStorageBuffersInVertexStage/2,\n      maxStorageTexturesInFragmentStage/2,\n      maxStorageTexturesInVertexStage/2,\n      maxStorageBuffersPerShaderStage\n      maxStorageTexturesPerShaderStage\n    `;\n    },\n  })\n);\n\ng.test('maxStorageBuffersTexturesInVertexFragmentStage')\n  .desc(\n    `\n      Tests that you can't use more than maxStorage(Buffers/Textures)In(Fragment/Vertex)Stage when\n      the limit is less than maxStorage(Buffers/Textures)PerShaderStage\n    `\n  )\n  .params(u =>\n    u\n      .combine('limit', [\n        'maxStorageBuffersInFragmentStage',\n        'maxStorageBuffersInVertexStage',\n        'maxStorageTexturesInFragmentStage',\n        'maxStorageTexturesInVertexStage',\n      ] as const)\n      .beginSubcases()\n      .combine('extra', [0, 1] as const)\n  )\n  .fn(t => {\n    const { limit, extra } = t.params;\n    const { device } = t;\n\n    const isBuffer = limit.includes('Buffers');\n    const inStageLimit = device.limits[limit]!;\n    const perStageLimitName = isBuffer\n      ? 'maxStorageBuffersPerShaderStage'\n      : 'maxStorageTexturesPerShaderStage';\n    const perStageLimit = device.limits[perStageLimitName];\n\n    t.debug(`${limit}(${inStageLimit}), ${perStageLimitName}(${perStageLimit})`);\n\n    t.skipIf(inStageLimit === 0, `${limit} is 0`);\n    t.skipIf(\n      !(inStageLimit < perStageLimit),\n      `${limit}(${inStageLimit}) is not less than ${perStageLimitName}(${perStageLimit})`\n    );\n\n    const visibility = limit.includes('Fragment') ? GPUShaderStage.FRAGMENT : GPUShaderStage.VERTEX;\n\n    const expectFailure = extra > 0;\n    t.expectValidationError(() => {\n      device.createBindGroupLayout({\n        entries: range(inStageLimit + extra, i => ({\n          binding: i,\n          visibility,\n          ...(isBuffer\n            ? { buffer: { type: 'read-only-storage' } }\n            : { storageTexture: { format: 'r32float', access: 'read-only' } }),\n        })),\n      });\n    }, expectFailure);\n  });\n"],"mappings":"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"}