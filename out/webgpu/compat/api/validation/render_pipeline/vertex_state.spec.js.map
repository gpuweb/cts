{"version":3,"file":"vertex_state.spec.js","names":["description","makeTestGroup","range","vtu","CompatibilityTest","g","test","desc","params","u","combine","fn","t","useVertexIndex","useInstanceIndex","numAttribsToReserve","isAsync","numAttribs","device","limits","maxVertexAttributes","numBuiltinsUsed","isValidInCompat","isValidInCore","isValid","isCompatibility","inputs","i","outputs","push","module","createShaderModule","code","join","pipelineDescriptor","layout","vertex","entryPoint","buffers","arrayStride","attributes","shaderLocation","format","offset","fragment","targets","doCreateRenderPipelineTest"],"sources":["../../../../../../src/webgpu/compat/api/validation/render_pipeline/vertex_state.spec.ts"],"sourcesContent":["export const description = `\nTests limitations of createRenderPipeline related to vertex state in compat mode.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { range } from '../../../../../common/util/util.js';\nimport * as vtu from '../../../../api/validation/validation_test_utils.js';\nimport { CompatibilityTest } from '../../../compatibility_test.js';\n\nexport const g = makeTestGroup(CompatibilityTest);\n\ng.test('maxVertexAttributesVertexIndexInstanceIndex')\n  .desc(\n    `\nTests @builtin(vertex_index) and @builtin(instance_index) each count as an attribute.\n\n- Test that you can use maxVertexAttributes\n- Test that you can not use maxVertexAttributes and @builtin(vertex_index)\n- Test that you can not use maxVertexAttributes and @builtin(instance_index)\n- Test that you can use maxVertexAttributes - 1 and @builtin(vertex_index)\n- Test that you can use maxVertexAttributes - 1 and @builtin(instance_index)\n- Test that you can not use maxVertexAttributes - 1 and both @builtin(vertex_index) and @builtin(instance_index)\n- Test that you can use maxVertexAttributes - 2 and both @builtin(vertex_index) and @builtin(instance_index)\n    `\n  )\n  .params(u =>\n    u\n      .combine('useVertexIndex', [false, true] as const)\n      .combine('useInstanceIndex', [false, true] as const)\n      .combine('numAttribsToReserve', [0, 1, 2] as const)\n      .combine('isAsync', [false, true] as const)\n  )\n  .fn(t => {\n    const { useVertexIndex, useInstanceIndex, numAttribsToReserve, isAsync } = t.params;\n    const numAttribs = t.device.limits.maxVertexAttributes - numAttribsToReserve;\n\n    const numBuiltinsUsed = (useVertexIndex ? 1 : 0) + (useInstanceIndex ? 1 : 0);\n    const isValidInCompat = numAttribs + numBuiltinsUsed <= t.device.limits.maxVertexAttributes;\n    const isValidInCore = numAttribs <= t.device.limits.maxVertexAttributes;\n    const isValid = t.isCompatibility ? isValidInCompat : isValidInCore;\n\n    const inputs = range(numAttribs, i => `@location(${i}) v${i}: vec4f`);\n    const outputs = range(numAttribs, i => `v${i}`);\n\n    if (useVertexIndex) {\n      inputs.push('@builtin(vertex_index) vNdx: u32');\n      outputs.push('vec4f(f32(vNdx))');\n    }\n\n    if (useInstanceIndex) {\n      inputs.push('@builtin(instance_index) iNdx: u32');\n      outputs.push('vec4f(f32(iNdx))');\n    }\n\n    const module = t.device.createShaderModule({\n      code: `\n        @fragment fn fs() -> @location(0) vec4f {\n            return vec4f(1);\n        }\n        @vertex fn vs(${inputs.join(', ')}) -> @builtin(position) vec4f {\n            return ${outputs.join(' + ')};\n        }\n      `,\n    });\n\n    const pipelineDescriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'vs',\n        buffers: [\n          {\n            arrayStride: 16,\n            attributes: range(numAttribs, i => ({\n              shaderLocation: i,\n              format: 'float32x4',\n              offset: 0,\n            })),\n          },\n        ],\n      },\n      fragment: {\n        module,\n        entryPoint: 'fs',\n        targets: [\n          {\n            format: 'rgba8unorm',\n          },\n        ],\n      },\n    };\n\n    vtu.doCreateRenderPipelineTest(t, isAsync, isValid, pipelineDescriptor);\n  });\n"],"mappings":"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"}