{"version":3,"file":"depth_stencil_state.spec.js","names":["description","makeTestGroup","vtu","CompatibilityTest","g","test","desc","params","u","combine","undefined","fn","t","depthBiasClamp","async","module","device","createShaderModule","code","pipelineDescriptor","layout","vertex","entryPoint","fragment","targets","format","depthStencil","depthWriteEnabled","depthCompare","success","isCompatibility","doCreateRenderPipelineTest"],"sources":["../../../../../../src/webgpu/compat/api/validation/render_pipeline/depth_stencil_state.spec.ts"],"sourcesContent":["export const description = `\nTests that depthBiasClamp must be zero in compat mode.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport * as vtu from '../../../../api/validation/validation_test_utils.js';\nimport { CompatibilityTest } from '../../../compatibility_test.js';\n\nexport const g = makeTestGroup(CompatibilityTest);\n\ng.test('depthBiasClamp')\n  .desc('Tests that depthBiasClamp must be zero in compat mode.')\n  .params(u =>\n    u //\n      .combine('depthBiasClamp', [undefined, 0, 0.1, 1])\n      .combine('async', [false, true] as const)\n  )\n  .fn(t => {\n    const { depthBiasClamp, async } = t.params;\n\n    const module = t.device.createShaderModule({\n      code: `\n        @vertex fn vs() -> @builtin(position) vec4f {\n            return vec4f(0);\n        }\n\n        @fragment fn fs() -> @location(0) vec4f {\n            return vec4f(0);\n        }\n      `,\n    });\n\n    const pipelineDescriptor: GPURenderPipelineDescriptor = {\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'vs',\n      },\n      fragment: {\n        module,\n        entryPoint: 'fs',\n        targets: [{ format: 'rgba8unorm' }],\n      },\n      depthStencil: {\n        format: 'depth24plus',\n        depthWriteEnabled: true,\n        depthCompare: 'always',\n        ...(depthBiasClamp !== undefined && { depthBiasClamp }),\n      },\n    };\n\n    const success = !t.isCompatibility || !depthBiasClamp;\n    vtu.doCreateRenderPipelineTest(t, async, success, pipelineDescriptor);\n  });\n"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAAC,CAED,SAASC,aAAa,QAAQ,+CAA+C;AAC7E,OAAO,KAAKC,GAAG,MAAM,qDAAqD;AAC1E,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACE,iBAAiB,CAAC;;AAEjDC,CAAC,CAACC,IAAI,CAAC,gBAAgB,CAAC;AACrBC,IAAI,CAAC,wDAAwD,CAAC;AAC9DC,MAAM,CAAC,CAAAC,CAAC;AACPA,CAAC,CAAC;AAAA,CACCC,OAAO,CAAC,gBAAgB,EAAE,CAACC,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACjDD,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAU;AAC5C,CAAC;AACAE,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAM,EAAEC,cAAc,EAAEC,KAAK,CAAC,CAAC,GAAGF,CAAC,CAACL,MAAM;;EAE1C,MAAMQ,MAAM,GAAGH,CAAC,CAACI,MAAM,CAACC,kBAAkB,CAAC;IACzCC,IAAI,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,CAAC;;EAEF,MAAMC,kBAA+C,GAAG;IACtDC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACNN,MAAM;MACNO,UAAU,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACRR,MAAM;MACNO,UAAU,EAAE,IAAI;MAChBE,OAAO,EAAE,CAAC,EAAEC,MAAM,EAAE,YAAY,CAAC,CAAC;IACpC,CAAC;IACDC,YAAY,EAAE;MACZD,MAAM,EAAE,aAAa;MACrBE,iBAAiB,EAAE,IAAI;MACvBC,YAAY,EAAE,QAAQ;MACtB,IAAIf,cAAc,KAAKH,SAAS,IAAI,EAAEG,cAAc,CAAC,CAAC;IACxD;EACF,CAAC;;EAED,MAAMgB,OAAO,GAAG,CAACjB,CAAC,CAACkB,eAAe,IAAI,CAACjB,cAAc;EACrDX,GAAG,CAAC6B,0BAA0B,CAACnB,CAAC,EAAEE,KAAK,EAAEe,OAAO,EAAEV,kBAAkB,CAAC;AACvE,CAAC,CAAC"}