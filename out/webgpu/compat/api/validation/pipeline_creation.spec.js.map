{"version":3,"file":"pipeline_creation.spec.js","names":["description","makeTestGroup","kShortShaderStages","kShortShaderStageToShaderStage","CompatibilityTest","g","test","desc","params","u","combineWithParams","sampleWGSL","textureType","combine","filter","t","startsWith","stage","fn","shortStage","async","usageWGSL","module","device","createShaderModule","code","success","isCompatibility","doCreateComputePipelineTest","layout","compute","doCreateRenderPipelineTest","vertex","fragment","targets","format","numCombosToNumber","maxCombos","numCombos","m","exec","parseInt","numNonSampledToNumber","maxTextures","numNonSampled","pass","numExternal","useSame","map","p","stages","flat","maxSampledTexturesPerShaderStage","maxSamplersPerShaderStage","limits","maxTexturesPerStage","Math","min","numCombinations","numNonSampledTextures","textureDeclarations","samplerDeclarations","usages","bindGroupLayoutEntries","numStages","visibilityByStage","GPUShaderStage","COMPUTE","VERTEX","FRAGMENT","addTextureDeclaration","binding","push","visibility","texture","addSamplerDeclaration","sampler","addExternalTextureDeclaration","id","externalTexture","count","s","length","et","eBinding","sBinding","join","includes","createPipelineLayout","bindGroupLayouts","entries","createBindGroupLayout"],"sources":["../../../../../src/webgpu/compat/api/validation/pipeline_creation.spec.ts"],"sourcesContent":["export const description = `\nTests that createComputePipeline(async), and createRenderPipeline(async)\nreject pipelines that are invalid in compat mode\n\n- test that depth textures can not be used with non-comparison samplers\n\nTODO:\n- test that a shader that has more than min(maxSamplersPerShaderStage, maxSampledTexturesPerShaderStage)\n  texture+sampler combinations generates a validation error.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport {\n  kShortShaderStages,\n  kShortShaderStageToShaderStage,\n} from '../../../shader/execution/expression/call/builtin/texture_utils.js';\nimport { CompatibilityTest } from '../../compatibility_test.js';\n\nexport const g = makeTestGroup(CompatibilityTest);\n\ng.test('depth_textures')\n  .desc('Tests that depth textures can not be used with non-comparison samplers in compat mode.')\n  .params(u =>\n    u //\n      .combineWithParams([\n        {\n          sampleWGSL: 'textureSample(t, s, vec2f(0))', // should pass\n          textureType: 'texture_2d<f32>',\n        },\n        {\n          sampleWGSL: 'textureSample(t, s, vec2f(0))',\n          textureType: 'texture_depth_2d',\n        },\n        {\n          sampleWGSL: 'textureSample(t, s, vec3f(0))',\n          textureType: 'texture_depth_cube',\n        },\n        {\n          sampleWGSL: 'textureSample(t, s, vec2f(0), 0)',\n          textureType: 'texture_depth_2d_array',\n        },\n        {\n          sampleWGSL: 'textureSample(t, s, vec2f(0), vec2i(0, 0))',\n          textureType: 'texture_depth_2d',\n        },\n        {\n          sampleWGSL: 'textureSample(t, s, vec2f(0), 0, vec2i(0, 0))',\n          textureType: 'texture_depth_2d_array',\n        },\n        {\n          sampleWGSL: 'textureSampleLevel(t, s, vec2f(0), 0)',\n          textureType: 'texture_depth_2d',\n        },\n        {\n          sampleWGSL: 'textureSampleLevel(t, s, vec3f(0), 0)',\n          textureType: 'texture_depth_cube',\n        },\n        {\n          sampleWGSL: 'textureSampleLevel(t, s, vec2f(0), 0, 0)',\n          textureType: 'texture_depth_2d_array',\n        },\n        {\n          sampleWGSL: 'textureSampleLevel(t, s, vec2f(0), 0, vec2i(0, 0))',\n          textureType: 'texture_depth_2d',\n        },\n        {\n          sampleWGSL: 'textureSampleLevel(t, s, vec2f(0), 0, 0, vec2i(0, 0))',\n          textureType: 'texture_depth_2d_array',\n        },\n        {\n          sampleWGSL: 'textureGather(t, s, vec2f(0))',\n          textureType: 'texture_depth_2d',\n        },\n        {\n          sampleWGSL: 'textureGather(t, s, vec3f(0))',\n          textureType: 'texture_depth_cube',\n        },\n        {\n          sampleWGSL: 'textureGather(t, s, vec2f(0), 0)',\n          textureType: 'texture_depth_2d_array',\n        },\n        {\n          sampleWGSL: 'textureGather(t, s, vec2f(0), vec2i(0, 0))',\n          textureType: 'texture_depth_2d',\n        },\n        {\n          sampleWGSL: 'textureGather(t, s, vec2f(0), 0, vec2i(0, 0))',\n          textureType: 'texture_depth_2d_array',\n        },\n      ])\n      .combine('stage', kShortShaderStages)\n      .filter(t => t.sampleWGSL.startsWith('textureGather') || t.stage === 'f')\n      .combine('async', [false, true] as const)\n  )\n  .fn(t => {\n    const { sampleWGSL, textureType, stage: shortStage, async } = t.params;\n    const stage = kShortShaderStageToShaderStage[shortStage];\n\n    const usageWGSL = `_ = ${sampleWGSL};`;\n    const module = t.device.createShaderModule({\n      code: `\n        @group(0) @binding(0) var t: ${textureType};\n        @group(1) @binding(0) var s: sampler;\n\n        // make sure it's fine such a combination exists but it's not used.\n        fn unused() {\n          ${usageWGSL};\n        }\n\n        @vertex fn vs() -> @builtin(position) vec4f {\n            ${stage === 'vertex' ? usageWGSL : ''}\n            return vec4f(0);\n        }\n\n        @fragment fn fs() -> @location(0) vec4f {\n            ${stage === 'fragment' ? usageWGSL : ''}\n            return vec4f(0);\n        }\n\n        @compute @workgroup_size(1) fn cs() {\n            ${stage === 'compute' ? usageWGSL : ''};\n        }\n      `,\n    });\n\n    const success = !t.isCompatibility || textureType === 'texture_2d<f32>';\n    switch (stage) {\n      case 'compute':\n        t.doCreateComputePipelineTest(async, success, {\n          layout: 'auto',\n          compute: {\n            module,\n          },\n        });\n        break;\n      case 'fragment':\n      case 'vertex':\n        t.doCreateRenderPipelineTest(async, success, {\n          layout: 'auto',\n          vertex: {\n            module,\n          },\n          fragment: {\n            module,\n            targets: [{ format: 'rgba8unorm' }],\n          },\n        });\n        break;\n    }\n  });\n\nfunction numCombosToNumber(maxCombos: number, numCombos: string): number {\n  const m = /^max([+-]?)(\\d+)$/.exec(numCombos);\n  if (m) {\n    if (m[1] === '+') {\n      return maxCombos + parseInt(m[2]);\n    } else if (m[1] === '-') {\n      return maxCombos - parseInt(m[2]);\n    } else {\n      return maxCombos;\n    }\n  }\n  return parseInt(numCombos);\n}\n\nfunction numNonSampledToNumber(maxTextures: number, numNonSampled: '0' | '1' | 'max') {\n  switch (numNonSampled) {\n    case '0':\n      return 0;\n    case '1':\n      return 1;\n    case 'max':\n      return maxTextures;\n  }\n}\n\ng.test('texture_sampler_combos')\n  .desc(\n    `\nTest that you can not use more texture+sampler combos than\nmin(maxSamplersPerShaderStage, maxSampledTexturesPerShaderStage)\nin compatibility mode.\n\nThe spec, copy and pasted here:\n\nmaxCombinationsPerStage = min(maxSampledTexturesPerShaderStage, maxSamplersPerShaderStage)\nfor each stage of the pipeline:\n  sum = 0\n  for each texture binding in the pipeline layout which is visible to that stage:\n    sum += max(1, number of texture sampler combos for that texture binding)\n  for each external texture binding in the pipeline layout which is visible to that stage:\n    sum += 1 // for LUT texture + LUT sampler\n    sum += 3 * max(1, number of external_texture sampler combos) // for Y+U+V\n  if sum > maxCombinationsPerStage\n    generate a validation error.\n\n`\n  )\n  .params(u =>\n    // prettier-ignore\n    u\n      .combineWithParams([\n        ...([\n          { pass: true,  numCombos: 'max',   numNonSampled: '1',   numExternal: 0, useSame: false },\n          { pass: false, numCombos: 'max+1', numNonSampled: '1',   numExternal: 0, useSame: false },\n          { pass: true,  numCombos: '1',     numNonSampled: 'max', numExternal: 0, useSame: false },\n          { pass: false, numCombos: '2',     numNonSampled: 'max', numExternal: 0, useSame: false },\n          { pass: true,  numCombos: 'max-4', numNonSampled: '0',   numExternal: 1, useSame: false },\n          { pass: false, numCombos: 'max-3', numNonSampled: '0',   numExternal: 1, useSame: false },\n          { pass: true,  numCombos: 'max-8', numNonSampled: '0',   numExternal: 2, useSame: false },\n          { pass: false, numCombos: 'max-7', numNonSampled: '0',   numExternal: 2, useSame: false },\n          { pass: true,  numCombos: 'max-7', numNonSampled: '0',   numExternal: 2, useSame: true },\n          { pass: false, numCombos: 'max-6', numNonSampled: '0',   numExternal: 2, useSame: true },\n        ] as const).map(p => ([{ ...p, stages: 'vertex' }, { ...p, stages: 'fragment' }, { ...p, stages: 'compute' }] as const)).flat(),\n        {   pass: true,  numCombos: 'max',   numNonSampled: '1',   numExternal: 0, useSame: false, stages: 'vertex,fragment' },\n      ] as const)\n      .combine('async', [false, true] as const)\n  )\n  .fn(t => {\n    const { device } = t;\n    const { pass, stages, numCombos, numNonSampled, numExternal, useSame, async } = t.params;\n    const { maxSampledTexturesPerShaderStage, maxSamplersPerShaderStage } = device.limits;\n\n    const maxTexturesPerStage = maxSampledTexturesPerShaderStage - numExternal * 3;\n    const maxCombos = Math.min(maxSampledTexturesPerShaderStage, maxSamplersPerShaderStage);\n    const numCombinations = numCombosToNumber(maxCombos, numCombos);\n    const numNonSampledTextures = numNonSampledToNumber(\n      maxSampledTexturesPerShaderStage,\n      numNonSampled\n    );\n\n    const textureDeclarations: string[][] = [[], []];\n    const samplerDeclarations: string[][] = [[], []];\n    const usages: string[][] = [[], []];\n    const bindGroupLayoutEntries: GPUBindGroupLayoutEntry[][] = [[], [], [], []];\n    const numStages = stages === 'compute' ? 1 : 2;\n    const visibilityByStage =\n      stages === 'compute'\n        ? [GPUShaderStage.COMPUTE]\n        : [GPUShaderStage.VERTEX, GPUShaderStage.FRAGMENT];\n\n    const addTextureDeclaration = (stage: number, binding: number) => {\n      textureDeclarations[stage].push(\n        `@group(${stage * 2}) @binding(${binding}) var t${stage}_${binding}: texture_2d<f32>;`\n      );\n      bindGroupLayoutEntries[stage * 2].push({\n        binding,\n        visibility: visibilityByStage[stage],\n        texture: {},\n      });\n    };\n\n    const addSamplerDeclaration = (stage: number, binding: number) => {\n      samplerDeclarations[stage].push(\n        `@group(${stage * 2 + 1}) @binding(${binding}) var s${stage}_${binding}: sampler;`\n      );\n      bindGroupLayoutEntries[stage * 2 + 1].push({\n        binding,\n        visibility: visibilityByStage[stage],\n        sampler: {},\n      });\n    };\n\n    const addExternalTextureDeclaration = (stage: number, binding: number, id: number) => {\n      textureDeclarations[stage].push(\n        `@group(${stage * 2}) @binding(${binding}) var e${stage}_${id}: texture_external;`\n      );\n      bindGroupLayoutEntries[stage * 2].push({\n        binding,\n        visibility: visibilityByStage[stage],\n        externalTexture: {},\n      });\n    };\n\n    for (let stage = 0; stage < numStages; ++stage) {\n      let count = 0;\n      for (let t = 0; count < numCombinations && t < maxTexturesPerStage; ++t) {\n        addTextureDeclaration(stage, t);\n        for (let s = 0; count < numCombinations && s < maxSamplersPerShaderStage; ++s) {\n          if (t === 0) {\n            addSamplerDeclaration(stage, s);\n          }\n          usages[stage].push(\n            `  c += textureSampleLevel(t${stage}_${t}, s${stage}_${s}, vec2f(0), 0);`\n          );\n          ++count;\n        }\n      }\n\n      for (let t = 0; t < numNonSampledTextures; ++t) {\n        if (t >= textureDeclarations[stage].length) {\n          addTextureDeclaration(stage, t);\n        }\n        usages[stage].push(`  c += textureLoad(t${stage}_${t}, vec2u(0), 0);`);\n      }\n\n      for (let t = 0; t < numExternal; ++t) {\n        if (t === 0 || !useSame) {\n          const et = textureDeclarations[stage].length + t;\n          addExternalTextureDeclaration(stage, et, t);\n        }\n        const eBinding = useSame ? 0 : t;\n        const sBinding = useSame ? t : 0;\n        usages[stage].push(\n          `  c += textureSampleBaseClampToEdge(e${stage}_${eBinding}, s${stage}_${sBinding}, vec2f(0));`\n        );\n      }\n    }\n\n    const code = `\n${textureDeclarations[0].join('\\n')}\n${textureDeclarations[1].join('\\n')}\n\n${samplerDeclarations[0].join('\\n')}\n${samplerDeclarations[1].join('\\n')}\n\nfn usage0() -> vec4f {\n  var c: vec4f;\n  ${usages[0].join('\\n')}\n  return c;\n}\n\nfn usage1() -> vec4f {\n  var c: vec4f;\n  ${usages[1].join('\\n')}\n  return c;\n}\n\n@vertex fn vs() -> @builtin(position) vec4f {\n  _ = ${stages.includes('vertex') ? 'usage0()' : 'vec4f(0)'};\n  return vec4f(0);\n}\n\n@fragment fn fs() -> @location(0) vec4f {\n  return ${stages.includes('fragment') ? 'usage1()' : 'vec4f(0)'};\n}\n\n@compute @workgroup_size(1) fn cs() {\n  _ = usage0();\n}\n\n`;\n\n    // MAINTENANCE_TODO: remove this. It's only needed because of a bug in dawn\n    // with auto layouts.\n    const layout = device.createPipelineLayout({\n      bindGroupLayouts: bindGroupLayoutEntries.map(entries =>\n        device.createBindGroupLayout({ entries })\n      ),\n    });\n\n    const module = device.createShaderModule({ code });\n    if (stages === 'compute') {\n      t.doCreateComputePipelineTest(async, pass || !t.isCompatibility, {\n        layout,\n        compute: { module },\n      });\n    } else {\n      t.doCreateRenderPipelineTest(async, pass || !t.isCompatibility, {\n        layout,\n        vertex: { module },\n        fragment: { module, targets: [{ format: 'rgba8unorm' }] },\n      });\n    }\n  });\n"],"mappings":"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"}