{"version":3,"file":"pipeline_bind_group_compat.spec.js","names":["description","makeTestGroup","keysOf","kRenderEncodeTypes","CompatibilityTest","kTextureTypes","getTextureTypeWGSL","textureType","getRenderShaderModule","device","bindConfig","textureTypeWGSL","secondGroup","secondBinding","createShaderModule","code","getComputeShaderModule","kBindCases","fn","pipeline","encoder","texture","bindGroup","createBindGroup","layout","getBindGroupLayout","entries","binding","resource","createView","baseMipLevel","mipLevelCount","setBindGroup","shouldSucceed","bindGroup0","bindGroup1","badBindGroup","goodBindGroup","createAndBindTwoBindGroupsWithDifferentViewsOfSameTexture","kBindCaseNames","kDrawUseCases","draw","_t","drawIndexed","t","indexBuffer","makeBufferWithContents","Uint16Array","GPUBufferUsage","INDEX","setIndexBuffer","drawIndirect","indirectBuffer","Uint32Array","INDIRECT","drawIndexedIndirect","kDrawCaseNames","kDispatchUseCases","dispatchWorkgroups","dispatchWorkgroupsIndirect","kDispatchCaseNames","createResourcesForRenderPassTest","createTextureTracked","size","format","usage","GPUTextureUsage","STORAGE_BINDING","TEXTURE_BINDING","module","createRenderPipeline","vertex","entryPoint","fragment","targets","createResourcesForComputePassTest","createComputePipeline","compute","g","test","desc","params","u","combine","filter","p","bindCase","encoderType","useCase","skipIf","isCompatibility","limits","maxStorageBuffersInFragmentStage","validateFinish","createEncoder","setPipeline"],"sources":["../../../../../../../src/webgpu/compat/api/validation/encoding/programmable/pipeline_bind_group_compat.spec.ts"],"sourcesContent":["export const description = `\nTests limitations of bind group usage in a pipeline in compat mode.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { keysOf } from '../../../../../../common/util/data_tables.js';\nimport { kRenderEncodeTypes } from '../../../../../util/command_buffer_maker.js';\nimport { CompatibilityTest } from '../../../../compatibility_test.js';\n\nconst kTextureTypes = ['regular', 'storage'];\ntype TextureType = (typeof kTextureTypes)[number];\n\nfunction getTextureTypeWGSL(textureType: TextureType) {\n  return textureType === 'storage' ? 'texture_storage_2d<rgba8unorm, write>' : 'texture_2d<f32>';\n}\n\ntype kBindConfigs = ['one bindgroup', 'two bindgroups'];\ntype BindConfig = kBindConfigs[number];\n\n/**\n * Gets the WGSL needed for testing a render pipeline using texture_2d or texture_storage_2d\n * and either 2 bindgroups or 1\n */\nfunction getRenderShaderModule(\n  device: GPUDevice,\n  textureType: TextureType,\n  bindConfig: BindConfig\n) {\n  const textureTypeWGSL = getTextureTypeWGSL(textureType);\n  const secondGroup = bindConfig === 'one bindgroup' ? 0 : 1;\n  const secondBinding = secondGroup === 0 ? 1 : 0;\n  return device.createShaderModule({\n    code: `\n      @vertex\n      fn vs(@builtin(vertex_index) VertexIndex : u32) -> @builtin(position) vec4f {\n        var pos = array(\n          vec4f(-1,  3, 0, 1),\n          vec4f( 3, -1, 0, 1),\n          vec4f(-1, -1, 0, 1));\n        return pos[VertexIndex];\n      }\n\n      @group(0) @binding(0) var tex0 : ${textureTypeWGSL};\n      @group(${secondGroup}) @binding(${secondBinding}) var tex1 : ${textureTypeWGSL};\n\n      @fragment\n      fn fs(@builtin(position) pos: vec4f) -> @location(0) vec4f {\n        _ = tex0;\n        _ = tex1;\n        return vec4f(0);\n      }\n  `,\n  });\n}\n\n/**\n * Gets the WGSL needed for testing a compute pipeline using texture_2d or texture_storage_2d\n * and either 2 bindgroups or 1\n */\nfunction getComputeShaderModule(\n  device: GPUDevice,\n  textureType: TextureType,\n  bindConfig: BindConfig\n) {\n  const textureTypeWGSL = getTextureTypeWGSL(textureType);\n  const secondGroup = bindConfig === 'one bindgroup' ? 0 : 1;\n  const secondBinding = secondGroup === 0 ? 1 : 0;\n  return device.createShaderModule({\n    code: `\n      @group(0) @binding(0) var tex0 : ${textureTypeWGSL};\n      @group(${secondGroup}) @binding(${secondBinding}) var tex1 : ${textureTypeWGSL};\n\n      @compute @workgroup_size(1)\n      fn cs() {\n        _ = tex0;\n        _ = tex1;\n      }\n    `,\n  });\n}\n\ntype GPUEncoderType = GPURenderPassEncoder | GPUComputePassEncoder | GPURenderBundleEncoder;\n\nconst kBindCases: {\n  [key: string]: {\n    bindConfig: BindConfig;\n    fn: (\n      device: GPUDevice,\n      pipeline: GPUPipelineBase,\n      encoder: GPUEncoderType,\n      texture: GPUTexture\n    ) => {\n      shouldSucceed: boolean;\n    };\n  };\n} = {\n  'incompatible views in the same bindGroup': {\n    bindConfig: 'one bindgroup',\n    fn(device: GPUDevice, pipeline: GPUPipelineBase, encoder: GPUEncoderType, texture: GPUTexture) {\n      const bindGroup = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(0),\n        entries: [\n          { binding: 0, resource: texture.createView({ baseMipLevel: 0, mipLevelCount: 1 }) },\n          { binding: 1, resource: texture.createView({ baseMipLevel: 1, mipLevelCount: 1 }) },\n        ],\n      });\n      encoder.setBindGroup(0, bindGroup);\n      return { shouldSucceed: false };\n    },\n  },\n  'incompatible views in different bindGroups': {\n    bindConfig: 'two bindgroups',\n    fn(device: GPUDevice, pipeline: GPUPipelineBase, encoder: GPUEncoderType, texture: GPUTexture) {\n      const bindGroup0 = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(0),\n        entries: [\n          { binding: 0, resource: texture.createView({ baseMipLevel: 0, mipLevelCount: 1 }) },\n        ],\n      });\n      const bindGroup1 = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(1),\n        entries: [\n          { binding: 0, resource: texture.createView({ baseMipLevel: 1, mipLevelCount: 1 }) },\n        ],\n      });\n      encoder.setBindGroup(0, bindGroup0);\n      encoder.setBindGroup(1, bindGroup1);\n      return { shouldSucceed: false };\n    },\n  },\n  'can bind same view in different bindGroups': {\n    bindConfig: 'two bindgroups',\n    fn(device: GPUDevice, pipeline: GPUPipelineBase, encoder: GPUEncoderType, texture: GPUTexture) {\n      const bindGroup0 = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(0),\n        entries: [\n          { binding: 0, resource: texture.createView({ baseMipLevel: 1, mipLevelCount: 1 }) },\n        ],\n      });\n      const bindGroup1 = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(1),\n        entries: [\n          { binding: 0, resource: texture.createView({ baseMipLevel: 1, mipLevelCount: 1 }) },\n        ],\n      });\n      encoder.setBindGroup(0, bindGroup0);\n      encoder.setBindGroup(1, bindGroup1);\n      return { shouldSucceed: true };\n    },\n  },\n  'binding incompatible bindGroups then fix': {\n    bindConfig: 'one bindgroup',\n    fn(device: GPUDevice, pipeline: GPUPipelineBase, encoder: GPUEncoderType, texture: GPUTexture) {\n      const badBindGroup = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(0),\n        entries: [\n          { binding: 0, resource: texture.createView({ baseMipLevel: 0, mipLevelCount: 1 }) },\n          { binding: 1, resource: texture.createView({ baseMipLevel: 1, mipLevelCount: 1 }) },\n        ],\n      });\n      const goodBindGroup = device.createBindGroup({\n        layout: pipeline.getBindGroupLayout(0),\n        entries: [\n          { binding: 0, resource: texture.createView({ baseMipLevel: 1, mipLevelCount: 1 }) },\n          { binding: 1, resource: texture.createView({ baseMipLevel: 1, mipLevelCount: 1 }) },\n        ],\n      });\n      encoder.setBindGroup(0, badBindGroup);\n      encoder.setBindGroup(0, goodBindGroup);\n      return { shouldSucceed: true };\n    },\n  },\n};\n\nfunction createAndBindTwoBindGroupsWithDifferentViewsOfSameTexture(\n  device: GPUDevice,\n  pipeline: GPUPipelineBase,\n  encoder: GPUEncoderType,\n  texture: GPUTexture\n) {\n  const bindGroup0 = device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [{ binding: 0, resource: texture.createView({ baseMipLevel: 0, mipLevelCount: 1 }) }],\n  });\n  const bindGroup1 = device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(1),\n    entries: [{ binding: 0, resource: texture.createView({ baseMipLevel: 1, mipLevelCount: 1 }) }],\n  });\n  encoder.setBindGroup(0, bindGroup0);\n  encoder.setBindGroup(1, bindGroup1);\n}\n\nconst kBindCaseNames = keysOf(kBindCases);\n\nconst kDrawUseCases: {\n  [key: string]: (t: CompatibilityTest, encoder: GPURenderCommandsMixin) => void;\n} = {\n  draw: (_t: CompatibilityTest, encoder: GPURenderCommandsMixin) => {\n    encoder.draw(3);\n  },\n  drawIndexed: (t: CompatibilityTest, encoder: GPURenderCommandsMixin) => {\n    const indexBuffer = t.makeBufferWithContents(new Uint16Array([0, 1, 2]), GPUBufferUsage.INDEX);\n    encoder.setIndexBuffer(indexBuffer, 'uint16');\n    encoder.drawIndexed(3);\n  },\n  drawIndirect(t: CompatibilityTest, encoder: GPURenderCommandsMixin) {\n    const indirectBuffer = t.makeBufferWithContents(\n      new Uint32Array([3, 1, 0, 0]),\n      GPUBufferUsage.INDIRECT\n    );\n    encoder.drawIndirect(indirectBuffer, 0);\n  },\n  drawIndexedIndirect(t: CompatibilityTest, encoder: GPURenderCommandsMixin) {\n    const indexBuffer = t.makeBufferWithContents(new Uint16Array([0, 1, 2]), GPUBufferUsage.INDEX);\n    encoder.setIndexBuffer(indexBuffer, 'uint16');\n    const indirectBuffer = t.makeBufferWithContents(\n      new Uint32Array([3, 1, 0, 0, 0]),\n      GPUBufferUsage.INDIRECT\n    );\n    encoder.drawIndexedIndirect(indirectBuffer, 0);\n  },\n};\nconst kDrawCaseNames = keysOf(kDrawUseCases);\n\nconst kDispatchUseCases: {\n  [key: string]: (t: CompatibilityTest, encoder: GPUComputePassEncoder) => void;\n} = {\n  dispatchWorkgroups(_t: CompatibilityTest, encoder: GPUComputePassEncoder) {\n    encoder.dispatchWorkgroups(1);\n  },\n  dispatchWorkgroupsIndirect(t: CompatibilityTest, encoder: GPUComputePassEncoder) {\n    const indirectBuffer = t.makeBufferWithContents(\n      new Uint32Array([1, 1, 1]),\n      GPUBufferUsage.INDIRECT\n    );\n    encoder.dispatchWorkgroupsIndirect(indirectBuffer, 0);\n  },\n};\nconst kDispatchCaseNames = keysOf(kDispatchUseCases);\n\nfunction createResourcesForRenderPassTest(\n  t: CompatibilityTest,\n  textureType: TextureType,\n  bindConfig: BindConfig\n) {\n  const texture = t.createTextureTracked({\n    size: [2, 1, 1],\n    mipLevelCount: 2,\n    format: 'rgba8unorm',\n    usage:\n      textureType === 'storage' ? GPUTextureUsage.STORAGE_BINDING : GPUTextureUsage.TEXTURE_BINDING,\n  });\n\n  const module = getRenderShaderModule(t.device, textureType, bindConfig);\n  const pipeline = t.device.createRenderPipeline({\n    layout: 'auto',\n    vertex: {\n      module,\n      entryPoint: 'vs',\n    },\n    fragment: {\n      module,\n      entryPoint: 'fs',\n      targets: [{ format: 'rgba8unorm' }],\n    },\n  });\n\n  return { texture, pipeline };\n}\n\nfunction createResourcesForComputePassTest(\n  t: CompatibilityTest,\n  textureType: TextureType,\n  bindConfig: BindConfig\n) {\n  const texture = t.createTextureTracked({\n    size: [2, 1, 1],\n    mipLevelCount: 2,\n    format: 'rgba8unorm',\n    usage:\n      textureType === 'storage' ? GPUTextureUsage.STORAGE_BINDING : GPUTextureUsage.TEXTURE_BINDING,\n  });\n\n  const module = getComputeShaderModule(t.device, textureType, bindConfig);\n  const pipeline = t.device.createComputePipeline({\n    layout: 'auto',\n    compute: {\n      module,\n      entryPoint: 'cs',\n    },\n  });\n\n  return { texture, pipeline };\n}\n\nexport const g = makeTestGroup(CompatibilityTest);\n\ng.test('twoDifferentTextureViews,render_pass,used')\n  .desc(\n    `\nTests that you can not use 2 different views of the same texture in a render pass in compat mode.\n\n- Test you can not use incompatible views in the same bindGroup\n- Test you can not use incompatible views in different bindGroups\n- Test you can bind the same view in different bindGroups\n- Test binding incompatible bindGroups is ok as long as they are fixed before draw/dispatch\n\n  The last test is to check validation happens at the correct time (draw/dispatch) and not\n  at setBindGroup.\n    `\n  )\n  .params(u =>\n    u\n      .combine('encoderType', kRenderEncodeTypes)\n      .combine('bindCase', kBindCaseNames)\n      .combine('useCase', kDrawCaseNames)\n      .combine('textureType', kTextureTypes)\n      .filter(\n        // storage textures can't have 2 bind groups point to the same\n        // view even in non-compat. They can have different views in\n        // non-compat but not compat.\n        p =>\n          !(\n            p.textureType === 'storage' &&\n            (p.bindCase === 'can bind same view in different bindGroups' ||\n              p.bindCase === 'binding incompatible bindGroups then fix')\n          )\n      )\n  )\n  .fn(t => {\n    const { encoderType, bindCase, useCase, textureType } = t.params;\n\n    t.skipIf(\n      t.isCompatibility &&\n        textureType === 'storage' &&\n        !(t.device.limits.maxStorageBuffersInFragmentStage! > 2),\n      `device only supports maxStorageBuffersInFragmentStage(${t.device.limits.maxStorageBuffersInFragmentStage}) but test needs 2`\n    );\n\n    const { bindConfig, fn } = kBindCases[bindCase];\n    const { texture, pipeline } = createResourcesForRenderPassTest(t, textureType, bindConfig);\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setPipeline(pipeline);\n    const { shouldSucceed } = fn(t.device, pipeline, encoder, texture);\n    kDrawUseCases[useCase](t, encoder as GPURenderCommandsMixin);\n    validateFinish(!t.isCompatibility || shouldSucceed);\n  });\n\ng.test('twoDifferentTextureViews,render_pass,unused')\n  .desc(\n    `\nTests that binding 2 different views of the same texture but not using them does not generate a validation error.\n    `\n  )\n  .params(u => u.combine('encoderType', kRenderEncodeTypes).combine('textureType', kTextureTypes))\n  .fn(t => {\n    const { encoderType, textureType } = t.params;\n\n    t.skipIf(\n      t.isCompatibility &&\n        textureType === 'storage' &&\n        !(t.device.limits.maxStorageBuffersInFragmentStage! > 2)\n    );\n\n    const { texture, pipeline } = createResourcesForRenderPassTest(\n      t,\n      textureType,\n      'two bindgroups'\n    );\n    const { encoder, validateFinish } = t.createEncoder(encoderType);\n    encoder.setPipeline(pipeline);\n    createAndBindTwoBindGroupsWithDifferentViewsOfSameTexture(t.device, pipeline, encoder, texture);\n    validateFinish(true);\n  });\n\ng.test('twoDifferentTextureViews,compute_pass,used')\n  .desc(\n    `\nTests that you can not use 2 different views of the same texture in a compute pass in compat mode.\n\n- Test you can not use incompatible views in the same bindGroup\n- Test you can not use incompatible views in different bindGroups\n- Test can bind the same view in different bindGroups\n- Test that binding incompatible bindGroups is ok as long as they are fixed before draw/dispatch\n\n  The last test is to check validation happens at the correct time (draw/dispatch) and not\n  at setBindGroup.\n    `\n  )\n  .params(u =>\n    u\n      .combine('bindCase', kBindCaseNames)\n      .combine('useCase', kDispatchCaseNames)\n      .combine('textureType', kTextureTypes)\n      .filter(\n        // storage textures can't have 2 bind groups point to the same\n        // view even in non-compat. They can have different views in\n        // non-compat but not compat.\n        p =>\n          !(\n            p.textureType === 'storage' &&\n            (p.bindCase === 'can bind same view in different bindGroups' ||\n              p.bindCase === 'binding incompatible bindGroups then fix')\n          )\n      )\n  )\n  .fn(t => {\n    const { bindCase, useCase, textureType } = t.params;\n    const { bindConfig, fn } = kBindCases[bindCase];\n    const { texture, pipeline } = createResourcesForComputePassTest(t, textureType, bindConfig);\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    const { shouldSucceed } = fn(t.device, pipeline, encoder, texture);\n    kDispatchUseCases[useCase](t, encoder);\n    validateFinish(!t.isCompatibility || shouldSucceed);\n  });\n\ng.test('twoDifferentTextureViews,compute_pass,unused')\n  .desc(\n    `\nTests that binding 2 different views of the same texture but not using them does not generate a validation error.\n    `\n  )\n  .params(u => u.combine('textureType', kTextureTypes))\n  .fn(t => {\n    const { textureType } = t.params;\n    const { texture, pipeline } = createResourcesForComputePassTest(\n      t,\n      textureType,\n      'two bindgroups'\n    );\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    createAndBindTwoBindGroupsWithDifferentViewsOfSameTexture(t.device, pipeline, encoder, texture);\n    validateFinish(true);\n  });\n"],"mappings":"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"}