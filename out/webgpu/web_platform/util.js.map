{"version":3,"file":"util.js","names":["SkipTestCase","getResourcePath","keysOf","timeout","ErrorWithExtra","raceWithRejectOnTimeout","srgbToDisplayP3","convertToUnorm8","expectation","rgba8Unorm","Uint8ClampedArray","Math","round","R","G","B","A","Uint8Array","buffer","kBt601PixelValue","srgb","red","green","blue","yellow","kBt709PixelValue","makeTable","table","Object","fromEntries","entries","map","k","row","kVideoExpectedColors","bt601","bt709","kImageExpectedColors","kVideoInfo","mimeType","colorSpace","coded","topLeftColor","topRightColor","bottomLeftColor","bottomRightColor","display","kVideoNames","kPredefinedColorSpace","startPlayingAndWaitForVideo","video","callback","Promise","resolve","reject","callbackAndResolve","ex","error","message","addEventListener","event","requestVideoFrameCallback","timeWatcher","currentTime","requestAnimationFrame","loop","muted","preload","play","catch","waitForNextTask","promise","callbackHelper","waitForNextFrame","getVideoFrameFromVideoElement","test","captureStream","undefined","skip","videoTrack","getVideoTracks","trackProcessor","MediaStreamTrackProcessor","track","transformer","TransformStream","transform","videoFrame","_controller","stop","trackForCleanup","flush","controller","terminate","trackGenerator","MediaStreamTrackGenerator","kind","readable","pipeThrough","pipeTo","writable","getVideoElement","t","videoName","HTMLVideoElement","videoElement","document","createElement","videoInfo","canPlayType","videoUrl","src","timeoutMessage","promiseWithoutTimeout","captureCameraFrame","navigator","mediaDevices","getUserMedia","stream","reader","getReader","result","read","done","value","ImageCapture","imageCapture","imageBitmap","grabFrame","VideoFrame","srcObject","frame","kFourColorsInfo","kImageInfo","kImageNames","kObjectTypeFromFiles","GetSourceFromImageFile","imageName","objectTypeFromFile","imageUrl","globalThis","constructor","name","response","fetch","createImageBitmap","blob","HTMLImageElement","image","Image","decode"],"sources":["../../../src/webgpu/web_platform/util.ts"],"sourcesContent":["import { Fixture, SkipTestCase } from '../../common/framework/fixture.js';\nimport { getResourcePath } from '../../common/framework/resources.js';\nimport { keysOf } from '../../common/util/data_tables.js';\nimport { timeout } from '../../common/util/timeout.js';\nimport { ErrorWithExtra, raceWithRejectOnTimeout } from '../../common/util/util.js';\nimport { GPUTest } from '../gpu_test.js';\nimport { RGBA, srgbToDisplayP3 } from '../util/color_space_conversion.js';\n\ndeclare global {\n  interface HTMLMediaElement {\n    // Add captureStream() support for HTMLMediaElement from\n    // https://w3c.github.io/mediacapture-fromelement/#dom-htmlmediaelement-capturestream\n    captureStream(): MediaStream;\n  }\n}\n\n// MAINTENANCE_TODO: Uses raw floats as expectation in external_texture related cases has some diffs.\n// Remove this conversion utils and uses raw float data as expectation in external_textrue\n// related cases when resolve this.\nexport function convertToUnorm8(expectation: Readonly<RGBA>): Uint8Array {\n  const rgba8Unorm = new Uint8ClampedArray(4);\n  rgba8Unorm[0] = Math.round(expectation.R * 255.0);\n  rgba8Unorm[1] = Math.round(expectation.G * 255.0);\n  rgba8Unorm[2] = Math.round(expectation.B * 255.0);\n  rgba8Unorm[3] = Math.round(expectation.A * 255.0);\n\n  return new Uint8Array(rgba8Unorm.buffer);\n}\n\n// MAINTENANCE_TODO: Add helper function for BT.601 and BT.709 to remove all magic numbers.\n// Expectation values about converting video contents to sRGB color space.\n// Source video color space affects expected values.\n// The process to calculate these expected pixel values can be found:\n// https://github.com/gpuweb/cts/pull/2242#issuecomment-1430382811\n// and https://github.com/gpuweb/cts/pull/2242#issuecomment-1463273434\nconst kBt601PixelValue = {\n  srgb: {\n    red: { R: 0.972945567233341, G: 0.141794376683341, B: -0.0209589916711088, A: 1.0 },\n    green: { R: 0.248234279433399, G: 0.984810378661784, B: -0.0564701319494314, A: 1.0 },\n    blue: { R: 0.10159735826538, G: 0.135451122863674, B: 1.00262982899724, A: 1.0 },\n    yellow: { R: 0.995470750775951, G: 0.992742114518355, B: -0.0701036235167653, A: 1.0 },\n  },\n} as const;\n\nconst kBt709PixelValue = {\n  srgb: {\n    red: { R: 1.0, G: 0.0, B: 0.0, A: 1.0 },\n    green: { R: 0.0, G: 1.0, B: 0.0, A: 1.0 },\n    blue: { R: 0.0, G: 0.0, B: 1.0, A: 1.0 },\n    yellow: { R: 1.0, G: 1.0, B: 0.0, A: 1.0 },\n  },\n} as const;\n\nfunction makeTable<Table extends { readonly [K: string]: {} }>({\n  table,\n}: {\n  table: Table;\n}): {\n  readonly [F in keyof Table]: {\n    readonly [K in keyof Table[F]]: Table[F][K];\n  };\n} {\n  return Object.fromEntries(\n    Object.entries(table).map(([k, row]) => [k, { ...row }])\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ) as any;\n}\n\n// Video expected pixel value table. Finding expected pixel value\n// with video color space and dst color space.\nexport const kVideoExpectedColors = makeTable({\n  table: {\n    bt601: {\n      'display-p3': {\n        yellow: srgbToDisplayP3(kBt601PixelValue.srgb.yellow),\n        red: srgbToDisplayP3(kBt601PixelValue.srgb.red),\n        blue: srgbToDisplayP3(kBt601PixelValue.srgb.blue),\n        green: srgbToDisplayP3(kBt601PixelValue.srgb.green),\n      },\n      srgb: {\n        yellow: kBt601PixelValue.srgb.yellow,\n        red: kBt601PixelValue.srgb.red,\n        blue: kBt601PixelValue.srgb.blue,\n        green: kBt601PixelValue.srgb.green,\n      },\n    },\n    bt709: {\n      'display-p3': {\n        yellow: srgbToDisplayP3(kBt709PixelValue.srgb.yellow),\n        red: srgbToDisplayP3(kBt709PixelValue.srgb.red),\n        blue: srgbToDisplayP3(kBt709PixelValue.srgb.blue),\n        green: srgbToDisplayP3(kBt709PixelValue.srgb.green),\n      },\n      srgb: {\n        yellow: kBt709PixelValue.srgb.yellow,\n        red: kBt709PixelValue.srgb.red,\n        blue: kBt709PixelValue.srgb.blue,\n        green: kBt709PixelValue.srgb.green,\n      },\n    },\n  },\n} as const);\n\nexport const kImageExpectedColors = {\n  srgb: {\n    red: { R: 1.0, G: 0.0, B: 0.0, A: 1.0 },\n    green: { R: 0.0, G: 1.0, B: 0.0, A: 1.0 },\n    blue: { R: 0.0, G: 0.0, B: 1.0, A: 1.0 },\n    yellow: { R: 1.0, G: 1.0, B: 0.0, A: 1.0 },\n  },\n} as const;\n\n// MAINTENANCE_TODO: Add BT.2020 video in table.\n// Video container and codec defines several transform ops to apply to raw decoded frame to display.\n// Our test cases covers 'visible rect' and 'rotation'.\n// 'visible rect' is associated with the\n// video bitstream and should apply to the raw decoded frames before any transformation.\n// 'rotation' is associated with the track or presentation and should transform\n// the whole visible rect (e.g. 90-degree rotate makes visible rect of vertical video to horizontal)\n// The order to apply these transformations is below:\n\n// [raw decoded frame] ----visible rect clipping ---->[visible frame] ---rotation  ---> present\n//      ^                                                                   ^\n//      |                                                                   |\n// coded size                                                           display size\n// The table holds test videos meta infos, including mimeType to check browser compatibility\n// video color space, raw frame content layout and the frame displayed layout.\nexport const kVideoInfo = makeTable({\n  table: {\n    'four-colors-vp8-bt601.webm': {\n      mimeType: 'video/webm; codecs=vp8',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-h264-bt601.mp4': {\n      mimeType: 'video/mp4; codecs=avc1.4d400c',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-vp9-bt601.webm': {\n      mimeType: 'video/webm; codecs=vp9',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-vp9-bt709.webm': {\n      mimeType: 'video/webm; codecs=vp9',\n      colorSpace: 'bt709',\n      coded: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    // video coded content has been rotate\n    'four-colors-h264-bt601-rotate-90.mp4': {\n      mimeType: 'video/mp4; codecs=avc1.4d400c',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'red',\n        topRightColor: 'green',\n        bottomLeftColor: 'yellow',\n        bottomRightColor: 'blue',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-h264-bt601-rotate-180.mp4': {\n      mimeType: 'video/mp4; codecs=avc1.4d400c',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'green',\n        topRightColor: 'blue',\n        bottomLeftColor: 'red',\n        bottomRightColor: 'yellow',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-h264-bt601-rotate-270.mp4': {\n      mimeType: 'video/mp4; codecs=avc1.4d400c',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'blue',\n        topRightColor: 'yellow',\n        bottomLeftColor: 'green',\n        bottomRightColor: 'red',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-vp9-bt601-rotate-90.mp4': {\n      mimeType: 'video/mp4; codecs=vp09.00.10.08',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'red',\n        topRightColor: 'green',\n        bottomLeftColor: 'yellow',\n        bottomRightColor: 'blue',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-vp9-bt601-rotate-180.mp4': {\n      mimeType: 'video/mp4; codecs=vp09.00.10.08',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'green',\n        topRightColor: 'blue',\n        bottomLeftColor: 'red',\n        bottomRightColor: 'yellow',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-vp9-bt601-rotate-270.mp4': {\n      mimeType: 'video/mp4; codecs=vp09.00.10.08',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'blue',\n        topRightColor: 'yellow',\n        bottomLeftColor: 'green',\n        bottomRightColor: 'red',\n      },\n      display: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n    },\n    'four-colors-h264-bt601-hflip.mp4': {\n      mimeType: 'video/mp4; codecs=avc1.4d400c',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n      display: {\n        topLeftColor: 'red',\n        topRightColor: 'yellow',\n        bottomLeftColor: 'green',\n        bottomRightColor: 'blue',\n      },\n    },\n    'four-colors-h264-bt601-vflip.mp4': {\n      mimeType: 'video/mp4; codecs=avc1.4d400c',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n      display: {\n        topLeftColor: 'blue',\n        topRightColor: 'green',\n        bottomLeftColor: 'yellow',\n        bottomRightColor: 'red',\n      },\n    },\n    'four-colors-vp9-bt601-hflip.mp4': {\n      mimeType: 'video/mp4; codecs=vp09.00.10.08',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n      display: {\n        topLeftColor: 'red',\n        topRightColor: 'yellow',\n        bottomLeftColor: 'green',\n        bottomRightColor: 'blue',\n      },\n    },\n    'four-colors-vp9-bt601-vflip.mp4': {\n      mimeType: 'video/mp4; codecs=vp09.00.10.08',\n      colorSpace: 'bt601',\n      coded: {\n        topLeftColor: 'yellow',\n        topRightColor: 'red',\n        bottomLeftColor: 'blue',\n        bottomRightColor: 'green',\n      },\n      display: {\n        topLeftColor: 'blue',\n        topRightColor: 'green',\n        bottomLeftColor: 'yellow',\n        bottomRightColor: 'red',\n      },\n    },\n  },\n} as const);\n\ntype VideoName = keyof typeof kVideoInfo;\nexport const kVideoNames: readonly VideoName[] = keysOf(kVideoInfo);\n\nexport const kPredefinedColorSpace = ['display-p3', 'srgb'] as const;\n\n/**\n * Starts playing a video and waits for it to be consumable.\n * Returns a promise which resolves after `callback` (which may be async) completes.\n *\n * @param video An HTML5 Video element.\n * @param callback Function to call when video is ready.\n *\n * Adapted from https://github.com/KhronosGroup/WebGL/blob/main/sdk/tests/js/webgl-test-utils.js\n */\nexport function startPlayingAndWaitForVideo(\n  video: HTMLVideoElement,\n  callback: () => unknown | Promise<unknown>\n): Promise<void> {\n  return raceWithRejectOnTimeout(\n    new Promise((resolve, reject) => {\n      const callbackAndResolve = () =>\n        void (async () => {\n          try {\n            await callback();\n            resolve();\n          } catch (ex) {\n            reject(ex);\n          }\n        })();\n      if (video.error) {\n        reject(\n          new ErrorWithExtra('Video.error: ' + video.error.message, () => ({ error: video.error }))\n        );\n        return;\n      }\n\n      video.addEventListener(\n        'error',\n        event =>\n          reject(\n            new ErrorWithExtra('Video received \"error\" event, message: ' + event.message, () => ({\n              event,\n            }))\n          ),\n        true\n      );\n\n      if (video.requestVideoFrameCallback) {\n        video.requestVideoFrameCallback(() => {\n          callbackAndResolve();\n        });\n      } else {\n        // If requestVideoFrameCallback isn't available, check each frame if the video has advanced.\n        const timeWatcher = () => {\n          if (video.currentTime > 0) {\n            callbackAndResolve();\n          } else {\n            requestAnimationFrame(timeWatcher);\n          }\n        };\n        timeWatcher();\n      }\n\n      video.loop = true;\n      video.muted = true;\n      video.preload = 'auto';\n      video.play().catch(reject);\n    }),\n    2000,\n    'Video never became ready'\n  );\n}\n\n/**\n * Fire a `callback` when the script animation reaches a new frame.\n * Returns a promise which resolves after `callback` (which may be async) completes.\n */\nexport function waitForNextTask(callback: () => unknown | Promise<unknown>): Promise<void> {\n  const { promise, callbackAndResolve } = callbackHelper(callback, 'wait for next task timed out');\n  timeout(() => {\n    callbackAndResolve();\n  }, 0);\n\n  return promise;\n}\n\n/**\n * Fire a `callback` when the video reaches a new frame.\n * Returns a promise which resolves after `callback` (which may be async) completes.\n *\n * MAINTENANCE_TODO: Find a way to implement this for browsers without requestVideoFrameCallback as\n * well, similar to the timeWatcher path in startPlayingAndWaitForVideo. If that path is proven to\n * work well, we can consider getting rid of the requestVideoFrameCallback path.\n */\nexport function waitForNextFrame(\n  video: HTMLVideoElement,\n  callback: () => unknown | Promise<unknown>\n): Promise<void> {\n  const { promise, callbackAndResolve } = callbackHelper(callback, 'waitForNextFrame timed out');\n\n  if ('requestVideoFrameCallback' in video) {\n    video.requestVideoFrameCallback(() => {\n      callbackAndResolve();\n    });\n  } else {\n    throw new SkipTestCase('waitForNextFrame currently requires requestVideoFrameCallback');\n  }\n\n  return promise;\n}\n\nexport async function getVideoFrameFromVideoElement(\n  test: Fixture,\n  video: HTMLVideoElement\n): Promise<VideoFrame> {\n  if (video.captureStream === undefined) {\n    test.skip('HTMLVideoElement.captureStream is not supported');\n  }\n\n  return raceWithRejectOnTimeout(\n    new Promise<VideoFrame>(resolve => {\n      const videoTrack: MediaStreamVideoTrack = video\n        .captureStream()\n        .getVideoTracks()[0] as MediaStreamVideoTrack;\n      const trackProcessor: MediaStreamTrackProcessor<VideoFrame> = new MediaStreamTrackProcessor({\n        track: videoTrack,\n      });\n      const transformer: TransformStream = new TransformStream({\n        transform(videoFrame, _controller) {\n          videoTrack.stop();\n          test.trackForCleanup(videoFrame);\n          resolve(videoFrame);\n        },\n        flush(controller) {\n          controller.terminate();\n        },\n      });\n      const trackGenerator: MediaStreamTrackGenerator<VideoFrame> = new MediaStreamTrackGenerator({\n        kind: 'video',\n      });\n      trackProcessor.readable\n        .pipeThrough(transformer)\n        .pipeTo(trackGenerator.writable)\n        .catch(() => {});\n    }),\n    2000,\n    'Video never became ready'\n  );\n}\n\n/**\n * Create HTMLVideoElement based on VideoName. Check whether video is playable in current\n * browser environment.\n * Returns a HTMLVideoElement.\n *\n * @param t: GPUTest that requires getting HTMLVideoElement\n * @param videoName: Required video name\n *\n */\nexport function getVideoElement(t: GPUTest, videoName: VideoName): HTMLVideoElement {\n  if (typeof HTMLVideoElement === 'undefined') {\n    t.skip('HTMLVideoElement not available');\n  }\n\n  const videoElement = document.createElement('video');\n  const videoInfo = kVideoInfo[videoName];\n\n  if (videoElement.canPlayType(videoInfo.mimeType) === '') {\n    t.skip('Video codec is not supported');\n  }\n\n  const videoUrl = getResourcePath(videoName);\n  videoElement.src = videoUrl;\n\n  t.trackForCleanup(videoElement);\n\n  return videoElement;\n}\n\n/**\n * Helper for doing something inside of a (possibly async) callback (directly, not in a following\n * microtask), and returning a promise when the callback is done.\n * MAINTENANCE_TODO: Use this in startPlayingAndWaitForVideo (and make sure it works).\n */\nfunction callbackHelper(\n  callback: () => unknown | Promise<unknown>,\n  timeoutMessage: string\n): { promise: Promise<void>; callbackAndResolve: () => void } {\n  let callbackAndResolve: () => void;\n\n  const promiseWithoutTimeout = new Promise<void>((resolve, reject) => {\n    callbackAndResolve = () =>\n      void (async () => {\n        try {\n          await callback(); // catches both exceptions and rejections\n          resolve();\n        } catch (ex) {\n          reject(ex);\n        }\n      })();\n  });\n  const promise = raceWithRejectOnTimeout(promiseWithoutTimeout, 2000, timeoutMessage);\n  return { promise, callbackAndResolve: callbackAndResolve! };\n}\n\n/**\n * Create VideoFrame from camera captured frame. Check whether browser environment has\n * camera supported.\n * Returns a webcodec VideoFrame.\n *\n * @param test: GPUTest that requires getting VideoFrame\n *\n */\nexport async function captureCameraFrame(test: GPUTest): Promise<VideoFrame> {\n  if (\n    typeof navigator.mediaDevices === 'undefined' ||\n    typeof navigator.mediaDevices.getUserMedia === 'undefined'\n  ) {\n    test.skip(\"Browser doesn't support capture frame from camera.\");\n  }\n\n  const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n  const track = stream.getVideoTracks()[0] as MediaStreamVideoTrack;\n\n  if (!track) {\n    test.skip(\"Doesn't have valid camera captured stream for testing.\");\n  }\n\n  // Use MediaStreamTrackProcessor and ReadableStream to generate video frame directly.\n  if (typeof MediaStreamTrackProcessor !== 'undefined') {\n    const trackProcessor = new MediaStreamTrackProcessor({ track });\n    const reader = trackProcessor.readable.getReader();\n    const result = await reader.read();\n    if (result.done) {\n      test.skip('MediaStreamTrackProcessor: Cannot get valid frame from readable stream.');\n    }\n\n    return result.value;\n  }\n\n  // Fallback to ImageCapture if MediaStreamTrackProcessor not supported. Using grabFrame() to\n  // generate imageBitmap and creating video frame from it.\n  if (typeof ImageCapture !== 'undefined') {\n    const imageCapture = new ImageCapture(track);\n    const imageBitmap = await imageCapture.grabFrame();\n    return new VideoFrame(imageBitmap);\n  }\n\n  // Fallback to using HTMLVideoElement to do capture.\n  if (typeof HTMLVideoElement === 'undefined') {\n    test.skip('Try to use HTMLVideoElement do capture but HTMLVideoElement not available.');\n  }\n\n  const video = document.createElement('video');\n  video.srcObject = stream;\n\n  const frame = await getVideoFrameFromVideoElement(test, video);\n  test.trackForCleanup(frame);\n\n  return frame;\n}\n\nconst kFourColorsInfo = {\n  display: {\n    topLeftColor: 'yellow',\n    topRightColor: 'red',\n    bottomLeftColor: 'blue',\n    bottomRightColor: 'green',\n  },\n} as const;\n\nexport const kImageInfo = makeTable({\n  table: {\n    'four-colors.jpg': kFourColorsInfo,\n    'four-colors-rotate-90-cw.jpg': kFourColorsInfo,\n    'four-colors-rotate-180-cw.jpg': kFourColorsInfo,\n    'four-colors-rotate-270-cw.jpg': kFourColorsInfo,\n  },\n} as const);\n\ntype ImageName = keyof typeof kImageInfo;\nexport const kImageNames: readonly ImageName[] = keysOf(kImageInfo);\n\ntype ObjectTypeFromFile = (typeof kObjectTypeFromFiles)[number];\nexport const kObjectTypeFromFiles = [\n  'ImageBitmap-from-Blob',\n  'ImageBitmap-from-Image',\n  'Image',\n] as const;\n\n/**\n * Load image file(e.g. *.jpg) from ImageBitmap, blob or HTMLImageElement. And\n * convert the result to valid source that GPUCopyExternalImageSource supported.\n */\nexport async function GetSourceFromImageFile(\n  test: GPUTest,\n  imageName: ImageName,\n  objectTypeFromFile: ObjectTypeFromFile\n): Promise<ImageBitmap | HTMLImageElement> {\n  const imageUrl = getResourcePath(imageName);\n\n  switch (objectTypeFromFile) {\n    case 'ImageBitmap-from-Blob': {\n      // MAINTENANCE_TODO: resource folder path when using service worker is not correct. Return\n      // the correct path to load resource in correct place.\n      // The wrong path: /out/webgpu/webworker/web_platform/copyToTexture/resources\n      if (globalThis.constructor.name === 'ServiceWorkerGlobalScope') {\n        test.skip('Try to load image resource from serivce worker but the path is not correct.');\n      }\n      // Load image file through fetch.\n      const response = await fetch(imageUrl);\n      return createImageBitmap(await response.blob());\n    }\n    case 'ImageBitmap-from-Image':\n    case 'Image': {\n      // Skip test if HTMLImageElement is not available, e.g. in worker.\n      if (typeof HTMLImageElement === 'undefined') {\n        test.skip(\n          'Try to use HTMLImage do image file decoding but HTMLImageElement not available.'\n        );\n      }\n\n      // Load image file through HTMLImageElement.\n      const image = new Image();\n      image.src = imageUrl;\n      await raceWithRejectOnTimeout(image.decode(), 5000, 'decode image timeout');\n      if (objectTypeFromFile === 'Image') {\n        return image;\n      }\n\n      return createImageBitmap(image);\n    }\n  }\n}\n"],"mappings":"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"}