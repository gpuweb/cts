{"version":3,"file":"test_group.spec.js","names":["description","makeTestGroup","TestQueryMultiFile","kQueryMaxLength","makeTestGroupForUnitTesting","assert","TestGroupTest","UnitTest","g","test","fn","t0","seen","count","_t","paramsSimple","a","run","expect","Counter","t","doNestedThrow1","Error","doNestedThrow2","fail","res","search","size","logs","values","undefined","some","l","toJSON","length","shouldThrow","validate","builder","params","u","expandWithParams","b","_b","badChars","Array","from","char","name","message","long","join","fileQuery","unimplemented","x","JSON","stringify","badChar","paramsSubcasesOnly","combineWithParams","gen","ret","beginSubcases","result","every","v","status","desc","combine","allSkip","skipIf","do","expectedStatus","useSubcases","useDOMException","b1","b2","DOMException","TypeError","shouldReject"],"sources":["../../src/unittests/test_group.spec.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/require-await */\nexport const description = `\nUnit tests for TestGroup.\n`;\n\nimport { Fixture } from '../common/framework/fixture.js';\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { TestQueryMultiFile } from '../common/internal/query/query.js';\nimport { kQueryMaxLength, makeTestGroupForUnitTesting } from '../common/internal/test_group.js';\nimport { assert } from '../common/util/util.js';\n\nimport { TestGroupTest } from './test_group_test.js';\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(TestGroupTest);\n\ng.test('UnitTest_fixture').fn(async t0 => {\n  let seen = 0;\n  function count(_t: Fixture): void {\n    seen++;\n  }\n\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('test').fn(count);\n  g.test('testp')\n    .paramsSimple([{ a: 1 }])\n    .fn(count);\n\n  await t0.run(g);\n  t0.expect(seen === 2);\n});\n\ng.test('custom_fixture').fn(async t0 => {\n  let seen = 0;\n  class Counter extends UnitTest {\n    count(): void {\n      seen++;\n    }\n  }\n\n  const g = makeTestGroupForUnitTesting(Counter);\n\n  g.test('test').fn(t => {\n    t.count();\n  });\n  g.test('testp')\n    .paramsSimple([{ a: 1 }])\n    .fn(t => {\n      t.count();\n    });\n\n  await t0.run(g);\n  t0.expect(seen === 2);\n});\n\ng.test('stack').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  const doNestedThrow1 = () => {\n    throw new Error('goodbye');\n  };\n\n  const doNestedThrow2 = () => doNestedThrow1();\n\n  g.test('fail').fn(t => {\n    t.fail();\n  });\n  g.test('throw').fn(_t => {\n    throw new Error('hello');\n  });\n  g.test('throw_nested').fn(_t => {\n    doNestedThrow2();\n  });\n\n  const res = await t0.run(g);\n\n  const search = /unittests[/\\\\]test_group\\.spec\\.[tj]s/;\n  t0.expect(res.size > 0);\n  for (const { logs } of res.values()) {\n    assert(logs !== undefined, 'expected logs');\n    t0.expect(logs.some(l => search.test(l.toJSON())));\n    t0.expect(search.test(logs[logs.length - 1].toJSON()));\n  }\n});\n\ng.test('no_fn').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('missing');\n\n  t.shouldThrow('Error', () => {\n    g.validate(new TestQueryMultiFile('s', ['f']));\n  });\n});\n\ng.test('duplicate_test_name').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n  g.test('abc').fn(() => {});\n\n  t.shouldThrow('Error', () => {\n    g.test('abc').fn(() => {});\n  });\n});\n\ng.test('duplicate_test_params,none').fn(() => {\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .paramsSimple([])\n      .fn(() => {});\n    g.validate(new TestQueryMultiFile('s', ['f']));\n  }\n\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc').fn(() => {});\n    g.validate(new TestQueryMultiFile('s', ['f']));\n  }\n\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .paramsSimple([\n        { a: 1 }, //\n      ])\n      .fn(() => {});\n    g.validate(new TestQueryMultiFile('s', ['f']));\n  }\n});\n\ng.test('duplicate_test_params,basic').fn(t => {\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    const builder = g.test('abc');\n    t.shouldThrow('Error', () => {\n      builder.paramsSimple([\n        { a: 1 }, //\n        { a: 1 },\n      ]);\n      g.validate(new TestQueryMultiFile('s', ['f']));\n    });\n  }\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .params(u =>\n        u.expandWithParams(() => [\n          { a: 1 }, //\n          { a: 1 },\n        ])\n      )\n      .fn(() => {});\n    t.shouldThrow('Error', () => {\n      g.validate(new TestQueryMultiFile('s', ['f']));\n    });\n  }\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .paramsSimple([\n        { a: 1, b: 3 }, //\n        { b: 3, a: 1 },\n      ])\n      .fn(() => {});\n    t.shouldThrow('Error', () => {\n      g.validate(new TestQueryMultiFile('s', ['f']));\n    });\n  }\n});\n\ng.test('duplicate_test_params,with_different_private_params').fn(t => {\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    const builder = g.test('abc');\n    t.shouldThrow('Error', () => {\n      builder.paramsSimple([\n        { a: 1, _b: 1 }, //\n        { a: 1, _b: 2 },\n      ]);\n    });\n  }\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .params(u =>\n        u.expandWithParams(() => [\n          { a: 1, _b: 1 }, //\n          { a: 1, _b: 2 },\n        ])\n      )\n      .fn(() => {});\n    t.shouldThrow('Error', () => {\n      g.validate(new TestQueryMultiFile('s', ['f']));\n    });\n  }\n});\n\ng.test('invalid_test_name').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  const badChars = Array.from('\"`~@#$+=\\\\|!^&*[]<>{}-\\'. ');\n  for (const char of badChars) {\n    const name = 'a' + char + 'b';\n    t.shouldThrow(\n      'Error',\n      () => {\n        g.test(name).fn(() => {});\n      },\n      { message: name }\n    );\n  }\n});\n\ng.test('long_test_query,long_test_name').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  const long = Array(kQueryMaxLength - 5).join('a');\n\n  const fileQuery = new TestQueryMultiFile('s', ['f']);\n  g.test(long).unimplemented();\n  g.validate(fileQuery);\n\n  g.test(long + 'a').unimplemented();\n  t.shouldThrow(\n    'Error',\n    () => {\n      g.validate(fileQuery);\n    },\n    { message: long }\n  );\n});\n\ng.test('long_case_query,long_test_name').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  const long = Array(kQueryMaxLength - 5).join('a');\n\n  const fileQuery = new TestQueryMultiFile('s', ['f']);\n  g.test(long).fn(() => {});\n  g.validate(fileQuery);\n\n  g.test(long + 'a').fn(() => {});\n  t.shouldThrow(\n    'Error',\n    () => {\n      g.validate(fileQuery);\n    },\n    { message: long }\n  );\n});\n\ng.test('long_case_query,long_case_name').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  const long = Array(kQueryMaxLength - 9).join('a');\n\n  const fileQuery = new TestQueryMultiFile('s', ['f']);\n  g.test('t')\n    .paramsSimple([{ x: long }])\n    .fn(() => {});\n  g.validate(fileQuery);\n\n  g.test('u')\n    .paramsSimple([{ x: long + 'a' }])\n    .fn(() => {});\n  t.shouldThrow(\n    'Error',\n    () => {\n      g.validate(fileQuery);\n    },\n    { message: long }\n  );\n});\n\ng.test('param_value,valid').fn(() => {\n  const g = makeTestGroup(UnitTest);\n  g.test('a').paramsSimple([{ x: JSON.stringify({ a: 1, b: 2 }) }]);\n});\n\ng.test('param_value,invalid').fn(t => {\n  for (const badChar of ';=*') {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    const builder = g.test('a');\n    t.shouldThrow('Error', () => {\n      builder.paramsSimple([{ badChar }]);\n    });\n  }\n});\n\ng.test('subcases').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n  g.test('a')\n    .paramsSubcasesOnly(u =>\n      u //\n        .combineWithParams([{ a: 1 }])\n    )\n    .fn(t => {\n      t.expect(t.params.a === 1, 'a must be 1');\n    });\n\n  function* gen({ a, b }: { a?: number; b?: number }) {\n    if (b === 2) {\n      yield { ret: 2 };\n    } else if (a === 1) {\n      yield { ret: 1 };\n    } else {\n      yield { ret: -1 };\n    }\n  }\n  g.test('b')\n    .params(u =>\n      u\n        .combineWithParams([{ a: 1 }, { b: 2 }])\n        .beginSubcases()\n        .expandWithParams(gen)\n    )\n    .fn(t => {\n      const { a, b, ret } = t.params;\n      t.expect((a === 1 && ret === 1) || (b === 2 && ret === 2));\n    });\n\n  const result = await t0.run(g);\n  t0.expect(Array.from(result.values()).every(v => v.status === 'pass'));\n});\n\ng.test('subcases,skip')\n  .desc(\n    'If all tests are skipped then status is \"skip\". If at least one test passed, status is \"pass\"'\n  )\n  .params(u => u.combine('allSkip', [false, true]))\n  .fn(async t0 => {\n    const { allSkip } = t0.params;\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('a')\n      .params(u => u.beginSubcases().combine('do', ['pass', 'skip', 'pass']))\n      .fn(t => {\n        t.skipIf(allSkip || t.params.do === 'skip');\n      });\n    const result = await t0.run(g);\n    const values = Array.from(result.values());\n    t0.expect(values.length === 1);\n    const expectedStatus = allSkip ? 'skip' : 'pass';\n    t0.expect(\n      values[0].status === expectedStatus,\n      `expect: ${values[0].status} === ${expectedStatus}, allSkip: ${allSkip}`\n    );\n  });\n\ng.test('exceptions')\n  .params(u =>\n    u\n      .combine('useSubcases', [false, true]) //\n      .combine('useDOMException', [false, true])\n  )\n  .fn(async t0 => {\n    const { useSubcases, useDOMException } = t0.params;\n    const g = makeTestGroupForUnitTesting(UnitTest);\n\n    const b1 = g.test('a');\n    let b2;\n    if (useSubcases) {\n      b2 = b1.paramsSubcasesOnly(u => u);\n    } else {\n      b2 = b1.params(u => u);\n    }\n    b2.fn(_t => {\n      if (useDOMException) {\n        throw new DOMException('Message!', 'Name!');\n      } else {\n        throw new Error('Message!');\n      }\n    });\n\n    const result = await t0.run(g);\n    const values = Array.from(result.values());\n    t0.expect(values.length === 1);\n    t0.expect(values[0].status === 'fail');\n  });\n\ng.test('throws').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('a').fn(_t => {\n    throw new Error();\n  });\n\n  const result = await t0.run(g);\n  const values = Array.from(result.values());\n  t0.expect(values.length === 1);\n  t0.expect(values[0].status === 'fail');\n});\n\ng.test('shouldThrow').fn(async t0 => {\n  t0.shouldThrow('TypeError', () => {\n    throw new TypeError();\n  });\n\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('a').fn(t => {\n    t.shouldThrow('Error', () => {\n      throw new TypeError();\n    });\n  });\n\n  const result = await t0.run(g);\n  const values = Array.from(result.values());\n  t0.expect(values.length === 1);\n  t0.expect(values[0].status === 'fail');\n});\n\ng.test('shouldReject').fn(async t0 => {\n  t0.shouldReject(\n    'TypeError',\n    (async () => {\n      throw new TypeError();\n    })()\n  );\n\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('a').fn(t => {\n    t.shouldReject(\n      'Error',\n      (async () => {\n        throw new TypeError();\n      })()\n    );\n  });\n\n  const result = await t0.run(g);\n  // Fails even though shouldReject doesn't fail until after the test function ends\n  const values = Array.from(result.values());\n  t0.expect(values.length === 1);\n  t0.expect(values[0].status === 'fail');\n});\n"],"mappings":"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"}